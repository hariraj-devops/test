/*
 * Copyright (C) 2017-2019 Dremio Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
lexer grammar DremioLexer;

A : [aA]  ;
ABS : A B S  ;
ABSENT : A B S E N T  ;
ABSOLUTE : A B S O L U T E  ;
ACTION : A C T I O N  ;
ADA : A D A  ;
ADD : A D D  ;
ADMIN : A D M I N  ;
AFTER : A F T E R  ;
ALL : A L L  ;
ALLOCATE : A L L O C A T E  ;
ALLOW : A L L O W  ;
ALTER : A L T E R  ;
ALWAYS : A L W A Y S  ;
AND : A N D  ;
ANY : A N Y  ;
APPLY : A P P L Y  ;
ARE : A R E  ;
ARRAY : A R R A Y  ;
ARRAY_MAX_CARDINALITY : A R R A Y '_' M A X '_' C A R D I N A L I T Y  ;
AS : A S  ;
ASC : A S C  ;
ASENSITIVE : A S E N S I T I V E  ;
ASSERTION : A S S E R T I O N  ;
ASSIGNMENT : A S S I G N M E N T  ;
ASYMMETRIC : A S Y M M E T R I C  ;
AT : A T  ;
ATOMIC : A T O M I C  ;
ATTRIBUTE : A T T R I B U T E  ;
ATTRIBUTES : A T T R I B U T E S  ;
AUTHORIZATION : A U T H O R I Z A T I O N  ;
AVG : A V G  ;
BEFORE : B E F O R E  ;
BEGIN : B E G I N  ;
BEGIN_FRAME : B E G I N '_' F R A M E  ;
BEGIN_PARTITION : B E G I N '_' P A R T I T I O N  ;
BERNOULLI : B E R N O U L L I  ;
BETWEEN : B E T W E E N  ;
BIGINT : B I G I N T  ;
BINARY : B I N A R Y  ;
BIT : B I T  ;
BLOB : B L O B  ;
BOOLEAN : B O O L E A N  ;
BOTH : B O T H  ;
BREADTH : B R E A D T H  ;
BY : B Y  ;
C : [cC]  ;
CALL : C A L L  ;
CALLED : C A L L E D  ;
CARDINALITY : C A R D I N A L I T Y  ;
CASCADE : C A S C A D E  ;
CASCADED : C A S C A D E D  ;
CASE : C A S E  ;
CAST : C A S T  ;
CATALOG : C A T A L O G  ;
CATALOG_NAME : C A T A L O G '_' N A M E  ;
CEIL : C E I L  ;
CEILING : C E I L I N G  ;
CENTURY : C E N T U R Y  ;
CHAIN : C H A I N  ;
CHAR : C H A R  ;
CHAR_LENGTH : C H A R '_' L E N G T H  ;
CHARACTER : C H A R A C T E R  ;
CHARACTER_LENGTH : C H A R A C T E R '_' L E N G T H  ;
CHARACTER_SET_CATALOG : C H A R A C T E R '_' S E T '_' C A T A L O G  ;
CHARACTER_SET_NAME : C H A R A C T E R '_' S E T '_' N A M E  ;
CHARACTER_SET_SCHEMA : C H A R A C T E R '_' S E T '_' S C H E M A  ;
CHARACTERISTICS : C H A R A C T E R I S T I C S  ;
CHARACTERS : C H A R A C T E R S  ;
CHECK : C H E C K  ;
CLASSIFIER : C L A S S I F I E R  ;
CLASS_ORIGIN : C L A S S '_' O R I G I N  ;
CLOB : C L O B  ;
CLOSE : C L O S E  ;
COALESCE : C O A L E S C E  ;
COBOL : C O B O L  ;
COLLATE : C O L L A T E  ;
COLLATION : C O L L A T I O N  ;
COLLATION_CATALOG : C O L L A T I O N '_' C A T A L O G  ;
COLLATION_NAME : C O L L A T I O N '_' N A M E  ;
COLLATION_SCHEMA : C O L L A T I O N '_' S C H E M A  ;
COLLECT : C O L L E C T  ;
COLUMN : C O L U M N  ;
COLUMN_NAME : C O L U M N '_' N A M E  ;
COMMAND_FUNCTION : C O M M A N D '_' F U N C T I O N  ;
COMMAND_FUNCTION_CODE : C O M M A N D '_' F U N C T I O N '_' C O D E  ;
COMMIT : C O M M I T  ;
COMMITTED : C O M M I T T E D  ;
CONDITION : C O N D I T I O N  ;
CONDITIONAL : C O N D I T I O N A L  ;
CONDITION_NUMBER : C O N D I T I O N '_' N U M B E R  ;
CONNECT : C O N N E C T  ;
CONNECTION : C O N N E C T I O N  ;
CONNECTION_NAME : C O N N E C T I O N '_' N A M E  ;
CONSTRAINT : C O N S T R A I N T  ;
CONSTRAINT_CATALOG : C O N S T R A I N T '_' C A T A L O G  ;
CONSTRAINT_NAME : C O N S T R A I N T '_' N A M E  ;
CONSTRAINT_SCHEMA : C O N S T R A I N T '_' S C H E M A  ;
CONSTRAINTS : C O N S T R A I N T S  ;
CONSTRUCTOR : C O N S T R U C T O R  ;
CONTAINS : C O N T A I N S  ;
CONTINUE : C O N T I N U E  ;
CONVERT : C O N V E R T  ;
CORR : C O R R  ;
CORRESPONDING : C O R R E S P O N D I N G  ;
COUNT : C O U N T  ;
COVAR_POP : C O V A R '_' P O P  ;
COVAR_SAMP : C O V A R '_' S A M P  ;
CREATE : C R E A T E  ;
CROSS : C R O S S  ;
CUBE : C U B E  ;
CUME_DIST : C U M E '_' D I S T  ;
CURRENT : C U R R E N T  ;
CURRENT_CATALOG : C U R R E N T '_' C A T A L O G  ;
CURRENT_DATE : C U R R E N T '_' D A T E  ;
CURRENT_DEFAULT_TRANSFORM_GROUP : C U R R E N T '_' D E F A U L T '_' T R A N S F O R M '_' G R O U P  ;
CURRENT_PATH : C U R R E N T '_' P A T H  ;
CURRENT_ROLE : C U R R E N T '_' R O L E  ;
CURRENT_ROW : C U R R E N T '_' R O W  ;
CURRENT_SCHEMA : C U R R E N T '_' S C H E M A  ;
CURRENT_TIME : C U R R E N T '_' T I M E  ;
CURRENT_TIMESTAMP : C U R R E N T '_' T I M E S T A M P  ;
CURRENT_TRANSFORM_GROUP_FOR_TYPE : C U R R E N T '_' T R A N S F O R M '_' G R O U P '_' F O R '_' T Y P E  ;
CURRENT_USER : C U R R E N T '_' U S E R  ;
CURSOR : C U R S O R  ;
CURSOR_NAME : C U R S O R '_' N A M E  ;
CYCLE : C Y C L E  ;
DATA : D A T A  ;
DATABASE : D A T A B A S E  ;
DATE : D A T E  ;
DATETIME_INTERVAL_CODE : D A T E T I M E '_' I N T E R V A L '_' C O D E  ;
DATETIME_INTERVAL_PRECISION : D A T E T I M E '_' I N T E R V A L '_' P R E C I S I O N  ;
DAY : D A Y  ;
DEALLOCATE : D E A L L O C A T E  ;
DEC : D E C  ;
DECADE : D E C A D E  ;
DECIMAL : D E C I M A L  ;
DECLARE : D E C L A R E  ;
DEFAULT_ : D E F A U L T  ;
DEFAULTS : D E F A U L T S  ;
DEFERRABLE : D E F E R R A B L E  ;
DEFERRED : D E F E R R E D  ;
DEFINE : D E F I N E  ;
DEFINED : D E F I N E D  ;
DEFINER : D E F I N E R  ;
DEGREE : D E G R E E  ;
DELETE : D E L E T E  ;
DENSE_RANK : D E N S E '_' R A N K  ;
DEPTH : D E P T H  ;
DEREF : D E R E F  ;
DERIVED : D E R I V E D  ;
DESC : D E S C  ;
DESCRIBE : D E S C R I B E  ;
DESCRIPTION : D E S C R I P T I O N  ;
DESCRIPTOR : D E S C R I P T O R  ;
DETERMINISTIC : D E T E R M I N I S T I C  ;
DIAGNOSTICS : D I A G N O S T I C S  ;
DISALLOW : D I S A L L O W  ;
DISCONNECT : D I S C O N N E C T  ;
DISPATCH : D I S P A T C H  ;
DISTINCT : D I S T I N C T  ;
DOMAIN : D O M A I N  ;
DOUBLE : D O U B L E  ;
DOW : D O W  ;
DOY : D O Y  ;
DROP : D R O P  ;
DYNAMIC : D Y N A M I C  ;
DYNAMIC_FUNCTION : D Y N A M I C '_' F U N C T I O N  ;
DYNAMIC_FUNCTION_CODE : D Y N A M I C '_' F U N C T I O N '_' C O D E  ;
EACH : E A C H  ;
ELEMENT : E L E M E N T  ;
ELSE : E L S E  ;
EMPTY : E M P T Y  ;
ENCODING : E N C O D I N G  ;
END : E N D  ;
END_EXEC : E N D '-' E X E C  ;
END_FRAME : E N D '_' F R A M E  ;
END_PARTITION : E N D '_' P A R T I T I O N  ;
EPOCH : E P O C H  ;
EQUALS : E Q U A L S  ;
ERROR : E R R O R  ;
ESCAPE : E S C A P E  ;
EVERY : E V E R Y  ;
EXCEPT : E X C E P T  ;
EXCEPTION : E X C E P T I O N  ;
EXCLUDE : E X C L U D E  ;
EXCLUDING : E X C L U D I N G  ;
EXEC : E X E C  ;
EXECUTE : E X E C U T E  ;
EXISTS : E X I S T S  ;
EXP : E X P  ;
EXPLAIN : E X P L A I N  ;
EXTEND : E X T E N D  ;
EXTERNAL : E X T E R N A L  ;
EXTRACT : E X T R A C T  ;
FALSE : F A L S E  ;
FETCH : F E T C H  ;
FILTER : F I L T E R  ;
FINAL : F I N A L  ;
FIRST : F I R S T  ;
FIRST_VALUE : F I R S T '_' V A L U E  ;
FLOAT : F L O A T  ;
FLOOR : F L O O R  ;
FOLLOWING : F O L L O W I N G  ;
FOR : F O R  ;
FORMAT : F O R M A T  ;
FOREIGN : F O R E I G N  ;
FORTRAN : F O R T R A N  ;
FOUND : F O U N D  ;
FRAC_SECOND : F R A C '_' S E C O N D  ;
FRAME_ROW : F R A M E '_' R O W  ;
FREE : F R E E  ;
FROM : F R O M  ;
FULL : F U L L  ;
FUNCTION : F U N C T I O N  ;
FUSION : F U S I O N  ;
G : [gG]  ;
GENERAL : G E N E R A L  ;
GENERATED : G E N E R A T E D  ;
GEOMETRY : G E O M E T R Y  ;
GET : G E T  ;
GLOBAL : G L O B A L  ;
GO : G O  ;
GOTO : G O T O  ;
GRANT : G R A N T  ;
GRANTED : G R A N T E D  ;
GROUP : G R O U P  ;
GROUPING : G R O U P I N G  ;
GROUPS : G R O U P S  ;
HAVING : H A V I N G  ;
HIERARCHY : H I E R A R C H Y  ;
HOLD : H O L D  ;
HOUR : H O U R  ;
IDENTITY : I D E N T I T Y  ;
IGNORE : I G N O R E  ;
IMMEDIATE : I M M E D I A T E  ;
IMMEDIATELY : I M M E D I A T E L Y  ;
IMPLEMENTATION : I M P L E M E N T A T I O N  ;
IMPORT : I M P O R T  ;
IN : I N  ;
INCLUDE : I N C L U D E  ;
INCLUDING : I N C L U D I N G  ;
INCREMENT : I N C R E M E N T  ;
INDICATOR : I N D I C A T O R  ;
INITIAL : I N I T I A L  ;
INITIALLY : I N I T I A L L Y  ;
INNER : I N N E R  ;
INOUT : I N O U T  ;
INPUT : I N P U T  ;
INSENSITIVE : I N S E N S I T I V E  ;
INSERT : I N S E R T  ;
INSTANCE : I N S T A N C E  ;
INSTANTIABLE : I N S T A N T I A B L E  ;
INT : I N T  ;
INTEGER : I N T E G E R  ;
INTERSECT : I N T E R S E C T  ;
INTERSECTION : I N T E R S E C T I O N  ;
INTERVAL : I N T E R V A L  ;
INTO : I N T O  ;
INVOKER : I N V O K E R  ;
IS : I S  ;
ISODOW : I S O D O W  ;
ISOYEAR : I S O Y E A R  ;
ISOLATION : I S O L A T I O N  ;
JAVA : J A V A  ;
JOIN : J O I N  ;
JSON : J S O N  ;
JSON_ARRAY : J S O N '_' A R R A Y  ;
JSON_ARRAYAGG : J S O N '_' A R R A Y A G G  ;
JSON_DEPTH : J S O N '_' D E P T H  ;
JSON_EXISTS : J S O N '_' E X I S T S  ;
JSON_KEYS : J S O N '_' K E Y S  ;
JSON_LENGTH : J S O N '_' L E N G T H  ;
JSON_OBJECT : J S O N '_' O B J E C T  ;
JSON_OBJECTAGG : J S O N '_' O B J E C T A G G  ;
JSON_PRETTY : J S O N '_' P R E T T Y  ;
JSON_QUERY : J S O N '_' Q U E R Y  ;
JSON_TYPE : J S O N '_' T Y P E  ;
JSON_VALUE : J S O N '_' V A L U E  ;
K : [kK]  ;
KEY : K E Y  ;
KEY_MEMBER : K E Y '_' M E M B E R  ;
KEY_TYPE : K E Y '_' T Y P E  ;
LABEL : L A B E L  ;
LAG : L A G  ;
LANGUAGE : L A N G U A G E  ;
LARGE : L A R G E  ;
LAST : L A S T  ;
LAST_VALUE : L A S T '_' V A L U E  ;
LATERAL : L A T E R A L  ;
LEAD : L E A D  ;
LEADING : L E A D I N G  ;
LEFT : L E F T  ;
LENGTH : L E N G T H  ;
LEVEL : L E V E L  ;
LIBRARY : L I B R A R Y  ;
LIKE : L I K E  ;
LIKE_REGEX : L I K E '_' R E G E X  ;
LIMIT : L I M I T  ;
LN : L N  ;
LOCAL : L O C A L  ;
LOCALTIME : L O C A L T I M E  ;
LOCALTIMESTAMP : L O C A L T I M E S T A M P  ;
LOCATOR : L O C A T O R  ;
LOWER : L O W E R  ;
M : [mM]  ;
MAP : M A P  ;
MATCH : M A T C H  ;
MATCHED : M A T C H E D  ;
MATCHES : M A T C H E S  ;
MATCH_NUMBER : M A T C H '_' N U M B E R  ;
MATCH_RECOGNIZE : M A T C H '_' R E C O G N I Z E  ;
MAX : M A X  ;
MAXVALUE : M A X V A L U E  ;
MEASURES : M E A S U R E S  ;
MEMBER : M E M B E R  ;
MERGE : M E R G E  ;
MESSAGE_LENGTH : M E S S A G E '_' L E N G T H  ;
MESSAGE_OCTET_LENGTH : M E S S A G E '_' O C T E T '_' L E N G T H  ;
MESSAGE_TEXT : M E S S A G E '_' T E X T  ;
METHOD : M E T H O D  ;
MICROSECOND : M I C R O S E C O N D  ;
MILLISECOND : M I L L I S E C O N D  ;
MILLENNIUM : M I L L E N N I U M  ;
MIN : M I N  ;
MINUTE : M I N U T E  ;
MINVALUE : M I N V A L U E  ;
MOD : M O D  ;
MODIFIES : M O D I F I E S  ;
MODULE : M O D U L E  ;
MONTH : M O N T H  ;
MORE_ : M O R E  ;
MULTISET : M U L T I S E T  ;
MUMPS : M U M P S  ;
NAME : N A M E  ;
NAMES : N A M E S  ;
NANOSECOND : N A N O S E C O N D  ;
NATIONAL : N A T I O N A L  ;
NATURAL : N A T U R A L  ;
NCHAR : N C H A R  ;
NCLOB : N C L O B  ;
NESTING : N E S T I N G  ;
NEW : N E W  ;
NEXT : N E X T  ;
NO : N O  ;
NONE : N O N E  ;
NORMALIZE : N O R M A L I Z E  ;
NORMALIZED : N O R M A L I Z E D  ;
NOT : N O T  ;
NTH_VALUE : N T H '_' V A L U E  ;
NTILE : N T I L E  ;
NULL : N U L L  ;
NULLABLE : N U L L A B L E  ;
NULLIF : N U L L I F  ;
NULLS : N U L L S  ;
NUMBER : N U M B E R  ;
NUMERIC : N U M E R I C  ;
OBJECT : O B J E C T  ;
OCCURRENCES_REGEX : O C C U R R E N C E S '_' R E G E X  ;
OCTET_LENGTH : O C T E T '_' L E N G T H  ;
OCTETS : O C T E T S  ;
OF : O F  ;
OFFSET : O F F S E T  ;
OLD : O L D  ;
OMIT : O M I T  ;
ON : O N  ;
ONE : O N E  ;
ONLY : O N L Y  ;
OPEN : O P E N  ;
OPTION : O P T I O N  ;
OPTIONS : O P T I O N S  ;
OR : O R  ;
ORDER : O R D E R  ;
ORDERING : O R D E R I N G  ;
ORDINALITY : O R D I N A L I T Y  ;
OTHERS : O T H E R S  ;
OUT : O U T  ;
OUTER : O U T E R  ;
OUTPUT : O U T P U T  ;
OVER : O V E R  ;
OVERLAPS : O V E R L A P S  ;
OVERLAY : O V E R L A Y  ;
OVERRIDING : O V E R R I D I N G  ;
PAD : P A D  ;
PARAMETER : P A R A M E T E R  ;
PARAMETER_MODE : P A R A M E T E R '_' M O D E  ;
PARAMETER_NAME : P A R A M E T E R '_' N A M E  ;
PARAMETER_ORDINAL_POSITION : P A R A M E T E R '_' O R D I N A L '_' P O S I T I O N  ;
PARAMETER_SPECIFIC_CATALOG : P A R A M E T E R '_' S P E C I F I C '_' C A T A L O G  ;
PARAMETER_SPECIFIC_NAME : P A R A M E T E R '_' S P E C I F I C '_' N A M E  ;
PARAMETER_SPECIFIC_SCHEMA : P A R A M E T E R '_' S P E C I F I C '_' S C H E M A  ;
PARTIAL : P A R T I A L  ;
PARTITION : P A R T I T I O N  ;
PASCAL : P A S C A L  ;
PASSING : P A S S I N G  ;
PASSTHROUGH : P A S S T H R O U G H  ;
PAST : P A S T  ;
PATH : P A T H  ;
PATTERN : P A T T E R N  ;
PER : P E R  ;
PERCENT : P E R C E N T  ;
PERCENTILE_CONT : P E R C E N T I L E '_' C O N T  ;
PERCENTILE_DISC : P E R C E N T I L E '_' D I S C  ;
PERCENT_RANK : P E R C E N T '_' R A N K  ;
PERIOD : P E R I O D  ;
PERMUTE : P E R M U T E  ;
PIVOT : P I V O T  ;
PLACING : P L A C I N G  ;
PLAN : P L A N  ;
PLI : P L I  ;
PORTION : P O R T I O N  ;
POSITION : P O S I T I O N  ;
POSITION_REGEX : P O S I T I O N '_' R E G E X  ;
POWER : P O W E R  ;
PRECEDES : P R E C E D E S  ;
PRECEDING : P R E C E D I N G  ;
PRECISION : P R E C I S I O N  ;
PREPARE : P R E P A R E  ;
PRESERVE : P R E S E R V E  ;
PREV : P R E V  ;
PRIMARY : P R I M A R Y  ;
PRIOR : P R I O R  ;
PRIVILEGES : P R I V I L E G E S  ;
PROCEDURE : P R O C E D U R E  ;
PUBLIC : P U B L I C  ;
QUALIFY : Q U A L I F Y  ;
QUARTER : Q U A R T E R  ;
RANGE : R A N G E  ;
RANK : R A N K  ;
READ : R E A D  ;
READS : R E A D S  ;
REAL : R E A L  ;
RECURSIVE : R E C U R S I V E  ;
REF : R E F  ;
REFERENCES : R E F E R E N C E S  ;
REFERENCING : R E F E R E N C I N G  ;
REGR_AVGX : R E G R '_' A V G X  ;
REGR_AVGY : R E G R '_' A V G Y  ;
REGR_COUNT : R E G R '_' C O U N T  ;
REGR_INTERCEPT : R E G R '_' I N T E R C E P T  ;
REGR_R2 : R E G R '_' R '2'  ;
REGR_SLOPE : R E G R '_' S L O P E  ;
REGR_SXX : R E G R '_' S X X  ;
REGR_SXY : R E G R '_' S X Y  ;
REGR_SYY : R E G R '_' S Y Y  ;
RELATIVE : R E L A T I V E  ;
RELEASE : R E L E A S E  ;
REPEATABLE : R E P E A T A B L E  ;
REPLACE : R E P L A C E  ;
RESET : R E S E T  ;
RESPECT : R E S P E C T  ;
RESTART : R E S T A R T  ;
RESTRICT : R E S T R I C T  ;
RESULT : R E S U L T  ;
RETURN : R E T U R N  ;
RETURNED_CARDINALITY : R E T U R N E D '_' C A R D I N A L I T Y  ;
RETURNED_LENGTH : R E T U R N E D '_' L E N G T H  ;
RETURNED_OCTET_LENGTH : R E T U R N E D '_' O C T E T '_' L E N G T H  ;
RETURNED_SQLSTATE : R E T U R N E D '_' S Q L S T A T E  ;
RETURNING : R E T U R N I N G  ;
RETURNS : R E T U R N S  ;
REVOKE : R E V O K E  ;
RIGHT : R I G H T  ;
ROLE : R O L E  ;
ROLLBACK : R O L L B A C K  ;
ROLLUP : R O L L U P  ;
ROUTINE : R O U T I N E  ;
ROUTINE_CATALOG : R O U T I N E '_' C A T A L O G  ;
ROUTINE_NAME : R O U T I N E '_' N A M E  ;
ROUTINE_SCHEMA : R O U T I N E '_' S C H E M A  ;
ROW : R O W  ;
ROW_COUNT : R O W '_' C O U N T  ;
ROW_NUMBER : R O W '_' N U M B E R  ;
ROWS : R O W S  ;
RUNNING : R U N N I N G  ;
SAVEPOINT : S A V E P O I N T  ;
SCALAR : S C A L A R  ;
SCALE : S C A L E  ;
SCHEMA : S C H E M A  ;
SCHEMA_NAME : S C H E M A '_' N A M E  ;
SCOPE : S C O P E  ;
SCOPE_CATALOGS : S C O P E '_' C A T A L O G S  ;
SCOPE_NAME : S C O P E '_' N A M E  ;
SCOPE_SCHEMA : S C O P E '_' S C H E M A  ;
SCROLL : S C R O L L  ;
SEARCH : S E A R C H  ;
SECOND : S E C O N D  ;
SECTION : S E C T I O N  ;
SECURITY : S E C U R I T Y  ;
SEEK : S E E K  ;
SELECT : S E L E C T  ;
SELF : S E L F  ;
SENSITIVE : S E N S I T I V E  ;
SEQUENCE : S E Q U E N C E  ;
SERIALIZABLE : S E R I A L I Z A B L E  ;
SERVER : S E R V E R  ;
SERVER_NAME : S E R V E R '_' N A M E  ;
SESSION : S E S S I O N  ;
SESSION_USER : S E S S I O N '_' U S E R  ;
SET : S E T  ;
SETS : S E T S  ;
SET_MINUS : M I N U S  ;
SHOW : S H O W  ;
SIMILAR : S I M I L A R  ;
SIMPLE : S I M P L E  ;
SIZE : S I Z E  ;
SKIP_ : S K I P  ;
SMALLINT : S M A L L I N T  ;
SOME : S O M E  ;
SOURCE : S O U R C E  ;
SPACE : S P A C E  ;
SPECIFIC : S P E C I F I C  ;
SPECIFIC_NAME : S P E C I F I C '_' N A M E  ;
SPECIFICTYPE : S P E C I F I C T Y P E  ;
SQL : S Q L  ;
SQLEXCEPTION : S Q L E X C E P T I O N  ;
SQLSTATE : S Q L S T A T E  ;
SQLWARNING : S Q L W A R N I N G  ;
SQL_BIGINT : S Q L '_' B I G I N T  ;
SQL_BINARY : S Q L '_' B I N A R Y  ;
SQL_BIT : S Q L '_' B I T  ;
SQL_BLOB : S Q L '_' B L O B  ;
SQL_BOOLEAN : S Q L '_' B O O L E A N  ;
SQL_CHAR : S Q L '_' C H A R  ;
SQL_CLOB : S Q L '_' C L O B  ;
SQL_DATE : S Q L '_' D A T E  ;
SQL_DECIMAL : S Q L '_' D E C I M A L  ;
SQL_DOUBLE : S Q L '_' D O U B L E  ;
SQL_FLOAT : S Q L '_' F L O A T  ;
SQL_INTEGER : S Q L '_' I N T E G E R  ;
SQL_INTERVAL_DAY : S Q L '_' I N T E R V A L '_' D A Y  ;
SQL_INTERVAL_DAY_TO_HOUR : S Q L '_' I N T E R V A L '_' D A Y '_' T O '_' H O U R  ;
SQL_INTERVAL_DAY_TO_MINUTE : S Q L '_' I N T E R V A L '_' D A Y '_' T O '_' M I N U T E  ;
SQL_INTERVAL_DAY_TO_SECOND : S Q L '_' I N T E R V A L '_' D A Y '_' T O '_' S E C O N D  ;
SQL_INTERVAL_HOUR : S Q L '_' I N T E R V A L '_' H O U R  ;
SQL_INTERVAL_HOUR_TO_MINUTE : S Q L '_' I N T E R V A L '_' H O U R '_' T O '_' M I N U T E  ;
SQL_INTERVAL_HOUR_TO_SECOND : S Q L '_' I N T E R V A L '_' H O U R '_' T O '_' S E C O N D  ;
SQL_INTERVAL_MINUTE : S Q L '_' I N T E R V A L '_' M I N U T E  ;
SQL_INTERVAL_MINUTE_TO_SECOND : S Q L '_' I N T E R V A L '_' M I N U T E '_' T O '_' S E C O N D  ;
SQL_INTERVAL_MONTH : S Q L '_' I N T E R V A L '_' M O N T H  ;
SQL_INTERVAL_SECOND : S Q L '_' I N T E R V A L '_' S E C O N D  ;
SQL_INTERVAL_YEAR : S Q L '_' I N T E R V A L '_' Y E A R  ;
SQL_INTERVAL_YEAR_TO_MONTH : S Q L '_' I N T E R V A L '_' Y E A R '_' T O '_' M O N T H  ;
SQL_LONGVARBINARY : S Q L '_' L O N G V A R B I N A R Y  ;
SQL_LONGVARCHAR : S Q L '_' L O N G V A R C H A R  ;
SQL_LONGVARNCHAR : S Q L '_' L O N G V A R N C H A R  ;
SQL_NCHAR : S Q L '_' N C H A R  ;
SQL_NCLOB : S Q L '_' N C L O B  ;
SQL_NUMERIC : S Q L '_' N U M E R I C  ;
SQL_NVARCHAR : S Q L '_' N V A R C H A R  ;
SQL_REAL : S Q L '_' R E A L  ;
SQL_SMALLINT : S Q L '_' S M A L L I N T  ;
SQL_TIME : S Q L '_' T I M E  ;
SQL_TIMESTAMP : S Q L '_' T I M E S T A M P  ;
SQL_TINYINT : S Q L '_' T I N Y I N T  ;
SQL_TSI_DAY : S Q L '_' T S I '_' D A Y  ;
SQL_TSI_FRAC_SECOND : S Q L '_' T S I '_' F R A C '_' S E C O N D  ;
SQL_TSI_HOUR : S Q L '_' T S I '_' H O U R  ;
SQL_TSI_MICROSECOND : S Q L '_' T S I '_' M I C R O S E C O N D  ;
SQL_TSI_MINUTE : S Q L '_' T S I '_' M I N U T E  ;
SQL_TSI_MONTH : S Q L '_' T S I '_' M O N T H  ;
SQL_TSI_QUARTER : S Q L '_' T S I '_' Q U A R T E R  ;
SQL_TSI_SECOND : S Q L '_' T S I '_' S E C O N D  ;
SQL_TSI_WEEK : S Q L '_' T S I '_' W E E K  ;
SQL_TSI_YEAR : S Q L '_' T S I '_' Y E A R  ;
SQL_VARBINARY : S Q L '_' V A R B I N A R Y  ;
SQL_VARCHAR : S Q L '_' V A R C H A R  ;
SQRT : S Q R T  ;
START : S T A R T  ;
STATE : S T A T E  ;
STATEMENT : S T A T E M E N T  ;
STATIC : S T A T I C  ;
STDDEV_POP : S T D D E V '_' P O P  ;
STDDEV_SAMP : S T D D E V '_' S A M P  ;
STREAM : S T R E A M  ;
STRUCTURE : S T R U C T U R E  ;
STYLE : S T Y L E  ;
SUBCLASS_ORIGIN : S U B C L A S S '_' O R I G I N  ;
SUBMULTISET : S U B M U L T I S E T  ;
SUBSET : S U B S E T  ;
SUBSTITUTE : S U B S T I T U T E  ;
SUBSTRING : S U B S T R I N G  ;
SUBSTRING_REGEX : S U B S T R I N G '_' R E G E X  ;
SUCCEEDS : S U C C E E D S  ;
SUM : S U M  ;
SYMMETRIC : S Y M M E T R I C  ;
SYSTEM : S Y S T E M  ;
SYSTEM_TIME : S Y S T E M '_' T I M E  ;
SYSTEM_USER : S Y S T E M '_' U S E R  ;
TABLE : T A B L E  ;
TABLE_NAME : T A B L E '_' N A M E  ;
TABLESAMPLE : T A B L E S A M P L E  ;
TEMPORARY : T E M P O R A R Y  ;
THEN : T H E N  ;
TIES : T I E S  ;
TIME : T I M E  ;
TIMESTAMP : T I M E S T A M P  ;
TIMESTAMPADD : T I M E S T A M P A D D  ;
TIMESTAMPDIFF : T I M E S T A M P D I F F  ;
TIMEZONE_HOUR : T I M E Z O N E '_' H O U R  ;
TIMEZONE_MINUTE : T I M E Z O N E '_' M I N U T E  ;
TINYINT : T I N Y I N T  ;
TO : T O  ;
TOP_LEVEL_COUNT : T O P '_' L E V E L '_' C O U N T  ;
TRAILING : T R A I L I N G  ;
TRANSACTION : T R A N S A C T I O N  ;
TRANSACTIONS_ACTIVE : T R A N S A C T I O N S '_' A C T I V E  ;
TRANSACTIONS_COMMITTED : T R A N S A C T I O N S '_' C O M M I T T E D  ;
TRANSACTIONS_ROLLED_BACK : T R A N S A C T I O N S '_' R O L L E D '_' B A C K  ;
TRANSFORM : T R A N S F O R M  ;
TRANSFORMS : T R A N S F O R M S  ;
TRANSLATE : T R A N S L A T E  ;
TRANSLATE_REGEX : T R A N S L A T E '_' R E G E X  ;
TRANSLATION : T R A N S L A T I O N  ;
TREAT : T R E A T  ;
TRIGGER : T R I G G E R  ;
TRIGGER_CATALOG : T R I G G E R '_' C A T A L O G  ;
TRIGGER_NAME : T R I G G E R '_' N A M E  ;
TRIGGER_SCHEMA : T R I G G E R '_' S C H E M A  ;
TRIM : T R I M  ;
TRIM_ARRAY : T R I M '_' A R R A Y  ;
TRUE : T R U E  ;
TRUNCATE : T R U N C A T E  ;
TYPE : T Y P E  ;
UESCAPE : U E S C A P E  ;
UNBOUNDED : U N B O U N D E D  ;
UNCOMMITTED : U N C O M M I T T E D  ;
UNCONDITIONAL : U N C O N D I T I O N A L  ;
UNDER : U N D E R  ;
UNION : U N I O N  ;
UNIQUE : U N I Q U E  ;
UNKNOWN : U N K N O W N  ;
UNPIVOT : U N P I V O T  ;
UNNAMED : U N N A M E D  ;
UNNEST : U N N E S T  ;
UPDATE : U P D A T E  ;
UPPER : U P P E R  ;
UPSERT : U P S E R T  ;
USAGE : U S A G E  ;
USER : U S E R  ;
USER_DEFINED_TYPE_CATALOG : U S E R '_' D E F I N E D '_' T Y P E '_' C A T A L O G  ;
USER_DEFINED_TYPE_CODE : U S E R '_' D E F I N E D '_' T Y P E '_' C O D E  ;
USER_DEFINED_TYPE_NAME : U S E R '_' D E F I N E D '_' T Y P E '_' N A M E  ;
USER_DEFINED_TYPE_SCHEMA : U S E R '_' D E F I N E D '_' T Y P E '_' S C H E M A  ;
USING : U S I N G  ;
UTF8 : U T F '8'  ;
UTF16 : U T F '16'  ;
UTF32 : U T F '32'  ;
VALUE : V A L U E  ;
VALUES : V A L U E S  ;
VALUE_OF : V A L U E '_' O F  ;
VAR_POP : V A R '_' P O P  ;
VAR_SAMP : V A R '_' S A M P  ;
VARBINARY : V A R B I N A R Y  ;
VARCHAR : V A R C H A R  ;
VARYING : V A R Y I N G  ;
VERSION : V E R S I O N  ;
VERSIONING : V E R S I O N I N G  ;
VIEW : V I E W  ;
WEEK : W E E K  ;
WHEN : W H E N  ;
WHENEVER : W H E N E V E R  ;
WHERE : W H E R E  ;
WIDTH_BUCKET : W I D T H '_' B U C K E T  ;
WINDOW : W I N D O W  ;
WITH : W I T H  ;
WITHIN : W I T H I N  ;
WITHOUT : W I T H O U T  ;
WORK : W O R K  ;
WRAPPER : W R A P P E R  ;
WRITE : W R I T E  ;
XML : X M L  ;
YEAR : Y E A R  ;
ZONE : Z O N E  ;
DATABASES : D A T A B A S E S  ;
SCHEMAS : S C H E M A S  ;
LOCALSORT : L O C A L S O R T  ;
ARROW : A R R O W  ;
CACHE : C A C H E  ;
TABLES : T A B L E S  ;
VIEWS : V I E W S  ;
USE : U S E  ;
FILES : F I L E S  ;
PARTITIONS : P A R T I T I O N S  ;
REFRESH : R E F R E S H  ;
METADATA : M E T A D A T A  ;
IF : I F  ;
STORE : S T O R E  ;
SINGLE : S I N G L E  ;
WRITER : W R I T E R  ;
HASH : H A S H  ;
ROUNDROBIN : R O U N D R O B I N  ;
DISTRIBUTE : D I S T R I B U T E  ;
STRIPED : S T R I P E D  ;
CONSOLIDATED : C O N S O L I D A T E D  ;
ACCELERATION : A C C E L E R A T I O N  ;
AGGREGATE : A G G R E G A T E  ;
LAYOUT : L A Y O U T  ;
REFLECTION : R E F L E C T I O N  ;
DIMENSIONS : D I M E N S I O N S  ;
RAW : R A W  ;
DISPLAY : D I S P L A Y  ;
ENABLE : E N A B L E  ;
DISABLE : D I S A B L E  ;
FORGET : F O R G E T  ;
PDS : P D S  ;
VDS : V D S  ;
DATASET : D A T A S E T  ;
STATUS : S T A T U S  ;
LOAD : L O A D  ;
MATERIALIZATION : M A T E R I A L I Z A T I O N  ;
APPROXIMATE : A P P R O X I M A T E  ;
APPROX : A P P R O X  ;
STATS : S T A T S  ;
COMPACT : C O M P A C T  ;
AUTO : A U T O  ;
AVOID : A V O I D  ;
PROMOTION : P R O M O T I O N  ;
FORCE : F O R C E  ;
LAZY : L A Z Y  ;
MAINTAIN : M A I N T A I N  ;
MISSING : M I S S I N G  ;
COLUMNS : C O L U M N S  ;
CHANGE : C H A N G E  ;
CLEAR : C L E A R  ;
JOB : J O B  ;
HISTORY : H I S T O R Y  ;
REFLECTIONS : R E F L E C T I O N S  ;
FOLDER : F O L D E R  ;
FOLDERS : F O L D E R S  ;
FUNCTIONS : F U N C T I O N S  ;
MODIFY : M O D I F Y  ;
MANAGE : M A N A G E  ;
GRANTS : G R A N T S  ;
QUERY : Q U E R Y  ;
DATASETS : D A T A S E T S  ;
ANALYZE : A N A L Y Z E  ;
STATISTICS : S T A T I S T I C S  ;
COMPUTE : C O M P U T E  ;
OWNERSHIP : O W N E R S H I P  ;
OPERATE : O P E R A T E  ;
MONITOR : M O N I T O R  ;
ORG : O R G  ;
CLOUD : C L O U D  ;
PROJECT : P R O J E C T  ;
ROUTE : R O U T E  ;
QUEUE : Q U E U E  ;
ENGINE : E N G I N E  ;
SCRIPT : S C R I P T  ;
PASSWORD : P A S S W O R D  ;
POLICY : P O L I C Y  ;
ACCESS : A C C E S S  ;
UNSET : U N S E T  ;
LEARNING : L E A R N I N G  ;
BRANCH : B R A N C H  ;
BRANCHES : B R A N C H E S  ;
TAG : T A G  ;
TAGS : T A G S  ;
LOG : L O G  ;
LOGS : L O G S  ;
APPLICATION : A P P L I C A T I O N  ;
OAUTH : O A U T H  ;
PROVIDER : P R O V I D E R  ;
TOKENS : T O K E N S  ;
CONFIGURE : C O N F I G U R E  ;
ASSIGN : A S S I G N  ;
SNAPSHOT : S N A P S H O T  ;
REFERENCE : R E F E R E N C E  ;
LOCATION : L O C A T I O N  ;
FIELD : F I E L D  ;
STRUCT : S T R U C T  ;
LIST : L I S T  ;
MASKING : M A S K I N G  ;
UPLOAD : U P L O A D  ;
OPTIMIZE : O P T I M I Z E  ;
REWRITE : R E W R I T E  ;
MANIFESTS : M A N I F E S T S  ;
BIN_PACK : B I N '_' P A C K  ;
SORT : S O R T  ;
MAX_FILE_SIZE_MB : M A X '_' F I L E '_' S I Z E '_' M B  ;
MIN_FILE_SIZE_MB : M I N '_' F I L E '_' S I Z E '_' M B  ;
MIN_INPUT_FILES : M I N '_' I N P U T '_' F I L E S  ;
TARGET_FILE_SIZE_MB : T A R G E T '_' F I L E '_' S I Z E '_' M B  ;
COPY : C O P Y  ;
REGEX : R E G E X  ;
FILE_FORMAT : F I L E '_' F O R M A T  ;
DATE_FORMAT : D A T E '_' F O R M A T  ;
TIME_FORMAT : T I M E '_' F O R M A T  ;
TIMESTAMP_FORMAT : T I M E S T A M P '_' F O R M A T  ;
TRIM_SPACE : T R I M '_' S P A C E  ;
NULL_IF : N U L L '_' I F  ;
RECORD_DELIMITER : R E C O R D '_' D E L I M I T E R  ;
FIELD_DELIMITER : F I E L D '_' D E L I M I T E R  ;
QUOTE_CHAR : Q U O T E '_' C H A R  ;
ESCAPE_CHAR : E S C A P E '_' C H A R  ;
EMPTY_AS_NULL : E M P T Y '_' A S '_' N U L L  ;
ON_ERROR : O N '_' E R R O R  ;
EXTRACT_HEADER : E X T R A C T '_' H E A D E R  ;
SKIP_LINES : S K I P '_' L I N E S  ;
VACUUM : V A C U U M  ;
EXPIRE : E X P I R E  ;
SNAPSHOTS : S N A P S H O T S  ;
OLDER_THAN : O L D E R '_' T H A N  ;
RETAIN_LAST : R E T A I N '_' L A S T  ;
TBLPROPERTIES : T B L P R O P E R T I E S  ;
COMMITS_OLDER_THAN : C O M M I T S '_' O L D E R '_' T H A N  ;
RETAIN_LAST_COMMITS : R E T A I N '_' L A S T '_' C O M M I T S  ;
REMOVE : R E M O V E  ;
ORPHAN : O R P H A N  ;
SNAPSHOTS_OLDER_THAN : S N A P S H O T S '_' O L D E R '_' T H A N  ;
RETAIN_LAST_SNAPSHOTS : R E T A I N '_' L A S T '_' S N A P S H O T S  ;
PIPE : P I P E  ;
DEDUPE_LOOKBACK_PERIOD : D E D U P E '_' L O O K B A C K '_' P E R I O D  ;
NOTIFICATION_PROVIDER : N O T I F I C A T I O N '_' P R O V I D E R  ;
NOTIFICATION_QUEUE_REFERENCE : N O T I F I C A T I O N '_' Q U E U E '_' R E F E R E N C E  ;
BATCH : B A T C H  ;
PIPE_EXECUTION_RUNNING : P I P E '_' E X E C U T I O N '_' R U N N I N G  ;
DRY : D R Y  ;
RUN : R U N  ;
CONFLICT : C O N F L I C T  ;
OVERWRITE : O V E R W R I T E  ;
DISCARD : D I S C A R D  ;
CANCEL : C A N C E L  ;
EXPORT : E X P O R T  ;
PERMISSION : P E R M I S S I O N  ;
MIN_REPLICAS : M I N '_' R E P L I C A S  ;
MAX_REPLICAS : M A X '_' R E P L I C A S  ;
CLUSTER : C L U S T E R  ;
CLUSTERING : C L U S T E R I N G  ;
CONCURRENT : C O N C U R R E N T  ;
TRY_CONVERT_FROM : T R Y '_' C O N V E R T '_' F R O M  ;
UNSIGNED_INTEGER_LITERAL : ([0-9])+  ;
APPROX_NUMERIC_LITERAL : (UNSIGNED_INTEGER_LITERAL | DECIMAL_NUMERIC_LITERAL) EXPONENT  ;
DECIMAL_NUMERIC_LITERAL : (([0-9])+ ('.')? ([0-9])* | '.' ([0-9])+)  ;
fragment EXPONENT : [eE] ([+\-])? ([0-9])+  ;
fragment HEXDIGIT : [0-9a-fA-F]  ;
fragment WHITESPACE : [ \t\n\r\f]  ;
BINARY_STRING_LITERAL : [xX] QUOTE ((~['] | '\'\''))* QUOTE  ;
QUOTED_STRING : QUOTE ((~['] | '\'\''))* QUOTE  ;
PREFIXED_STRING_LITERAL : ('_' CHARSETNAME | N) QUOTED_STRING  ;
UNICODE_STRING_LITERAL : U '&' QUOTED_STRING  ;
fragment CHARSETNAME : [a-zA-Z0-9] ([a-zA-Z0-9:.\-_])*  ;
UNICODE_QUOTED_ESCAPE_CHAR : QUOTE ~[0-9a-fA-F+" \t\n\r\f] QUOTE  ;
LPAREN : '('  ;
RPAREN : ')'  ;
L_CONTAINS : C O N T A I N S '(' -> pushMode(LUCENE_DEFAULT) ;
LBRACE_D : '{' (' ')* [dD]  ;
LBRACE_T : '{' (' ')* [tT]  ;
LBRACE_TS : '{' (' ')* [tT] [sS]  ;
LBRACE_FN : '{' (' ')* [fF] [nN]  ;
LBRACE : '{'  ;
RBRACE : '}'  ;
LBRACKET : '['  ;
RBRACKET : ']'  ;
SEMICOLON : ';'  ;
DOT : '.'  ;
COMMA : ','  ;
EQ : '='  ;
GT : '>'  ;
LT : '<'  ;
HOOK : '?'  ;
COLON : ':'  ;
LE : '<='  ;
GE : '>='  ;
NE : '<>'  ;
NE2 : '!='  ;
PLUS : '+'  ;
MINUS : '-'  ;
STAR : '*'  ;
SLASH : '/'  ;
PERCENT_REMAINDER : '%'  ;
CONCAT : '||'  ;
NAMED_ARGUMENT_ASSIGNMENT : '=>'  ;
DOUBLE_PERIOD : '..'  ;
QUOTE : '\''  ;
DOUBLE_QUOTE : '"'  ;
VERTICAL_BAR : '|'  ;
CARET : '^'  ;
DOLLAR : '$'  ;
SKIP1 : ' ' -> skip ;
SKIP2 : '\t' -> skip ;
SKIP3 : '\n' -> skip ;
SKIP4 : '\r' -> skip ;
SKIP5 : '\f' -> skip ;
HINT_BEG : '/*+' ~[/]  ;
COMMENT_END : '*/'  ;
MORE0 : '/**' ~[/] -> more, pushMode(IN_FORMAL_COMMENT) ;
MORE1 : '/*' -> more, pushMode(IN_MULTI_LINE_COMMENT) ;
SINGLE_LINE_COMMENT : ('//' | '--') (~[\n\r])* (('\n' | '\r' | '\r\n'))? -> channel(HIDDEN) ;
BRACKET_QUOTED_IDENTIFIER : '[' ((~[\]\n\r] | ']]'))+ ']'  ;
COLLATION_ID : ((LETTER | DIGIT))+ ((LETTER | DIGIT | ':' | '.' | '-' | '_'))* '$' ((LETTER | '_'))+ ('$' ((LETTER | DIGIT | '_'))+)?  ;
IDENTIFIER : LETTER ((LETTER | DIGIT))*  ;
UNICODE_QUOTED_IDENTIFIER : U '&' QUOTED_IDENTIFIER  ;
fragment LETTER : [$A-Z_a-zÀ-ÖØ-öø-ÿĀ-῿぀-㆏㌀-㍿㐀-㴭一-鿿豈-﫿]  ;
fragment DIGIT : [0-9٠-٩۰-۹०-९০-৯੦-੯૦-૯୦-୯௧-௯౦-౯೦-೯൦-൯๐-๙໐-໙၀-၉]  ;
BEL : [\u0007]  ;
fragment B : [bB]  ;
fragment D : [dD]  ;
fragment E : [eE]  ;
fragment F : [fF]  ;
fragment H : [hH]  ;
fragment I : [iI]  ;
fragment J : [jJ]  ;
fragment L : [lL]  ;
fragment N : [nN]  ;
fragment O : [oO]  ;
fragment P : [pP]  ;
fragment Q : [qQ]  ;
fragment R : [rR]  ;
fragment S : [sS]  ;
fragment T : [tT]  ;
fragment U : [uU]  ;
fragment V : [vV]  ;
fragment W : [wW]  ;
fragment X : [xX]  ;
fragment Y : [yY]  ;
fragment Z : [zZ]  ;

mode LUCENE_BOOST;
L_NUMBER : (US_NUM_CHAR)+ ('.' (US_NUM_CHAR)+)? -> mode(LUCENE_DEFAULT) ;

mode BTID;
BTID_A : A -> type(A) ;
BTID_ABS : ABS -> type(ABS) ;
BTID_ABSENT : ABSENT -> type(ABSENT) ;
BTID_ABSOLUTE : ABSOLUTE -> type(ABSOLUTE) ;
BTID_ACTION : ACTION -> type(ACTION) ;
BTID_ADA : ADA -> type(ADA) ;
BTID_ADD : ADD -> type(ADD) ;
BTID_ADMIN : ADMIN -> type(ADMIN) ;
BTID_AFTER : AFTER -> type(AFTER) ;
BTID_ALL : ALL -> type(ALL) ;
BTID_ALLOCATE : ALLOCATE -> type(ALLOCATE) ;
BTID_ALLOW : ALLOW -> type(ALLOW) ;
BTID_ALTER : ALTER -> type(ALTER) ;
BTID_ALWAYS : ALWAYS -> type(ALWAYS) ;
BTID_AND : AND -> type(AND) ;
BTID_ANY : ANY -> type(ANY) ;
BTID_APPLY : APPLY -> type(APPLY) ;
BTID_ARE : ARE -> type(ARE) ;
BTID_ARRAY : ARRAY -> type(ARRAY) ;
BTID_ARRAY_MAX_CARDINALITY : ARRAY_MAX_CARDINALITY -> type(ARRAY_MAX_CARDINALITY) ;
BTID_AS : AS -> type(AS) ;
BTID_ASC : ASC -> type(ASC) ;
BTID_ASENSITIVE : ASENSITIVE -> type(ASENSITIVE) ;
BTID_ASSERTION : ASSERTION -> type(ASSERTION) ;
BTID_ASSIGNMENT : ASSIGNMENT -> type(ASSIGNMENT) ;
BTID_ASYMMETRIC : ASYMMETRIC -> type(ASYMMETRIC) ;
BTID_AT : AT -> type(AT) ;
BTID_ATOMIC : ATOMIC -> type(ATOMIC) ;
BTID_ATTRIBUTE : ATTRIBUTE -> type(ATTRIBUTE) ;
BTID_ATTRIBUTES : ATTRIBUTES -> type(ATTRIBUTES) ;
BTID_AUTHORIZATION : AUTHORIZATION -> type(AUTHORIZATION) ;
BTID_AVG : AVG -> type(AVG) ;
BTID_BEFORE : BEFORE -> type(BEFORE) ;
BTID_BEGIN : BEGIN -> type(BEGIN) ;
BTID_BEGIN_FRAME : BEGIN_FRAME -> type(BEGIN_FRAME) ;
BTID_BEGIN_PARTITION : BEGIN_PARTITION -> type(BEGIN_PARTITION) ;
BTID_BERNOULLI : BERNOULLI -> type(BERNOULLI) ;
BTID_BETWEEN : BETWEEN -> type(BETWEEN) ;
BTID_BIGINT : BIGINT -> type(BIGINT) ;
BTID_BINARY : BINARY -> type(BINARY) ;
BTID_BIT : BIT -> type(BIT) ;
BTID_BLOB : BLOB -> type(BLOB) ;
BTID_BOOLEAN : BOOLEAN -> type(BOOLEAN) ;
BTID_BOTH : BOTH -> type(BOTH) ;
BTID_BREADTH : BREADTH -> type(BREADTH) ;
BTID_BY : BY -> type(BY) ;
BTID_C : C -> type(C) ;
BTID_CALL : CALL -> type(CALL) ;
BTID_CALLED : CALLED -> type(CALLED) ;
BTID_CARDINALITY : CARDINALITY -> type(CARDINALITY) ;
BTID_CASCADE : CASCADE -> type(CASCADE) ;
BTID_CASCADED : CASCADED -> type(CASCADED) ;
BTID_CASE : CASE -> type(CASE) ;
BTID_CAST : CAST -> type(CAST) ;
BTID_CATALOG : CATALOG -> type(CATALOG) ;
BTID_CATALOG_NAME : CATALOG_NAME -> type(CATALOG_NAME) ;
BTID_CEIL : CEIL -> type(CEIL) ;
BTID_CEILING : CEILING -> type(CEILING) ;
BTID_CENTURY : CENTURY -> type(CENTURY) ;
BTID_CHAIN : CHAIN -> type(CHAIN) ;
BTID_CHAR : CHAR -> type(CHAR) ;
BTID_CHAR_LENGTH : CHAR_LENGTH -> type(CHAR_LENGTH) ;
BTID_CHARACTER : CHARACTER -> type(CHARACTER) ;
BTID_CHARACTER_LENGTH : CHARACTER_LENGTH -> type(CHARACTER_LENGTH) ;
BTID_CHARACTER_SET_CATALOG : CHARACTER_SET_CATALOG -> type(CHARACTER_SET_CATALOG) ;
BTID_CHARACTER_SET_NAME : CHARACTER_SET_NAME -> type(CHARACTER_SET_NAME) ;
BTID_CHARACTER_SET_SCHEMA : CHARACTER_SET_SCHEMA -> type(CHARACTER_SET_SCHEMA) ;
BTID_CHARACTERISTICS : CHARACTERISTICS -> type(CHARACTERISTICS) ;
BTID_CHARACTERS : CHARACTERS -> type(CHARACTERS) ;
BTID_CHECK : CHECK -> type(CHECK) ;
BTID_CLASSIFIER : CLASSIFIER -> type(CLASSIFIER) ;
BTID_CLASS_ORIGIN : CLASS_ORIGIN -> type(CLASS_ORIGIN) ;
BTID_CLOB : CLOB -> type(CLOB) ;
BTID_CLOSE : CLOSE -> type(CLOSE) ;
BTID_COALESCE : COALESCE -> type(COALESCE) ;
BTID_COBOL : COBOL -> type(COBOL) ;
BTID_COLLATE : COLLATE -> type(COLLATE) ;
BTID_COLLATION : COLLATION -> type(COLLATION) ;
BTID_COLLATION_CATALOG : COLLATION_CATALOG -> type(COLLATION_CATALOG) ;
BTID_COLLATION_NAME : COLLATION_NAME -> type(COLLATION_NAME) ;
BTID_COLLATION_SCHEMA : COLLATION_SCHEMA -> type(COLLATION_SCHEMA) ;
BTID_COLLECT : COLLECT -> type(COLLECT) ;
BTID_COLUMN : COLUMN -> type(COLUMN) ;
BTID_COLUMN_NAME : COLUMN_NAME -> type(COLUMN_NAME) ;
BTID_COMMAND_FUNCTION : COMMAND_FUNCTION -> type(COMMAND_FUNCTION) ;
BTID_COMMAND_FUNCTION_CODE : COMMAND_FUNCTION_CODE -> type(COMMAND_FUNCTION_CODE) ;
BTID_COMMIT : COMMIT -> type(COMMIT) ;
BTID_COMMITTED : COMMITTED -> type(COMMITTED) ;
BTID_CONDITION : CONDITION -> type(CONDITION) ;
BTID_CONDITIONAL : CONDITIONAL -> type(CONDITIONAL) ;
BTID_CONDITION_NUMBER : CONDITION_NUMBER -> type(CONDITION_NUMBER) ;
BTID_CONNECT : CONNECT -> type(CONNECT) ;
BTID_CONNECTION : CONNECTION -> type(CONNECTION) ;
BTID_CONNECTION_NAME : CONNECTION_NAME -> type(CONNECTION_NAME) ;
BTID_CONSTRAINT : CONSTRAINT -> type(CONSTRAINT) ;
BTID_CONSTRAINT_CATALOG : CONSTRAINT_CATALOG -> type(CONSTRAINT_CATALOG) ;
BTID_CONSTRAINT_NAME : CONSTRAINT_NAME -> type(CONSTRAINT_NAME) ;
BTID_CONSTRAINT_SCHEMA : CONSTRAINT_SCHEMA -> type(CONSTRAINT_SCHEMA) ;
BTID_CONSTRAINTS : CONSTRAINTS -> type(CONSTRAINTS) ;
BTID_CONSTRUCTOR : CONSTRUCTOR -> type(CONSTRUCTOR) ;
BTID_CONTAINS : CONTAINS -> type(CONTAINS) ;
BTID_CONTINUE : CONTINUE -> type(CONTINUE) ;
BTID_CONVERT : CONVERT -> type(CONVERT) ;
BTID_CORR : CORR -> type(CORR) ;
BTID_CORRESPONDING : CORRESPONDING -> type(CORRESPONDING) ;
BTID_COUNT : COUNT -> type(COUNT) ;
BTID_COVAR_POP : COVAR_POP -> type(COVAR_POP) ;
BTID_COVAR_SAMP : COVAR_SAMP -> type(COVAR_SAMP) ;
BTID_CREATE : CREATE -> type(CREATE) ;
BTID_CROSS : CROSS -> type(CROSS) ;
BTID_CUBE : CUBE -> type(CUBE) ;
BTID_CUME_DIST : CUME_DIST -> type(CUME_DIST) ;
BTID_CURRENT : CURRENT -> type(CURRENT) ;
BTID_CURRENT_CATALOG : CURRENT_CATALOG -> type(CURRENT_CATALOG) ;
BTID_CURRENT_DATE : CURRENT_DATE -> type(CURRENT_DATE) ;
BTID_CURRENT_DEFAULT_TRANSFORM_GROUP : CURRENT_DEFAULT_TRANSFORM_GROUP -> type(CURRENT_DEFAULT_TRANSFORM_GROUP) ;
BTID_CURRENT_PATH : CURRENT_PATH -> type(CURRENT_PATH) ;
BTID_CURRENT_ROLE : CURRENT_ROLE -> type(CURRENT_ROLE) ;
BTID_CURRENT_ROW : CURRENT_ROW -> type(CURRENT_ROW) ;
BTID_CURRENT_SCHEMA : CURRENT_SCHEMA -> type(CURRENT_SCHEMA) ;
BTID_CURRENT_TIME : CURRENT_TIME -> type(CURRENT_TIME) ;
BTID_CURRENT_TIMESTAMP : CURRENT_TIMESTAMP -> type(CURRENT_TIMESTAMP) ;
BTID_CURRENT_TRANSFORM_GROUP_FOR_TYPE : CURRENT_TRANSFORM_GROUP_FOR_TYPE -> type(CURRENT_TRANSFORM_GROUP_FOR_TYPE) ;
BTID_CURRENT_USER : CURRENT_USER -> type(CURRENT_USER) ;
BTID_CURSOR : CURSOR -> type(CURSOR) ;
BTID_CURSOR_NAME : CURSOR_NAME -> type(CURSOR_NAME) ;
BTID_CYCLE : CYCLE -> type(CYCLE) ;
BTID_DATA : DATA -> type(DATA) ;
BTID_DATABASE : DATABASE -> type(DATABASE) ;
BTID_DATE : DATE -> type(DATE) ;
BTID_DATETIME_INTERVAL_CODE : DATETIME_INTERVAL_CODE -> type(DATETIME_INTERVAL_CODE) ;
BTID_DATETIME_INTERVAL_PRECISION : DATETIME_INTERVAL_PRECISION -> type(DATETIME_INTERVAL_PRECISION) ;
BTID_DAY : DAY -> type(DAY) ;
BTID_DEALLOCATE : DEALLOCATE -> type(DEALLOCATE) ;
BTID_DEC : DEC -> type(DEC) ;
BTID_DECADE : DECADE -> type(DECADE) ;
BTID_DECIMAL : DECIMAL -> type(DECIMAL) ;
BTID_DECLARE : DECLARE -> type(DECLARE) ;
BTID_DEFAULT_ : DEFAULT_ -> type(DEFAULT_) ;
BTID_DEFAULTS : DEFAULTS -> type(DEFAULTS) ;
BTID_DEFERRABLE : DEFERRABLE -> type(DEFERRABLE) ;
BTID_DEFERRED : DEFERRED -> type(DEFERRED) ;
BTID_DEFINE : DEFINE -> type(DEFINE) ;
BTID_DEFINED : DEFINED -> type(DEFINED) ;
BTID_DEFINER : DEFINER -> type(DEFINER) ;
BTID_DEGREE : DEGREE -> type(DEGREE) ;
BTID_DELETE : DELETE -> type(DELETE) ;
BTID_DENSE_RANK : DENSE_RANK -> type(DENSE_RANK) ;
BTID_DEPTH : DEPTH -> type(DEPTH) ;
BTID_DEREF : DEREF -> type(DEREF) ;
BTID_DERIVED : DERIVED -> type(DERIVED) ;
BTID_DESC : DESC -> type(DESC) ;
BTID_DESCRIBE : DESCRIBE -> type(DESCRIBE) ;
BTID_DESCRIPTION : DESCRIPTION -> type(DESCRIPTION) ;
BTID_DESCRIPTOR : DESCRIPTOR -> type(DESCRIPTOR) ;
BTID_DETERMINISTIC : DETERMINISTIC -> type(DETERMINISTIC) ;
BTID_DIAGNOSTICS : DIAGNOSTICS -> type(DIAGNOSTICS) ;
BTID_DISALLOW : DISALLOW -> type(DISALLOW) ;
BTID_DISCONNECT : DISCONNECT -> type(DISCONNECT) ;
BTID_DISPATCH : DISPATCH -> type(DISPATCH) ;
BTID_DISTINCT : DISTINCT -> type(DISTINCT) ;
BTID_DOMAIN : DOMAIN -> type(DOMAIN) ;
BTID_DOUBLE : DOUBLE -> type(DOUBLE) ;
BTID_DOW : DOW -> type(DOW) ;
BTID_DOY : DOY -> type(DOY) ;
BTID_DROP : DROP -> type(DROP) ;
BTID_DYNAMIC : DYNAMIC -> type(DYNAMIC) ;
BTID_DYNAMIC_FUNCTION : DYNAMIC_FUNCTION -> type(DYNAMIC_FUNCTION) ;
BTID_DYNAMIC_FUNCTION_CODE : DYNAMIC_FUNCTION_CODE -> type(DYNAMIC_FUNCTION_CODE) ;
BTID_EACH : EACH -> type(EACH) ;
BTID_ELEMENT : ELEMENT -> type(ELEMENT) ;
BTID_ELSE : ELSE -> type(ELSE) ;
BTID_EMPTY : EMPTY -> type(EMPTY) ;
BTID_ENCODING : ENCODING -> type(ENCODING) ;
BTID_END : END -> type(END) ;
BTID_END_EXEC : END_EXEC -> type(END_EXEC) ;
BTID_END_FRAME : END_FRAME -> type(END_FRAME) ;
BTID_END_PARTITION : END_PARTITION -> type(END_PARTITION) ;
BTID_EPOCH : EPOCH -> type(EPOCH) ;
BTID_EQUALS : EQUALS -> type(EQUALS) ;
BTID_ERROR : ERROR -> type(ERROR) ;
BTID_ESCAPE : ESCAPE -> type(ESCAPE) ;
BTID_EVERY : EVERY -> type(EVERY) ;
BTID_EXCEPT : EXCEPT -> type(EXCEPT) ;
BTID_EXCEPTION : EXCEPTION -> type(EXCEPTION) ;
BTID_EXCLUDE : EXCLUDE -> type(EXCLUDE) ;
BTID_EXCLUDING : EXCLUDING -> type(EXCLUDING) ;
BTID_EXEC : EXEC -> type(EXEC) ;
BTID_EXECUTE : EXECUTE -> type(EXECUTE) ;
BTID_EXISTS : EXISTS -> type(EXISTS) ;
BTID_EXP : EXP -> type(EXP) ;
BTID_EXPLAIN : EXPLAIN -> type(EXPLAIN) ;
BTID_EXTEND : EXTEND -> type(EXTEND) ;
BTID_EXTERNAL : EXTERNAL -> type(EXTERNAL) ;
BTID_EXTRACT : EXTRACT -> type(EXTRACT) ;
BTID_FALSE : FALSE -> type(FALSE) ;
BTID_FETCH : FETCH -> type(FETCH) ;
BTID_FILTER : FILTER -> type(FILTER) ;
BTID_FINAL : FINAL -> type(FINAL) ;
BTID_FIRST : FIRST -> type(FIRST) ;
BTID_FIRST_VALUE : FIRST_VALUE -> type(FIRST_VALUE) ;
BTID_FLOAT : FLOAT -> type(FLOAT) ;
BTID_FLOOR : FLOOR -> type(FLOOR) ;
BTID_FOLLOWING : FOLLOWING -> type(FOLLOWING) ;
BTID_FOR : FOR -> type(FOR) ;
BTID_FORMAT : FORMAT -> type(FORMAT) ;
BTID_FOREIGN : FOREIGN -> type(FOREIGN) ;
BTID_FORTRAN : FORTRAN -> type(FORTRAN) ;
BTID_FOUND : FOUND -> type(FOUND) ;
BTID_FRAC_SECOND : FRAC_SECOND -> type(FRAC_SECOND) ;
BTID_FRAME_ROW : FRAME_ROW -> type(FRAME_ROW) ;
BTID_FREE : FREE -> type(FREE) ;
BTID_FROM : FROM -> type(FROM) ;
BTID_FULL : FULL -> type(FULL) ;
BTID_FUNCTION : FUNCTION -> type(FUNCTION) ;
BTID_FUSION : FUSION -> type(FUSION) ;
BTID_G : G -> type(G) ;
BTID_GENERAL : GENERAL -> type(GENERAL) ;
BTID_GENERATED : GENERATED -> type(GENERATED) ;
BTID_GEOMETRY : GEOMETRY -> type(GEOMETRY) ;
BTID_GET : GET -> type(GET) ;
BTID_GLOBAL : GLOBAL -> type(GLOBAL) ;
BTID_GO : GO -> type(GO) ;
BTID_GOTO : GOTO -> type(GOTO) ;
BTID_GRANT : GRANT -> type(GRANT) ;
BTID_GRANTED : GRANTED -> type(GRANTED) ;
BTID_GROUP : GROUP -> type(GROUP) ;
BTID_GROUPING : GROUPING -> type(GROUPING) ;
BTID_GROUPS : GROUPS -> type(GROUPS) ;
BTID_HAVING : HAVING -> type(HAVING) ;
BTID_HIERARCHY : HIERARCHY -> type(HIERARCHY) ;
BTID_HOLD : HOLD -> type(HOLD) ;
BTID_HOUR : HOUR -> type(HOUR) ;
BTID_IDENTITY : IDENTITY -> type(IDENTITY) ;
BTID_IGNORE : IGNORE -> type(IGNORE) ;
BTID_IMMEDIATE : IMMEDIATE -> type(IMMEDIATE) ;
BTID_IMMEDIATELY : IMMEDIATELY -> type(IMMEDIATELY) ;
BTID_IMPLEMENTATION : IMPLEMENTATION -> type(IMPLEMENTATION) ;
BTID_IMPORT : IMPORT -> type(IMPORT) ;
BTID_IN : IN -> type(IN) ;
BTID_INCLUDE : INCLUDE -> type(INCLUDE) ;
BTID_INCLUDING : INCLUDING -> type(INCLUDING) ;
BTID_INCREMENT : INCREMENT -> type(INCREMENT) ;
BTID_INDICATOR : INDICATOR -> type(INDICATOR) ;
BTID_INITIAL : INITIAL -> type(INITIAL) ;
BTID_INITIALLY : INITIALLY -> type(INITIALLY) ;
BTID_INNER : INNER -> type(INNER) ;
BTID_INOUT : INOUT -> type(INOUT) ;
BTID_INPUT : INPUT -> type(INPUT) ;
BTID_INSENSITIVE : INSENSITIVE -> type(INSENSITIVE) ;
BTID_INSERT : INSERT -> type(INSERT) ;
BTID_INSTANCE : INSTANCE -> type(INSTANCE) ;
BTID_INSTANTIABLE : INSTANTIABLE -> type(INSTANTIABLE) ;
BTID_INT : INT -> type(INT) ;
BTID_INTEGER : INTEGER -> type(INTEGER) ;
BTID_INTERSECT : INTERSECT -> type(INTERSECT) ;
BTID_INTERSECTION : INTERSECTION -> type(INTERSECTION) ;
BTID_INTERVAL : INTERVAL -> type(INTERVAL) ;
BTID_INTO : INTO -> type(INTO) ;
BTID_INVOKER : INVOKER -> type(INVOKER) ;
BTID_IS : IS -> type(IS) ;
BTID_ISODOW : ISODOW -> type(ISODOW) ;
BTID_ISOYEAR : ISOYEAR -> type(ISOYEAR) ;
BTID_ISOLATION : ISOLATION -> type(ISOLATION) ;
BTID_JAVA : JAVA -> type(JAVA) ;
BTID_JOIN : JOIN -> type(JOIN) ;
BTID_JSON : JSON -> type(JSON) ;
BTID_JSON_ARRAY : JSON_ARRAY -> type(JSON_ARRAY) ;
BTID_JSON_ARRAYAGG : JSON_ARRAYAGG -> type(JSON_ARRAYAGG) ;
BTID_JSON_DEPTH : JSON_DEPTH -> type(JSON_DEPTH) ;
BTID_JSON_EXISTS : JSON_EXISTS -> type(JSON_EXISTS) ;
BTID_JSON_KEYS : JSON_KEYS -> type(JSON_KEYS) ;
BTID_JSON_LENGTH : JSON_LENGTH -> type(JSON_LENGTH) ;
BTID_JSON_OBJECT : JSON_OBJECT -> type(JSON_OBJECT) ;
BTID_JSON_OBJECTAGG : JSON_OBJECTAGG -> type(JSON_OBJECTAGG) ;
BTID_JSON_PRETTY : JSON_PRETTY -> type(JSON_PRETTY) ;
BTID_JSON_QUERY : JSON_QUERY -> type(JSON_QUERY) ;
BTID_JSON_TYPE : JSON_TYPE -> type(JSON_TYPE) ;
BTID_JSON_VALUE : JSON_VALUE -> type(JSON_VALUE) ;
BTID_K : K -> type(K) ;
BTID_KEY : KEY -> type(KEY) ;
BTID_KEY_MEMBER : KEY_MEMBER -> type(KEY_MEMBER) ;
BTID_KEY_TYPE : KEY_TYPE -> type(KEY_TYPE) ;
BTID_LABEL : LABEL -> type(LABEL) ;
BTID_LAG : LAG -> type(LAG) ;
BTID_LANGUAGE : LANGUAGE -> type(LANGUAGE) ;
BTID_LARGE : LARGE -> type(LARGE) ;
BTID_LAST : LAST -> type(LAST) ;
BTID_LAST_VALUE : LAST_VALUE -> type(LAST_VALUE) ;
BTID_LATERAL : LATERAL -> type(LATERAL) ;
BTID_LEAD : LEAD -> type(LEAD) ;
BTID_LEADING : LEADING -> type(LEADING) ;
BTID_LEFT : LEFT -> type(LEFT) ;
BTID_LENGTH : LENGTH -> type(LENGTH) ;
BTID_LEVEL : LEVEL -> type(LEVEL) ;
BTID_LIBRARY : LIBRARY -> type(LIBRARY) ;
BTID_LIKE : LIKE -> type(LIKE) ;
BTID_LIKE_REGEX : LIKE_REGEX -> type(LIKE_REGEX) ;
BTID_LIMIT : LIMIT -> type(LIMIT) ;
BTID_LN : LN -> type(LN) ;
BTID_LOCAL : LOCAL -> type(LOCAL) ;
BTID_LOCALTIME : LOCALTIME -> type(LOCALTIME) ;
BTID_LOCALTIMESTAMP : LOCALTIMESTAMP -> type(LOCALTIMESTAMP) ;
BTID_LOCATOR : LOCATOR -> type(LOCATOR) ;
BTID_LOWER : LOWER -> type(LOWER) ;
BTID_M : M -> type(M) ;
BTID_MAP : MAP -> type(MAP) ;
BTID_MATCH : MATCH -> type(MATCH) ;
BTID_MATCHED : MATCHED -> type(MATCHED) ;
BTID_MATCHES : MATCHES -> type(MATCHES) ;
BTID_MATCH_NUMBER : MATCH_NUMBER -> type(MATCH_NUMBER) ;
BTID_MATCH_RECOGNIZE : MATCH_RECOGNIZE -> type(MATCH_RECOGNIZE) ;
BTID_MAX : MAX -> type(MAX) ;
BTID_MAXVALUE : MAXVALUE -> type(MAXVALUE) ;
BTID_MEASURES : MEASURES -> type(MEASURES) ;
BTID_MEMBER : MEMBER -> type(MEMBER) ;
BTID_MERGE : MERGE -> type(MERGE) ;
BTID_MESSAGE_LENGTH : MESSAGE_LENGTH -> type(MESSAGE_LENGTH) ;
BTID_MESSAGE_OCTET_LENGTH : MESSAGE_OCTET_LENGTH -> type(MESSAGE_OCTET_LENGTH) ;
BTID_MESSAGE_TEXT : MESSAGE_TEXT -> type(MESSAGE_TEXT) ;
BTID_METHOD : METHOD -> type(METHOD) ;
BTID_MICROSECOND : MICROSECOND -> type(MICROSECOND) ;
BTID_MILLISECOND : MILLISECOND -> type(MILLISECOND) ;
BTID_MILLENNIUM : MILLENNIUM -> type(MILLENNIUM) ;
BTID_MIN : MIN -> type(MIN) ;
BTID_MINUTE : MINUTE -> type(MINUTE) ;
BTID_MINVALUE : MINVALUE -> type(MINVALUE) ;
BTID_MOD : MOD -> type(MOD) ;
BTID_MODIFIES : MODIFIES -> type(MODIFIES) ;
BTID_MODULE : MODULE -> type(MODULE) ;
BTID_MONTH : MONTH -> type(MONTH) ;
BTID_MORE_ : MORE_ -> type(MORE_) ;
BTID_MULTISET : MULTISET -> type(MULTISET) ;
BTID_MUMPS : MUMPS -> type(MUMPS) ;
BTID_NAME : NAME -> type(NAME) ;
BTID_NAMES : NAMES -> type(NAMES) ;
BTID_NANOSECOND : NANOSECOND -> type(NANOSECOND) ;
BTID_NATIONAL : NATIONAL -> type(NATIONAL) ;
BTID_NATURAL : NATURAL -> type(NATURAL) ;
BTID_NCHAR : NCHAR -> type(NCHAR) ;
BTID_NCLOB : NCLOB -> type(NCLOB) ;
BTID_NESTING : NESTING -> type(NESTING) ;
BTID_NEW : NEW -> type(NEW) ;
BTID_NEXT : NEXT -> type(NEXT) ;
BTID_NO : NO -> type(NO) ;
BTID_NONE : NONE -> type(NONE) ;
BTID_NORMALIZE : NORMALIZE -> type(NORMALIZE) ;
BTID_NORMALIZED : NORMALIZED -> type(NORMALIZED) ;
BTID_NOT : NOT -> type(NOT) ;
BTID_NTH_VALUE : NTH_VALUE -> type(NTH_VALUE) ;
BTID_NTILE : NTILE -> type(NTILE) ;
BTID_NULL : NULL -> type(NULL) ;
BTID_NULLABLE : NULLABLE -> type(NULLABLE) ;
BTID_NULLIF : NULLIF -> type(NULLIF) ;
BTID_NULLS : NULLS -> type(NULLS) ;
BTID_NUMBER : NUMBER -> type(NUMBER) ;
BTID_NUMERIC : NUMERIC -> type(NUMERIC) ;
BTID_OBJECT : OBJECT -> type(OBJECT) ;
BTID_OCCURRENCES_REGEX : OCCURRENCES_REGEX -> type(OCCURRENCES_REGEX) ;
BTID_OCTET_LENGTH : OCTET_LENGTH -> type(OCTET_LENGTH) ;
BTID_OCTETS : OCTETS -> type(OCTETS) ;
BTID_OF : OF -> type(OF) ;
BTID_OFFSET : OFFSET -> type(OFFSET) ;
BTID_OLD : OLD -> type(OLD) ;
BTID_OMIT : OMIT -> type(OMIT) ;
BTID_ON : ON -> type(ON) ;
BTID_ONE : ONE -> type(ONE) ;
BTID_ONLY : ONLY -> type(ONLY) ;
BTID_OPEN : OPEN -> type(OPEN) ;
BTID_OPTION : OPTION -> type(OPTION) ;
BTID_OPTIONS : OPTIONS -> type(OPTIONS) ;
BTID_OR : OR -> type(OR) ;
BTID_ORDER : ORDER -> type(ORDER) ;
BTID_ORDERING : ORDERING -> type(ORDERING) ;
BTID_ORDINALITY : ORDINALITY -> type(ORDINALITY) ;
BTID_OTHERS : OTHERS -> type(OTHERS) ;
BTID_OUT : OUT -> type(OUT) ;
BTID_OUTER : OUTER -> type(OUTER) ;
BTID_OUTPUT : OUTPUT -> type(OUTPUT) ;
BTID_OVER : OVER -> type(OVER) ;
BTID_OVERLAPS : OVERLAPS -> type(OVERLAPS) ;
BTID_OVERLAY : OVERLAY -> type(OVERLAY) ;
BTID_OVERRIDING : OVERRIDING -> type(OVERRIDING) ;
BTID_PAD : PAD -> type(PAD) ;
BTID_PARAMETER : PARAMETER -> type(PARAMETER) ;
BTID_PARAMETER_MODE : PARAMETER_MODE -> type(PARAMETER_MODE) ;
BTID_PARAMETER_NAME : PARAMETER_NAME -> type(PARAMETER_NAME) ;
BTID_PARAMETER_ORDINAL_POSITION : PARAMETER_ORDINAL_POSITION -> type(PARAMETER_ORDINAL_POSITION) ;
BTID_PARAMETER_SPECIFIC_CATALOG : PARAMETER_SPECIFIC_CATALOG -> type(PARAMETER_SPECIFIC_CATALOG) ;
BTID_PARAMETER_SPECIFIC_NAME : PARAMETER_SPECIFIC_NAME -> type(PARAMETER_SPECIFIC_NAME) ;
BTID_PARAMETER_SPECIFIC_SCHEMA : PARAMETER_SPECIFIC_SCHEMA -> type(PARAMETER_SPECIFIC_SCHEMA) ;
BTID_PARTIAL : PARTIAL -> type(PARTIAL) ;
BTID_PARTITION : PARTITION -> type(PARTITION) ;
BTID_PASCAL : PASCAL -> type(PASCAL) ;
BTID_PASSING : PASSING -> type(PASSING) ;
BTID_PASSTHROUGH : PASSTHROUGH -> type(PASSTHROUGH) ;
BTID_PAST : PAST -> type(PAST) ;
BTID_PATH : PATH -> type(PATH) ;
BTID_PATTERN : PATTERN -> type(PATTERN) ;
BTID_PER : PER -> type(PER) ;
BTID_PERCENT : PERCENT -> type(PERCENT) ;
BTID_PERCENTILE_CONT : PERCENTILE_CONT -> type(PERCENTILE_CONT) ;
BTID_PERCENTILE_DISC : PERCENTILE_DISC -> type(PERCENTILE_DISC) ;
BTID_PERCENT_RANK : PERCENT_RANK -> type(PERCENT_RANK) ;
BTID_PERIOD : PERIOD -> type(PERIOD) ;
BTID_PERMUTE : PERMUTE -> type(PERMUTE) ;
BTID_PIVOT : PIVOT -> type(PIVOT) ;
BTID_PLACING : PLACING -> type(PLACING) ;
BTID_PLAN : PLAN -> type(PLAN) ;
BTID_PLI : PLI -> type(PLI) ;
BTID_PORTION : PORTION -> type(PORTION) ;
BTID_POSITION : POSITION -> type(POSITION) ;
BTID_POSITION_REGEX : POSITION_REGEX -> type(POSITION_REGEX) ;
BTID_POWER : POWER -> type(POWER) ;
BTID_PRECEDES : PRECEDES -> type(PRECEDES) ;
BTID_PRECEDING : PRECEDING -> type(PRECEDING) ;
BTID_PRECISION : PRECISION -> type(PRECISION) ;
BTID_PREPARE : PREPARE -> type(PREPARE) ;
BTID_PRESERVE : PRESERVE -> type(PRESERVE) ;
BTID_PREV : PREV -> type(PREV) ;
BTID_PRIMARY : PRIMARY -> type(PRIMARY) ;
BTID_PRIOR : PRIOR -> type(PRIOR) ;
BTID_PRIVILEGES : PRIVILEGES -> type(PRIVILEGES) ;
BTID_PROCEDURE : PROCEDURE -> type(PROCEDURE) ;
BTID_PUBLIC : PUBLIC -> type(PUBLIC) ;
BTID_QUALIFY : QUALIFY -> type(QUALIFY) ;
BTID_QUARTER : QUARTER -> type(QUARTER) ;
BTID_RANGE : RANGE -> type(RANGE) ;
BTID_RANK : RANK -> type(RANK) ;
BTID_READ : READ -> type(READ) ;
BTID_READS : READS -> type(READS) ;
BTID_REAL : REAL -> type(REAL) ;
BTID_RECURSIVE : RECURSIVE -> type(RECURSIVE) ;
BTID_REF : REF -> type(REF) ;
BTID_REFERENCES : REFERENCES -> type(REFERENCES) ;
BTID_REFERENCING : REFERENCING -> type(REFERENCING) ;
BTID_REGR_AVGX : REGR_AVGX -> type(REGR_AVGX) ;
BTID_REGR_AVGY : REGR_AVGY -> type(REGR_AVGY) ;
BTID_REGR_COUNT : REGR_COUNT -> type(REGR_COUNT) ;
BTID_REGR_INTERCEPT : REGR_INTERCEPT -> type(REGR_INTERCEPT) ;
BTID_REGR_R2 : REGR_R2 -> type(REGR_R2) ;
BTID_REGR_SLOPE : REGR_SLOPE -> type(REGR_SLOPE) ;
BTID_REGR_SXX : REGR_SXX -> type(REGR_SXX) ;
BTID_REGR_SXY : REGR_SXY -> type(REGR_SXY) ;
BTID_REGR_SYY : REGR_SYY -> type(REGR_SYY) ;
BTID_RELATIVE : RELATIVE -> type(RELATIVE) ;
BTID_RELEASE : RELEASE -> type(RELEASE) ;
BTID_REPEATABLE : REPEATABLE -> type(REPEATABLE) ;
BTID_REPLACE : REPLACE -> type(REPLACE) ;
BTID_RESET : RESET -> type(RESET) ;
BTID_RESPECT : RESPECT -> type(RESPECT) ;
BTID_RESTART : RESTART -> type(RESTART) ;
BTID_RESTRICT : RESTRICT -> type(RESTRICT) ;
BTID_RESULT : RESULT -> type(RESULT) ;
BTID_RETURN : RETURN -> type(RETURN) ;
BTID_RETURNED_CARDINALITY : RETURNED_CARDINALITY -> type(RETURNED_CARDINALITY) ;
BTID_RETURNED_LENGTH : RETURNED_LENGTH -> type(RETURNED_LENGTH) ;
BTID_RETURNED_OCTET_LENGTH : RETURNED_OCTET_LENGTH -> type(RETURNED_OCTET_LENGTH) ;
BTID_RETURNED_SQLSTATE : RETURNED_SQLSTATE -> type(RETURNED_SQLSTATE) ;
BTID_RETURNING : RETURNING -> type(RETURNING) ;
BTID_RETURNS : RETURNS -> type(RETURNS) ;
BTID_REVOKE : REVOKE -> type(REVOKE) ;
BTID_RIGHT : RIGHT -> type(RIGHT) ;
BTID_ROLE : ROLE -> type(ROLE) ;
BTID_ROLLBACK : ROLLBACK -> type(ROLLBACK) ;
BTID_ROLLUP : ROLLUP -> type(ROLLUP) ;
BTID_ROUTINE : ROUTINE -> type(ROUTINE) ;
BTID_ROUTINE_CATALOG : ROUTINE_CATALOG -> type(ROUTINE_CATALOG) ;
BTID_ROUTINE_NAME : ROUTINE_NAME -> type(ROUTINE_NAME) ;
BTID_ROUTINE_SCHEMA : ROUTINE_SCHEMA -> type(ROUTINE_SCHEMA) ;
BTID_ROW : ROW -> type(ROW) ;
BTID_ROW_COUNT : ROW_COUNT -> type(ROW_COUNT) ;
BTID_ROW_NUMBER : ROW_NUMBER -> type(ROW_NUMBER) ;
BTID_ROWS : ROWS -> type(ROWS) ;
BTID_RUNNING : RUNNING -> type(RUNNING) ;
BTID_SAVEPOINT : SAVEPOINT -> type(SAVEPOINT) ;
BTID_SCALAR : SCALAR -> type(SCALAR) ;
BTID_SCALE : SCALE -> type(SCALE) ;
BTID_SCHEMA : SCHEMA -> type(SCHEMA) ;
BTID_SCHEMA_NAME : SCHEMA_NAME -> type(SCHEMA_NAME) ;
BTID_SCOPE : SCOPE -> type(SCOPE) ;
BTID_SCOPE_CATALOGS : SCOPE_CATALOGS -> type(SCOPE_CATALOGS) ;
BTID_SCOPE_NAME : SCOPE_NAME -> type(SCOPE_NAME) ;
BTID_SCOPE_SCHEMA : SCOPE_SCHEMA -> type(SCOPE_SCHEMA) ;
BTID_SCROLL : SCROLL -> type(SCROLL) ;
BTID_SEARCH : SEARCH -> type(SEARCH) ;
BTID_SECOND : SECOND -> type(SECOND) ;
BTID_SECTION : SECTION -> type(SECTION) ;
BTID_SECURITY : SECURITY -> type(SECURITY) ;
BTID_SEEK : SEEK -> type(SEEK) ;
BTID_SELECT : SELECT -> type(SELECT) ;
BTID_SELF : SELF -> type(SELF) ;
BTID_SENSITIVE : SENSITIVE -> type(SENSITIVE) ;
BTID_SEQUENCE : SEQUENCE -> type(SEQUENCE) ;
BTID_SERIALIZABLE : SERIALIZABLE -> type(SERIALIZABLE) ;
BTID_SERVER : SERVER -> type(SERVER) ;
BTID_SERVER_NAME : SERVER_NAME -> type(SERVER_NAME) ;
BTID_SESSION : SESSION -> type(SESSION) ;
BTID_SESSION_USER : SESSION_USER -> type(SESSION_USER) ;
BTID_SET : SET -> type(SET) ;
BTID_SETS : SETS -> type(SETS) ;
BTID_SET_MINUS : SET_MINUS -> type(SET_MINUS) ;
BTID_SHOW : SHOW -> type(SHOW) ;
BTID_SIMILAR : SIMILAR -> type(SIMILAR) ;
BTID_SIMPLE : SIMPLE -> type(SIMPLE) ;
BTID_SIZE : SIZE -> type(SIZE) ;
BTID_SKIP_ : SKIP_ -> type(SKIP_) ;
BTID_SMALLINT : SMALLINT -> type(SMALLINT) ;
BTID_SOME : SOME -> type(SOME) ;
BTID_SOURCE : SOURCE -> type(SOURCE) ;
BTID_SPACE : SPACE -> type(SPACE) ;
BTID_SPECIFIC : SPECIFIC -> type(SPECIFIC) ;
BTID_SPECIFIC_NAME : SPECIFIC_NAME -> type(SPECIFIC_NAME) ;
BTID_SPECIFICTYPE : SPECIFICTYPE -> type(SPECIFICTYPE) ;
BTID_SQL : SQL -> type(SQL) ;
BTID_SQLEXCEPTION : SQLEXCEPTION -> type(SQLEXCEPTION) ;
BTID_SQLSTATE : SQLSTATE -> type(SQLSTATE) ;
BTID_SQLWARNING : SQLWARNING -> type(SQLWARNING) ;
BTID_SQL_BIGINT : SQL_BIGINT -> type(SQL_BIGINT) ;
BTID_SQL_BINARY : SQL_BINARY -> type(SQL_BINARY) ;
BTID_SQL_BIT : SQL_BIT -> type(SQL_BIT) ;
BTID_SQL_BLOB : SQL_BLOB -> type(SQL_BLOB) ;
BTID_SQL_BOOLEAN : SQL_BOOLEAN -> type(SQL_BOOLEAN) ;
BTID_SQL_CHAR : SQL_CHAR -> type(SQL_CHAR) ;
BTID_SQL_CLOB : SQL_CLOB -> type(SQL_CLOB) ;
BTID_SQL_DATE : SQL_DATE -> type(SQL_DATE) ;
BTID_SQL_DECIMAL : SQL_DECIMAL -> type(SQL_DECIMAL) ;
BTID_SQL_DOUBLE : SQL_DOUBLE -> type(SQL_DOUBLE) ;
BTID_SQL_FLOAT : SQL_FLOAT -> type(SQL_FLOAT) ;
BTID_SQL_INTEGER : SQL_INTEGER -> type(SQL_INTEGER) ;
BTID_SQL_INTERVAL_DAY : SQL_INTERVAL_DAY -> type(SQL_INTERVAL_DAY) ;
BTID_SQL_INTERVAL_DAY_TO_HOUR : SQL_INTERVAL_DAY_TO_HOUR -> type(SQL_INTERVAL_DAY_TO_HOUR) ;
BTID_SQL_INTERVAL_DAY_TO_MINUTE : SQL_INTERVAL_DAY_TO_MINUTE -> type(SQL_INTERVAL_DAY_TO_MINUTE) ;
BTID_SQL_INTERVAL_DAY_TO_SECOND : SQL_INTERVAL_DAY_TO_SECOND -> type(SQL_INTERVAL_DAY_TO_SECOND) ;
BTID_SQL_INTERVAL_HOUR : SQL_INTERVAL_HOUR -> type(SQL_INTERVAL_HOUR) ;
BTID_SQL_INTERVAL_HOUR_TO_MINUTE : SQL_INTERVAL_HOUR_TO_MINUTE -> type(SQL_INTERVAL_HOUR_TO_MINUTE) ;
BTID_SQL_INTERVAL_HOUR_TO_SECOND : SQL_INTERVAL_HOUR_TO_SECOND -> type(SQL_INTERVAL_HOUR_TO_SECOND) ;
BTID_SQL_INTERVAL_MINUTE : SQL_INTERVAL_MINUTE -> type(SQL_INTERVAL_MINUTE) ;
BTID_SQL_INTERVAL_MINUTE_TO_SECOND : SQL_INTERVAL_MINUTE_TO_SECOND -> type(SQL_INTERVAL_MINUTE_TO_SECOND) ;
BTID_SQL_INTERVAL_MONTH : SQL_INTERVAL_MONTH -> type(SQL_INTERVAL_MONTH) ;
BTID_SQL_INTERVAL_SECOND : SQL_INTERVAL_SECOND -> type(SQL_INTERVAL_SECOND) ;
BTID_SQL_INTERVAL_YEAR : SQL_INTERVAL_YEAR -> type(SQL_INTERVAL_YEAR) ;
BTID_SQL_INTERVAL_YEAR_TO_MONTH : SQL_INTERVAL_YEAR_TO_MONTH -> type(SQL_INTERVAL_YEAR_TO_MONTH) ;
BTID_SQL_LONGVARBINARY : SQL_LONGVARBINARY -> type(SQL_LONGVARBINARY) ;
BTID_SQL_LONGVARCHAR : SQL_LONGVARCHAR -> type(SQL_LONGVARCHAR) ;
BTID_SQL_LONGVARNCHAR : SQL_LONGVARNCHAR -> type(SQL_LONGVARNCHAR) ;
BTID_SQL_NCHAR : SQL_NCHAR -> type(SQL_NCHAR) ;
BTID_SQL_NCLOB : SQL_NCLOB -> type(SQL_NCLOB) ;
BTID_SQL_NUMERIC : SQL_NUMERIC -> type(SQL_NUMERIC) ;
BTID_SQL_NVARCHAR : SQL_NVARCHAR -> type(SQL_NVARCHAR) ;
BTID_SQL_REAL : SQL_REAL -> type(SQL_REAL) ;
BTID_SQL_SMALLINT : SQL_SMALLINT -> type(SQL_SMALLINT) ;
BTID_SQL_TIME : SQL_TIME -> type(SQL_TIME) ;
BTID_SQL_TIMESTAMP : SQL_TIMESTAMP -> type(SQL_TIMESTAMP) ;
BTID_SQL_TINYINT : SQL_TINYINT -> type(SQL_TINYINT) ;
BTID_SQL_TSI_DAY : SQL_TSI_DAY -> type(SQL_TSI_DAY) ;
BTID_SQL_TSI_FRAC_SECOND : SQL_TSI_FRAC_SECOND -> type(SQL_TSI_FRAC_SECOND) ;
BTID_SQL_TSI_HOUR : SQL_TSI_HOUR -> type(SQL_TSI_HOUR) ;
BTID_SQL_TSI_MICROSECOND : SQL_TSI_MICROSECOND -> type(SQL_TSI_MICROSECOND) ;
BTID_SQL_TSI_MINUTE : SQL_TSI_MINUTE -> type(SQL_TSI_MINUTE) ;
BTID_SQL_TSI_MONTH : SQL_TSI_MONTH -> type(SQL_TSI_MONTH) ;
BTID_SQL_TSI_QUARTER : SQL_TSI_QUARTER -> type(SQL_TSI_QUARTER) ;
BTID_SQL_TSI_SECOND : SQL_TSI_SECOND -> type(SQL_TSI_SECOND) ;
BTID_SQL_TSI_WEEK : SQL_TSI_WEEK -> type(SQL_TSI_WEEK) ;
BTID_SQL_TSI_YEAR : SQL_TSI_YEAR -> type(SQL_TSI_YEAR) ;
BTID_SQL_VARBINARY : SQL_VARBINARY -> type(SQL_VARBINARY) ;
BTID_SQL_VARCHAR : SQL_VARCHAR -> type(SQL_VARCHAR) ;
BTID_SQRT : SQRT -> type(SQRT) ;
BTID_START : START -> type(START) ;
BTID_STATE : STATE -> type(STATE) ;
BTID_STATEMENT : STATEMENT -> type(STATEMENT) ;
BTID_STATIC : STATIC -> type(STATIC) ;
BTID_STDDEV_POP : STDDEV_POP -> type(STDDEV_POP) ;
BTID_STDDEV_SAMP : STDDEV_SAMP -> type(STDDEV_SAMP) ;
BTID_STREAM : STREAM -> type(STREAM) ;
BTID_STRUCTURE : STRUCTURE -> type(STRUCTURE) ;
BTID_STYLE : STYLE -> type(STYLE) ;
BTID_SUBCLASS_ORIGIN : SUBCLASS_ORIGIN -> type(SUBCLASS_ORIGIN) ;
BTID_SUBMULTISET : SUBMULTISET -> type(SUBMULTISET) ;
BTID_SUBSET : SUBSET -> type(SUBSET) ;
BTID_SUBSTITUTE : SUBSTITUTE -> type(SUBSTITUTE) ;
BTID_SUBSTRING : SUBSTRING -> type(SUBSTRING) ;
BTID_SUBSTRING_REGEX : SUBSTRING_REGEX -> type(SUBSTRING_REGEX) ;
BTID_SUCCEEDS : SUCCEEDS -> type(SUCCEEDS) ;
BTID_SUM : SUM -> type(SUM) ;
BTID_SYMMETRIC : SYMMETRIC -> type(SYMMETRIC) ;
BTID_SYSTEM : SYSTEM -> type(SYSTEM) ;
BTID_SYSTEM_TIME : SYSTEM_TIME -> type(SYSTEM_TIME) ;
BTID_SYSTEM_USER : SYSTEM_USER -> type(SYSTEM_USER) ;
BTID_TABLE : TABLE -> type(TABLE) ;
BTID_TABLE_NAME : TABLE_NAME -> type(TABLE_NAME) ;
BTID_TABLESAMPLE : TABLESAMPLE -> type(TABLESAMPLE) ;
BTID_TEMPORARY : TEMPORARY -> type(TEMPORARY) ;
BTID_THEN : THEN -> type(THEN) ;
BTID_TIES : TIES -> type(TIES) ;
BTID_TIME : TIME -> type(TIME) ;
BTID_TIMESTAMP : TIMESTAMP -> type(TIMESTAMP) ;
BTID_TIMESTAMPADD : TIMESTAMPADD -> type(TIMESTAMPADD) ;
BTID_TIMESTAMPDIFF : TIMESTAMPDIFF -> type(TIMESTAMPDIFF) ;
BTID_TIMEZONE_HOUR : TIMEZONE_HOUR -> type(TIMEZONE_HOUR) ;
BTID_TIMEZONE_MINUTE : TIMEZONE_MINUTE -> type(TIMEZONE_MINUTE) ;
BTID_TINYINT : TINYINT -> type(TINYINT) ;
BTID_TO : TO -> type(TO) ;
BTID_TOP_LEVEL_COUNT : TOP_LEVEL_COUNT -> type(TOP_LEVEL_COUNT) ;
BTID_TRAILING : TRAILING -> type(TRAILING) ;
BTID_TRANSACTION : TRANSACTION -> type(TRANSACTION) ;
BTID_TRANSACTIONS_ACTIVE : TRANSACTIONS_ACTIVE -> type(TRANSACTIONS_ACTIVE) ;
BTID_TRANSACTIONS_COMMITTED : TRANSACTIONS_COMMITTED -> type(TRANSACTIONS_COMMITTED) ;
BTID_TRANSACTIONS_ROLLED_BACK : TRANSACTIONS_ROLLED_BACK -> type(TRANSACTIONS_ROLLED_BACK) ;
BTID_TRANSFORM : TRANSFORM -> type(TRANSFORM) ;
BTID_TRANSFORMS : TRANSFORMS -> type(TRANSFORMS) ;
BTID_TRANSLATE : TRANSLATE -> type(TRANSLATE) ;
BTID_TRANSLATE_REGEX : TRANSLATE_REGEX -> type(TRANSLATE_REGEX) ;
BTID_TRANSLATION : TRANSLATION -> type(TRANSLATION) ;
BTID_TREAT : TREAT -> type(TREAT) ;
BTID_TRIGGER : TRIGGER -> type(TRIGGER) ;
BTID_TRIGGER_CATALOG : TRIGGER_CATALOG -> type(TRIGGER_CATALOG) ;
BTID_TRIGGER_NAME : TRIGGER_NAME -> type(TRIGGER_NAME) ;
BTID_TRIGGER_SCHEMA : TRIGGER_SCHEMA -> type(TRIGGER_SCHEMA) ;
BTID_TRIM : TRIM -> type(TRIM) ;
BTID_TRIM_ARRAY : TRIM_ARRAY -> type(TRIM_ARRAY) ;
BTID_TRUE : TRUE -> type(TRUE) ;
BTID_TRUNCATE : TRUNCATE -> type(TRUNCATE) ;
BTID_TYPE : TYPE -> type(TYPE) ;
BTID_UESCAPE : UESCAPE -> type(UESCAPE) ;
BTID_UNBOUNDED : UNBOUNDED -> type(UNBOUNDED) ;
BTID_UNCOMMITTED : UNCOMMITTED -> type(UNCOMMITTED) ;
BTID_UNCONDITIONAL : UNCONDITIONAL -> type(UNCONDITIONAL) ;
BTID_UNDER : UNDER -> type(UNDER) ;
BTID_UNION : UNION -> type(UNION) ;
BTID_UNIQUE : UNIQUE -> type(UNIQUE) ;
BTID_UNKNOWN : UNKNOWN -> type(UNKNOWN) ;
BTID_UNPIVOT : UNPIVOT -> type(UNPIVOT) ;
BTID_UNNAMED : UNNAMED -> type(UNNAMED) ;
BTID_UNNEST : UNNEST -> type(UNNEST) ;
BTID_UPDATE : UPDATE -> type(UPDATE) ;
BTID_UPPER : UPPER -> type(UPPER) ;
BTID_UPSERT : UPSERT -> type(UPSERT) ;
BTID_USAGE : USAGE -> type(USAGE) ;
BTID_USER : USER -> type(USER) ;
BTID_USER_DEFINED_TYPE_CATALOG : USER_DEFINED_TYPE_CATALOG -> type(USER_DEFINED_TYPE_CATALOG) ;
BTID_USER_DEFINED_TYPE_CODE : USER_DEFINED_TYPE_CODE -> type(USER_DEFINED_TYPE_CODE) ;
BTID_USER_DEFINED_TYPE_NAME : USER_DEFINED_TYPE_NAME -> type(USER_DEFINED_TYPE_NAME) ;
BTID_USER_DEFINED_TYPE_SCHEMA : USER_DEFINED_TYPE_SCHEMA -> type(USER_DEFINED_TYPE_SCHEMA) ;
BTID_USING : USING -> type(USING) ;
BTID_UTF8 : UTF8 -> type(UTF8) ;
BTID_UTF16 : UTF16 -> type(UTF16) ;
BTID_UTF32 : UTF32 -> type(UTF32) ;
BTID_VALUE : VALUE -> type(VALUE) ;
BTID_VALUES : VALUES -> type(VALUES) ;
BTID_VALUE_OF : VALUE_OF -> type(VALUE_OF) ;
BTID_VAR_POP : VAR_POP -> type(VAR_POP) ;
BTID_VAR_SAMP : VAR_SAMP -> type(VAR_SAMP) ;
BTID_VARBINARY : VARBINARY -> type(VARBINARY) ;
BTID_VARCHAR : VARCHAR -> type(VARCHAR) ;
BTID_VARYING : VARYING -> type(VARYING) ;
BTID_VERSION : VERSION -> type(VERSION) ;
BTID_VERSIONING : VERSIONING -> type(VERSIONING) ;
BTID_VIEW : VIEW -> type(VIEW) ;
BTID_WEEK : WEEK -> type(WEEK) ;
BTID_WHEN : WHEN -> type(WHEN) ;
BTID_WHENEVER : WHENEVER -> type(WHENEVER) ;
BTID_WHERE : WHERE -> type(WHERE) ;
BTID_WIDTH_BUCKET : WIDTH_BUCKET -> type(WIDTH_BUCKET) ;
BTID_WINDOW : WINDOW -> type(WINDOW) ;
BTID_WITH : WITH -> type(WITH) ;
BTID_WITHIN : WITHIN -> type(WITHIN) ;
BTID_WITHOUT : WITHOUT -> type(WITHOUT) ;
BTID_WORK : WORK -> type(WORK) ;
BTID_WRAPPER : WRAPPER -> type(WRAPPER) ;
BTID_WRITE : WRITE -> type(WRITE) ;
BTID_XML : XML -> type(XML) ;
BTID_YEAR : YEAR -> type(YEAR) ;
BTID_ZONE : ZONE -> type(ZONE) ;
BTID_DATABASES : DATABASES -> type(DATABASES) ;
BTID_SCHEMAS : SCHEMAS -> type(SCHEMAS) ;
BTID_LOCALSORT : LOCALSORT -> type(LOCALSORT) ;
BTID_ARROW : ARROW -> type(ARROW) ;
BTID_CACHE : CACHE -> type(CACHE) ;
BTID_TABLES : TABLES -> type(TABLES) ;
BTID_VIEWS : VIEWS -> type(VIEWS) ;
BTID_USE : USE -> type(USE) ;
BTID_FILES : FILES -> type(FILES) ;
BTID_PARTITIONS : PARTITIONS -> type(PARTITIONS) ;
BTID_REFRESH : REFRESH -> type(REFRESH) ;
BTID_METADATA : METADATA -> type(METADATA) ;
BTID_IF : IF -> type(IF) ;
BTID_STORE : STORE -> type(STORE) ;
BTID_SINGLE : SINGLE -> type(SINGLE) ;
BTID_WRITER : WRITER -> type(WRITER) ;
BTID_HASH : HASH -> type(HASH) ;
BTID_ROUNDROBIN : ROUNDROBIN -> type(ROUNDROBIN) ;
BTID_DISTRIBUTE : DISTRIBUTE -> type(DISTRIBUTE) ;
BTID_STRIPED : STRIPED -> type(STRIPED) ;
BTID_CONSOLIDATED : CONSOLIDATED -> type(CONSOLIDATED) ;
BTID_ACCELERATION : ACCELERATION -> type(ACCELERATION) ;
BTID_AGGREGATE : AGGREGATE -> type(AGGREGATE) ;
BTID_LAYOUT : LAYOUT -> type(LAYOUT) ;
BTID_REFLECTION : REFLECTION -> type(REFLECTION) ;
BTID_DIMENSIONS : DIMENSIONS -> type(DIMENSIONS) ;
BTID_RAW : RAW -> type(RAW) ;
BTID_DISPLAY : DISPLAY -> type(DISPLAY) ;
BTID_ENABLE : ENABLE -> type(ENABLE) ;
BTID_DISABLE : DISABLE -> type(DISABLE) ;
BTID_FORGET : FORGET -> type(FORGET) ;
BTID_PDS : PDS -> type(PDS) ;
BTID_VDS : VDS -> type(VDS) ;
BTID_DATASET : DATASET -> type(DATASET) ;
BTID_STATUS : STATUS -> type(STATUS) ;
BTID_LOAD : LOAD -> type(LOAD) ;
BTID_MATERIALIZATION : MATERIALIZATION -> type(MATERIALIZATION) ;
BTID_APPROXIMATE : APPROXIMATE -> type(APPROXIMATE) ;
BTID_APPROX : APPROX -> type(APPROX) ;
BTID_STATS : STATS -> type(STATS) ;
BTID_COMPACT : COMPACT -> type(COMPACT) ;
BTID_AUTO : AUTO -> type(AUTO) ;
BTID_AVOID : AVOID -> type(AVOID) ;
BTID_PROMOTION : PROMOTION -> type(PROMOTION) ;
BTID_FORCE : FORCE -> type(FORCE) ;
BTID_LAZY : LAZY -> type(LAZY) ;
BTID_MAINTAIN : MAINTAIN -> type(MAINTAIN) ;
BTID_MISSING : MISSING -> type(MISSING) ;
BTID_COLUMNS : COLUMNS -> type(COLUMNS) ;
BTID_CHANGE : CHANGE -> type(CHANGE) ;
BTID_CLEAR : CLEAR -> type(CLEAR) ;
BTID_JOB : JOB -> type(JOB) ;
BTID_HISTORY : HISTORY -> type(HISTORY) ;
BTID_REFLECTIONS : REFLECTIONS -> type(REFLECTIONS) ;
BTID_FOLDER : FOLDER -> type(FOLDER) ;
BTID_FOLDERS : FOLDERS -> type(FOLDERS) ;
BTID_FUNCTIONS : FUNCTIONS -> type(FUNCTIONS) ;
BTID_MODIFY : MODIFY -> type(MODIFY) ;
BTID_MANAGE : MANAGE -> type(MANAGE) ;
BTID_GRANTS : GRANTS -> type(GRANTS) ;
BTID_QUERY : QUERY -> type(QUERY) ;
BTID_DATASETS : DATASETS -> type(DATASETS) ;
BTID_ANALYZE : ANALYZE -> type(ANALYZE) ;
BTID_STATISTICS : STATISTICS -> type(STATISTICS) ;
BTID_COMPUTE : COMPUTE -> type(COMPUTE) ;
BTID_OWNERSHIP : OWNERSHIP -> type(OWNERSHIP) ;
BTID_OPERATE : OPERATE -> type(OPERATE) ;
BTID_MONITOR : MONITOR -> type(MONITOR) ;
BTID_ORG : ORG -> type(ORG) ;
BTID_CLOUD : CLOUD -> type(CLOUD) ;
BTID_PROJECT : PROJECT -> type(PROJECT) ;
BTID_ROUTE : ROUTE -> type(ROUTE) ;
BTID_QUEUE : QUEUE -> type(QUEUE) ;
BTID_ENGINE : ENGINE -> type(ENGINE) ;
BTID_SCRIPT : SCRIPT -> type(SCRIPT) ;
BTID_PASSWORD : PASSWORD -> type(PASSWORD) ;
BTID_POLICY : POLICY -> type(POLICY) ;
BTID_ACCESS : ACCESS -> type(ACCESS) ;
BTID_UNSET : UNSET -> type(UNSET) ;
BTID_LEARNING : LEARNING -> type(LEARNING) ;
BTID_BRANCH : BRANCH -> type(BRANCH) ;
BTID_BRANCHES : BRANCHES -> type(BRANCHES) ;
BTID_TAG : TAG -> type(TAG) ;
BTID_TAGS : TAGS -> type(TAGS) ;
BTID_LOG : LOG -> type(LOG) ;
BTID_LOGS : LOGS -> type(LOGS) ;
BTID_APPLICATION : APPLICATION -> type(APPLICATION) ;
BTID_OAUTH : OAUTH -> type(OAUTH) ;
BTID_PROVIDER : PROVIDER -> type(PROVIDER) ;
BTID_TOKENS : TOKENS -> type(TOKENS) ;
BTID_CONFIGURE : CONFIGURE -> type(CONFIGURE) ;
BTID_ASSIGN : ASSIGN -> type(ASSIGN) ;
BTID_SNAPSHOT : SNAPSHOT -> type(SNAPSHOT) ;
BTID_REFERENCE : REFERENCE -> type(REFERENCE) ;
BTID_LOCATION : LOCATION -> type(LOCATION) ;
BTID_FIELD : FIELD -> type(FIELD) ;
BTID_STRUCT : STRUCT -> type(STRUCT) ;
BTID_LIST : LIST -> type(LIST) ;
BTID_MASKING : MASKING -> type(MASKING) ;
BTID_UPLOAD : UPLOAD -> type(UPLOAD) ;
BTID_OPTIMIZE : OPTIMIZE -> type(OPTIMIZE) ;
BTID_REWRITE : REWRITE -> type(REWRITE) ;
BTID_MANIFESTS : MANIFESTS -> type(MANIFESTS) ;
BTID_BIN_PACK : BIN_PACK -> type(BIN_PACK) ;
BTID_SORT : SORT -> type(SORT) ;
BTID_MAX_FILE_SIZE_MB : MAX_FILE_SIZE_MB -> type(MAX_FILE_SIZE_MB) ;
BTID_MIN_FILE_SIZE_MB : MIN_FILE_SIZE_MB -> type(MIN_FILE_SIZE_MB) ;
BTID_MIN_INPUT_FILES : MIN_INPUT_FILES -> type(MIN_INPUT_FILES) ;
BTID_TARGET_FILE_SIZE_MB : TARGET_FILE_SIZE_MB -> type(TARGET_FILE_SIZE_MB) ;
BTID_COPY : COPY -> type(COPY) ;
BTID_REGEX : REGEX -> type(REGEX) ;
BTID_FILE_FORMAT : FILE_FORMAT -> type(FILE_FORMAT) ;
BTID_DATE_FORMAT : DATE_FORMAT -> type(DATE_FORMAT) ;
BTID_TIME_FORMAT : TIME_FORMAT -> type(TIME_FORMAT) ;
BTID_TIMESTAMP_FORMAT : TIMESTAMP_FORMAT -> type(TIMESTAMP_FORMAT) ;
BTID_TRIM_SPACE : TRIM_SPACE -> type(TRIM_SPACE) ;
BTID_NULL_IF : NULL_IF -> type(NULL_IF) ;
BTID_RECORD_DELIMITER : RECORD_DELIMITER -> type(RECORD_DELIMITER) ;
BTID_FIELD_DELIMITER : FIELD_DELIMITER -> type(FIELD_DELIMITER) ;
BTID_QUOTE_CHAR : QUOTE_CHAR -> type(QUOTE_CHAR) ;
BTID_ESCAPE_CHAR : ESCAPE_CHAR -> type(ESCAPE_CHAR) ;
BTID_EMPTY_AS_NULL : EMPTY_AS_NULL -> type(EMPTY_AS_NULL) ;
BTID_ON_ERROR : ON_ERROR -> type(ON_ERROR) ;
BTID_EXTRACT_HEADER : EXTRACT_HEADER -> type(EXTRACT_HEADER) ;
BTID_SKIP_LINES : SKIP_LINES -> type(SKIP_LINES) ;
BTID_VACUUM : VACUUM -> type(VACUUM) ;
BTID_EXPIRE : EXPIRE -> type(EXPIRE) ;
BTID_SNAPSHOTS : SNAPSHOTS -> type(SNAPSHOTS) ;
BTID_OLDER_THAN : OLDER_THAN -> type(OLDER_THAN) ;
BTID_RETAIN_LAST : RETAIN_LAST -> type(RETAIN_LAST) ;
BTID_TBLPROPERTIES : TBLPROPERTIES -> type(TBLPROPERTIES) ;
BTID_COMMITS_OLDER_THAN : COMMITS_OLDER_THAN -> type(COMMITS_OLDER_THAN) ;
BTID_RETAIN_LAST_COMMITS : RETAIN_LAST_COMMITS -> type(RETAIN_LAST_COMMITS) ;
BTID_REMOVE : REMOVE -> type(REMOVE) ;
BTID_ORPHAN : ORPHAN -> type(ORPHAN) ;
BTID_SNAPSHOTS_OLDER_THAN : SNAPSHOTS_OLDER_THAN -> type(SNAPSHOTS_OLDER_THAN) ;
BTID_RETAIN_LAST_SNAPSHOTS : RETAIN_LAST_SNAPSHOTS -> type(RETAIN_LAST_SNAPSHOTS) ;
BTID_PIPE : PIPE -> type(PIPE) ;
BTID_DEDUPE_LOOKBACK_PERIOD : DEDUPE_LOOKBACK_PERIOD -> type(DEDUPE_LOOKBACK_PERIOD) ;
BTID_NOTIFICATION_PROVIDER : NOTIFICATION_PROVIDER -> type(NOTIFICATION_PROVIDER) ;
BTID_NOTIFICATION_QUEUE_REFERENCE : NOTIFICATION_QUEUE_REFERENCE -> type(NOTIFICATION_QUEUE_REFERENCE) ;
BTID_BATCH : BATCH -> type(BATCH) ;
BTID_PIPE_EXECUTION_RUNNING : PIPE_EXECUTION_RUNNING -> type(PIPE_EXECUTION_RUNNING) ;
BTID_DRY : DRY -> type(DRY) ;
BTID_RUN : RUN -> type(RUN) ;
BTID_CONFLICT : CONFLICT -> type(CONFLICT) ;
BTID_OVERWRITE : OVERWRITE -> type(OVERWRITE) ;
BTID_DISCARD : DISCARD -> type(DISCARD) ;
BTID_CANCEL : CANCEL -> type(CANCEL) ;
BTID_EXPORT : EXPORT -> type(EXPORT) ;
BTID_PERMISSION : PERMISSION -> type(PERMISSION) ;
BTID_MIN_REPLICAS : MIN_REPLICAS -> type(MIN_REPLICAS) ;
BTID_MAX_REPLICAS : MAX_REPLICAS -> type(MAX_REPLICAS) ;
BTID_CLUSTER : CLUSTER -> type(CLUSTER) ;
BTID_CLUSTERING : CLUSTERING -> type(CLUSTERING) ;
BTID_CONCURRENT : CONCURRENT -> type(CONCURRENT) ;
BTID_TRY_CONVERT_FROM : TRY_CONVERT_FROM -> type(TRY_CONVERT_FROM) ;
BTID_UNSIGNED_INTEGER_LITERAL : UNSIGNED_INTEGER_LITERAL -> type(UNSIGNED_INTEGER_LITERAL) ;
BTID_APPROX_NUMERIC_LITERAL : APPROX_NUMERIC_LITERAL -> type(APPROX_NUMERIC_LITERAL) ;
BTID_DECIMAL_NUMERIC_LITERAL : DECIMAL_NUMERIC_LITERAL -> type(DECIMAL_NUMERIC_LITERAL) ;
BTID_BINARY_STRING_LITERAL : BINARY_STRING_LITERAL -> type(BINARY_STRING_LITERAL) ;
BTID_QUOTED_STRING : QUOTED_STRING -> type(QUOTED_STRING) ;
BTID_PREFIXED_STRING_LITERAL : PREFIXED_STRING_LITERAL -> type(PREFIXED_STRING_LITERAL) ;
BTID_UNICODE_STRING_LITERAL : UNICODE_STRING_LITERAL -> type(UNICODE_STRING_LITERAL) ;
BTID_UNICODE_QUOTED_ESCAPE_CHAR : UNICODE_QUOTED_ESCAPE_CHAR -> type(UNICODE_QUOTED_ESCAPE_CHAR) ;
BTID_LPAREN : LPAREN -> type(LPAREN) ;
BTID_RPAREN : RPAREN -> type(RPAREN) ;
BTID_L_CONTAINS : L_CONTAINS -> type(L_CONTAINS), pushMode(LUCENE_DEFAULT) ;
BTID_LBRACE_D : LBRACE_D -> type(LBRACE_D) ;
BTID_LBRACE_T : LBRACE_T -> type(LBRACE_T) ;
BTID_LBRACE_TS : LBRACE_TS -> type(LBRACE_TS) ;
BTID_LBRACE_FN : LBRACE_FN -> type(LBRACE_FN) ;
BTID_LBRACE : LBRACE -> type(LBRACE) ;
BTID_RBRACE : RBRACE -> type(RBRACE) ;
BTID_LBRACKET : LBRACKET -> type(LBRACKET) ;
BTID_RBRACKET : RBRACKET -> type(RBRACKET) ;
BTID_SEMICOLON : SEMICOLON -> type(SEMICOLON) ;
BTID_DOT : DOT -> type(DOT) ;
BTID_COMMA : COMMA -> type(COMMA) ;
BTID_EQ : EQ -> type(EQ) ;
BTID_GT : GT -> type(GT) ;
BTID_LT : LT -> type(LT) ;
BTID_HOOK : HOOK -> type(HOOK) ;
BTID_COLON : COLON -> type(COLON) ;
BTID_LE : LE -> type(LE) ;
BTID_GE : GE -> type(GE) ;
BTID_NE : NE -> type(NE) ;
BTID_NE2 : NE2 -> type(NE2) ;
BTID_PLUS : PLUS -> type(PLUS) ;
BTID_MINUS : MINUS -> type(MINUS) ;
BTID_STAR : STAR -> type(STAR) ;
BTID_SLASH : SLASH -> type(SLASH) ;
BTID_PERCENT_REMAINDER : PERCENT_REMAINDER -> type(PERCENT_REMAINDER) ;
BTID_CONCAT : CONCAT -> type(CONCAT) ;
BTID_NAMED_ARGUMENT_ASSIGNMENT : NAMED_ARGUMENT_ASSIGNMENT -> type(NAMED_ARGUMENT_ASSIGNMENT) ;
BTID_DOUBLE_PERIOD : DOUBLE_PERIOD -> type(DOUBLE_PERIOD) ;
BTID_QUOTE : QUOTE -> type(QUOTE) ;
BTID_DOUBLE_QUOTE : DOUBLE_QUOTE -> type(DOUBLE_QUOTE) ;
BTID_VERTICAL_BAR : VERTICAL_BAR -> type(VERTICAL_BAR) ;
BTID_CARET : CARET -> type(CARET) ;
BTID_DOLLAR : DOLLAR -> type(DOLLAR) ;
BTID_SKIP1 : SKIP1 -> skip ;
BTID_SKIP2 : SKIP2 -> skip ;
BTID_SKIP3 : SKIP3 -> skip ;
BTID_SKIP4 : SKIP4 -> skip ;
BTID_SKIP5 : SKIP5 -> skip ;
BTID_HINT_BEG : HINT_BEG -> type(HINT_BEG) ;
BTID_COMMENT_END : COMMENT_END -> type(COMMENT_END) ;
BTID_MORE0 : MORE0 -> more, pushMode(IN_FORMAL_COMMENT) ;
BTID_MORE1 : MORE1 -> more, pushMode(IN_MULTI_LINE_COMMENT) ;
BTID_SINGLE_LINE_COMMENT : SINGLE_LINE_COMMENT -> channel(HIDDEN) ;
BACK_QUOTED_IDENTIFIER : '`' ((~[`\n\r] | '``'))+ '`'  ;
BTID_COLLATION_ID : COLLATION_ID -> type(COLLATION_ID) ;
BTID_IDENTIFIER : IDENTIFIER -> type(IDENTIFIER) ;
BTID_UNICODE_QUOTED_IDENTIFIER : UNICODE_QUOTED_IDENTIFIER -> type(UNICODE_QUOTED_IDENTIFIER) ;
BTID_BEL : BEL -> type(BEL) ;

mode IN_FORMAL_COMMENT;
FORMAL_COMMENT : COMMENT_END -> channel(HIDDEN), popMode ;
MORE2 : . -> more ;

mode IN_MULTI_LINE_COMMENT;
MULTI_LINE_COMMENT : COMMENT_END -> channel(HIDDEN), popMode ;
IN_MULTI_LINE_COMMENT_MORE2 : MORE2 -> more ;

mode LUCENE_DEFAULT;
fragment US_NUM_CHAR : [0-9]  ;
fragment US_ESCAPED_CHAR : '\\' .  ;
fragment US_TERM_START_CHAR : (~[ \t\n\r\u3000+\-!():^[\]"{}~*?\\/] | US_ESCAPED_CHAR)  ;
fragment US_TERM_CHAR : (US_TERM_START_CHAR | US_ESCAPED_CHAR | '-' | '+')  ;
fragment US_WHITESPACE : (' ' | '\t' | '\n' | '\r' | '\u3000')  ;
fragment US_QUOTED_CHAR : (~["\\] | US_ESCAPED_CHAR)  ;
SKIP0 : US_WHITESPACE -> skip ;
L_AND : (A N D | A N D | '&&')  ;
L_OR : (O R | O R | '||')  ;
L_NOT : (N O T | N O T | '!')  ;
L_PLUS : '+'  ;
L_MINUS : '-'  ;
BAREOPER : ('+' | '-' | '!') US_WHITESPACE  ;
L_LPAREN : '(' -> pushMode(LUCENE_DEFAULT) ;
L_RPAREN : ')' -> popMode ;
L_COLON : ':'  ;
L_STAR : '*'  ;
CARAT : '^' -> mode(LUCENE_BOOST) ;
QUOTED : '"' (US_QUOTED_CHAR)* '"'  ;
TERM : US_TERM_START_CHAR (US_TERM_CHAR)*  ;
FUZZY_SLOP : '~' ((US_NUM_CHAR)+ ('.' (US_NUM_CHAR)+)? (US_TERM_CHAR)* | (US_TERM_CHAR)*)  ;
PREFIXTERM : ('*' | US_TERM_START_CHAR (US_TERM_CHAR)* '*')  ;
WILDTERM : (US_TERM_START_CHAR | [*?]) ((US_TERM_CHAR | [*?]))*  ;
REGEXPTERM : '/' ((~[/] | '\\/'))* '/'  ;
RANGEIN_START : '[' -> mode(LUCENE_RANGE) ;
RANGEEX_START : '{' -> mode(LUCENE_RANGE) ;

mode DQID;
DQID_A : A -> type(A) ;
DQID_ABS : ABS -> type(ABS) ;
DQID_ABSENT : ABSENT -> type(ABSENT) ;
DQID_ABSOLUTE : ABSOLUTE -> type(ABSOLUTE) ;
DQID_ACTION : ACTION -> type(ACTION) ;
DQID_ADA : ADA -> type(ADA) ;
DQID_ADD : ADD -> type(ADD) ;
DQID_ADMIN : ADMIN -> type(ADMIN) ;
DQID_AFTER : AFTER -> type(AFTER) ;
DQID_ALL : ALL -> type(ALL) ;
DQID_ALLOCATE : ALLOCATE -> type(ALLOCATE) ;
DQID_ALLOW : ALLOW -> type(ALLOW) ;
DQID_ALTER : ALTER -> type(ALTER) ;
DQID_ALWAYS : ALWAYS -> type(ALWAYS) ;
DQID_AND : AND -> type(AND) ;
DQID_ANY : ANY -> type(ANY) ;
DQID_APPLY : APPLY -> type(APPLY) ;
DQID_ARE : ARE -> type(ARE) ;
DQID_ARRAY : ARRAY -> type(ARRAY) ;
DQID_ARRAY_MAX_CARDINALITY : ARRAY_MAX_CARDINALITY -> type(ARRAY_MAX_CARDINALITY) ;
DQID_AS : AS -> type(AS) ;
DQID_ASC : ASC -> type(ASC) ;
DQID_ASENSITIVE : ASENSITIVE -> type(ASENSITIVE) ;
DQID_ASSERTION : ASSERTION -> type(ASSERTION) ;
DQID_ASSIGNMENT : ASSIGNMENT -> type(ASSIGNMENT) ;
DQID_ASYMMETRIC : ASYMMETRIC -> type(ASYMMETRIC) ;
DQID_AT : AT -> type(AT) ;
DQID_ATOMIC : ATOMIC -> type(ATOMIC) ;
DQID_ATTRIBUTE : ATTRIBUTE -> type(ATTRIBUTE) ;
DQID_ATTRIBUTES : ATTRIBUTES -> type(ATTRIBUTES) ;
DQID_AUTHORIZATION : AUTHORIZATION -> type(AUTHORIZATION) ;
DQID_AVG : AVG -> type(AVG) ;
DQID_BEFORE : BEFORE -> type(BEFORE) ;
DQID_BEGIN : BEGIN -> type(BEGIN) ;
DQID_BEGIN_FRAME : BEGIN_FRAME -> type(BEGIN_FRAME) ;
DQID_BEGIN_PARTITION : BEGIN_PARTITION -> type(BEGIN_PARTITION) ;
DQID_BERNOULLI : BERNOULLI -> type(BERNOULLI) ;
DQID_BETWEEN : BETWEEN -> type(BETWEEN) ;
DQID_BIGINT : BIGINT -> type(BIGINT) ;
DQID_BINARY : BINARY -> type(BINARY) ;
DQID_BIT : BIT -> type(BIT) ;
DQID_BLOB : BLOB -> type(BLOB) ;
DQID_BOOLEAN : BOOLEAN -> type(BOOLEAN) ;
DQID_BOTH : BOTH -> type(BOTH) ;
DQID_BREADTH : BREADTH -> type(BREADTH) ;
DQID_BY : BY -> type(BY) ;
DQID_C : C -> type(C) ;
DQID_CALL : CALL -> type(CALL) ;
DQID_CALLED : CALLED -> type(CALLED) ;
DQID_CARDINALITY : CARDINALITY -> type(CARDINALITY) ;
DQID_CASCADE : CASCADE -> type(CASCADE) ;
DQID_CASCADED : CASCADED -> type(CASCADED) ;
DQID_CASE : CASE -> type(CASE) ;
DQID_CAST : CAST -> type(CAST) ;
DQID_CATALOG : CATALOG -> type(CATALOG) ;
DQID_CATALOG_NAME : CATALOG_NAME -> type(CATALOG_NAME) ;
DQID_CEIL : CEIL -> type(CEIL) ;
DQID_CEILING : CEILING -> type(CEILING) ;
DQID_CENTURY : CENTURY -> type(CENTURY) ;
DQID_CHAIN : CHAIN -> type(CHAIN) ;
DQID_CHAR : CHAR -> type(CHAR) ;
DQID_CHAR_LENGTH : CHAR_LENGTH -> type(CHAR_LENGTH) ;
DQID_CHARACTER : CHARACTER -> type(CHARACTER) ;
DQID_CHARACTER_LENGTH : CHARACTER_LENGTH -> type(CHARACTER_LENGTH) ;
DQID_CHARACTER_SET_CATALOG : CHARACTER_SET_CATALOG -> type(CHARACTER_SET_CATALOG) ;
DQID_CHARACTER_SET_NAME : CHARACTER_SET_NAME -> type(CHARACTER_SET_NAME) ;
DQID_CHARACTER_SET_SCHEMA : CHARACTER_SET_SCHEMA -> type(CHARACTER_SET_SCHEMA) ;
DQID_CHARACTERISTICS : CHARACTERISTICS -> type(CHARACTERISTICS) ;
DQID_CHARACTERS : CHARACTERS -> type(CHARACTERS) ;
DQID_CHECK : CHECK -> type(CHECK) ;
DQID_CLASSIFIER : CLASSIFIER -> type(CLASSIFIER) ;
DQID_CLASS_ORIGIN : CLASS_ORIGIN -> type(CLASS_ORIGIN) ;
DQID_CLOB : CLOB -> type(CLOB) ;
DQID_CLOSE : CLOSE -> type(CLOSE) ;
DQID_COALESCE : COALESCE -> type(COALESCE) ;
DQID_COBOL : COBOL -> type(COBOL) ;
DQID_COLLATE : COLLATE -> type(COLLATE) ;
DQID_COLLATION : COLLATION -> type(COLLATION) ;
DQID_COLLATION_CATALOG : COLLATION_CATALOG -> type(COLLATION_CATALOG) ;
DQID_COLLATION_NAME : COLLATION_NAME -> type(COLLATION_NAME) ;
DQID_COLLATION_SCHEMA : COLLATION_SCHEMA -> type(COLLATION_SCHEMA) ;
DQID_COLLECT : COLLECT -> type(COLLECT) ;
DQID_COLUMN : COLUMN -> type(COLUMN) ;
DQID_COLUMN_NAME : COLUMN_NAME -> type(COLUMN_NAME) ;
DQID_COMMAND_FUNCTION : COMMAND_FUNCTION -> type(COMMAND_FUNCTION) ;
DQID_COMMAND_FUNCTION_CODE : COMMAND_FUNCTION_CODE -> type(COMMAND_FUNCTION_CODE) ;
DQID_COMMIT : COMMIT -> type(COMMIT) ;
DQID_COMMITTED : COMMITTED -> type(COMMITTED) ;
DQID_CONDITION : CONDITION -> type(CONDITION) ;
DQID_CONDITIONAL : CONDITIONAL -> type(CONDITIONAL) ;
DQID_CONDITION_NUMBER : CONDITION_NUMBER -> type(CONDITION_NUMBER) ;
DQID_CONNECT : CONNECT -> type(CONNECT) ;
DQID_CONNECTION : CONNECTION -> type(CONNECTION) ;
DQID_CONNECTION_NAME : CONNECTION_NAME -> type(CONNECTION_NAME) ;
DQID_CONSTRAINT : CONSTRAINT -> type(CONSTRAINT) ;
DQID_CONSTRAINT_CATALOG : CONSTRAINT_CATALOG -> type(CONSTRAINT_CATALOG) ;
DQID_CONSTRAINT_NAME : CONSTRAINT_NAME -> type(CONSTRAINT_NAME) ;
DQID_CONSTRAINT_SCHEMA : CONSTRAINT_SCHEMA -> type(CONSTRAINT_SCHEMA) ;
DQID_CONSTRAINTS : CONSTRAINTS -> type(CONSTRAINTS) ;
DQID_CONSTRUCTOR : CONSTRUCTOR -> type(CONSTRUCTOR) ;
DQID_CONTAINS : CONTAINS -> type(CONTAINS) ;
DQID_CONTINUE : CONTINUE -> type(CONTINUE) ;
DQID_CONVERT : CONVERT -> type(CONVERT) ;
DQID_CORR : CORR -> type(CORR) ;
DQID_CORRESPONDING : CORRESPONDING -> type(CORRESPONDING) ;
DQID_COUNT : COUNT -> type(COUNT) ;
DQID_COVAR_POP : COVAR_POP -> type(COVAR_POP) ;
DQID_COVAR_SAMP : COVAR_SAMP -> type(COVAR_SAMP) ;
DQID_CREATE : CREATE -> type(CREATE) ;
DQID_CROSS : CROSS -> type(CROSS) ;
DQID_CUBE : CUBE -> type(CUBE) ;
DQID_CUME_DIST : CUME_DIST -> type(CUME_DIST) ;
DQID_CURRENT : CURRENT -> type(CURRENT) ;
DQID_CURRENT_CATALOG : CURRENT_CATALOG -> type(CURRENT_CATALOG) ;
DQID_CURRENT_DATE : CURRENT_DATE -> type(CURRENT_DATE) ;
DQID_CURRENT_DEFAULT_TRANSFORM_GROUP : CURRENT_DEFAULT_TRANSFORM_GROUP -> type(CURRENT_DEFAULT_TRANSFORM_GROUP) ;
DQID_CURRENT_PATH : CURRENT_PATH -> type(CURRENT_PATH) ;
DQID_CURRENT_ROLE : CURRENT_ROLE -> type(CURRENT_ROLE) ;
DQID_CURRENT_ROW : CURRENT_ROW -> type(CURRENT_ROW) ;
DQID_CURRENT_SCHEMA : CURRENT_SCHEMA -> type(CURRENT_SCHEMA) ;
DQID_CURRENT_TIME : CURRENT_TIME -> type(CURRENT_TIME) ;
DQID_CURRENT_TIMESTAMP : CURRENT_TIMESTAMP -> type(CURRENT_TIMESTAMP) ;
DQID_CURRENT_TRANSFORM_GROUP_FOR_TYPE : CURRENT_TRANSFORM_GROUP_FOR_TYPE -> type(CURRENT_TRANSFORM_GROUP_FOR_TYPE) ;
DQID_CURRENT_USER : CURRENT_USER -> type(CURRENT_USER) ;
DQID_CURSOR : CURSOR -> type(CURSOR) ;
DQID_CURSOR_NAME : CURSOR_NAME -> type(CURSOR_NAME) ;
DQID_CYCLE : CYCLE -> type(CYCLE) ;
DQID_DATA : DATA -> type(DATA) ;
DQID_DATABASE : DATABASE -> type(DATABASE) ;
DQID_DATE : DATE -> type(DATE) ;
DQID_DATETIME_INTERVAL_CODE : DATETIME_INTERVAL_CODE -> type(DATETIME_INTERVAL_CODE) ;
DQID_DATETIME_INTERVAL_PRECISION : DATETIME_INTERVAL_PRECISION -> type(DATETIME_INTERVAL_PRECISION) ;
DQID_DAY : DAY -> type(DAY) ;
DQID_DEALLOCATE : DEALLOCATE -> type(DEALLOCATE) ;
DQID_DEC : DEC -> type(DEC) ;
DQID_DECADE : DECADE -> type(DECADE) ;
DQID_DECIMAL : DECIMAL -> type(DECIMAL) ;
DQID_DECLARE : DECLARE -> type(DECLARE) ;
DQID_DEFAULT_ : DEFAULT_ -> type(DEFAULT_) ;
DQID_DEFAULTS : DEFAULTS -> type(DEFAULTS) ;
DQID_DEFERRABLE : DEFERRABLE -> type(DEFERRABLE) ;
DQID_DEFERRED : DEFERRED -> type(DEFERRED) ;
DQID_DEFINE : DEFINE -> type(DEFINE) ;
DQID_DEFINED : DEFINED -> type(DEFINED) ;
DQID_DEFINER : DEFINER -> type(DEFINER) ;
DQID_DEGREE : DEGREE -> type(DEGREE) ;
DQID_DELETE : DELETE -> type(DELETE) ;
DQID_DENSE_RANK : DENSE_RANK -> type(DENSE_RANK) ;
DQID_DEPTH : DEPTH -> type(DEPTH) ;
DQID_DEREF : DEREF -> type(DEREF) ;
DQID_DERIVED : DERIVED -> type(DERIVED) ;
DQID_DESC : DESC -> type(DESC) ;
DQID_DESCRIBE : DESCRIBE -> type(DESCRIBE) ;
DQID_DESCRIPTION : DESCRIPTION -> type(DESCRIPTION) ;
DQID_DESCRIPTOR : DESCRIPTOR -> type(DESCRIPTOR) ;
DQID_DETERMINISTIC : DETERMINISTIC -> type(DETERMINISTIC) ;
DQID_DIAGNOSTICS : DIAGNOSTICS -> type(DIAGNOSTICS) ;
DQID_DISALLOW : DISALLOW -> type(DISALLOW) ;
DQID_DISCONNECT : DISCONNECT -> type(DISCONNECT) ;
DQID_DISPATCH : DISPATCH -> type(DISPATCH) ;
DQID_DISTINCT : DISTINCT -> type(DISTINCT) ;
DQID_DOMAIN : DOMAIN -> type(DOMAIN) ;
DQID_DOUBLE : DOUBLE -> type(DOUBLE) ;
DQID_DOW : DOW -> type(DOW) ;
DQID_DOY : DOY -> type(DOY) ;
DQID_DROP : DROP -> type(DROP) ;
DQID_DYNAMIC : DYNAMIC -> type(DYNAMIC) ;
DQID_DYNAMIC_FUNCTION : DYNAMIC_FUNCTION -> type(DYNAMIC_FUNCTION) ;
DQID_DYNAMIC_FUNCTION_CODE : DYNAMIC_FUNCTION_CODE -> type(DYNAMIC_FUNCTION_CODE) ;
DQID_EACH : EACH -> type(EACH) ;
DQID_ELEMENT : ELEMENT -> type(ELEMENT) ;
DQID_ELSE : ELSE -> type(ELSE) ;
DQID_EMPTY : EMPTY -> type(EMPTY) ;
DQID_ENCODING : ENCODING -> type(ENCODING) ;
DQID_END : END -> type(END) ;
DQID_END_EXEC : END_EXEC -> type(END_EXEC) ;
DQID_END_FRAME : END_FRAME -> type(END_FRAME) ;
DQID_END_PARTITION : END_PARTITION -> type(END_PARTITION) ;
DQID_EPOCH : EPOCH -> type(EPOCH) ;
DQID_EQUALS : EQUALS -> type(EQUALS) ;
DQID_ERROR : ERROR -> type(ERROR) ;
DQID_ESCAPE : ESCAPE -> type(ESCAPE) ;
DQID_EVERY : EVERY -> type(EVERY) ;
DQID_EXCEPT : EXCEPT -> type(EXCEPT) ;
DQID_EXCEPTION : EXCEPTION -> type(EXCEPTION) ;
DQID_EXCLUDE : EXCLUDE -> type(EXCLUDE) ;
DQID_EXCLUDING : EXCLUDING -> type(EXCLUDING) ;
DQID_EXEC : EXEC -> type(EXEC) ;
DQID_EXECUTE : EXECUTE -> type(EXECUTE) ;
DQID_EXISTS : EXISTS -> type(EXISTS) ;
DQID_EXP : EXP -> type(EXP) ;
DQID_EXPLAIN : EXPLAIN -> type(EXPLAIN) ;
DQID_EXTEND : EXTEND -> type(EXTEND) ;
DQID_EXTERNAL : EXTERNAL -> type(EXTERNAL) ;
DQID_EXTRACT : EXTRACT -> type(EXTRACT) ;
DQID_FALSE : FALSE -> type(FALSE) ;
DQID_FETCH : FETCH -> type(FETCH) ;
DQID_FILTER : FILTER -> type(FILTER) ;
DQID_FINAL : FINAL -> type(FINAL) ;
DQID_FIRST : FIRST -> type(FIRST) ;
DQID_FIRST_VALUE : FIRST_VALUE -> type(FIRST_VALUE) ;
DQID_FLOAT : FLOAT -> type(FLOAT) ;
DQID_FLOOR : FLOOR -> type(FLOOR) ;
DQID_FOLLOWING : FOLLOWING -> type(FOLLOWING) ;
DQID_FOR : FOR -> type(FOR) ;
DQID_FORMAT : FORMAT -> type(FORMAT) ;
DQID_FOREIGN : FOREIGN -> type(FOREIGN) ;
DQID_FORTRAN : FORTRAN -> type(FORTRAN) ;
DQID_FOUND : FOUND -> type(FOUND) ;
DQID_FRAC_SECOND : FRAC_SECOND -> type(FRAC_SECOND) ;
DQID_FRAME_ROW : FRAME_ROW -> type(FRAME_ROW) ;
DQID_FREE : FREE -> type(FREE) ;
DQID_FROM : FROM -> type(FROM) ;
DQID_FULL : FULL -> type(FULL) ;
DQID_FUNCTION : FUNCTION -> type(FUNCTION) ;
DQID_FUSION : FUSION -> type(FUSION) ;
DQID_G : G -> type(G) ;
DQID_GENERAL : GENERAL -> type(GENERAL) ;
DQID_GENERATED : GENERATED -> type(GENERATED) ;
DQID_GEOMETRY : GEOMETRY -> type(GEOMETRY) ;
DQID_GET : GET -> type(GET) ;
DQID_GLOBAL : GLOBAL -> type(GLOBAL) ;
DQID_GO : GO -> type(GO) ;
DQID_GOTO : GOTO -> type(GOTO) ;
DQID_GRANT : GRANT -> type(GRANT) ;
DQID_GRANTED : GRANTED -> type(GRANTED) ;
DQID_GROUP : GROUP -> type(GROUP) ;
DQID_GROUPING : GROUPING -> type(GROUPING) ;
DQID_GROUPS : GROUPS -> type(GROUPS) ;
DQID_HAVING : HAVING -> type(HAVING) ;
DQID_HIERARCHY : HIERARCHY -> type(HIERARCHY) ;
DQID_HOLD : HOLD -> type(HOLD) ;
DQID_HOUR : HOUR -> type(HOUR) ;
DQID_IDENTITY : IDENTITY -> type(IDENTITY) ;
DQID_IGNORE : IGNORE -> type(IGNORE) ;
DQID_IMMEDIATE : IMMEDIATE -> type(IMMEDIATE) ;
DQID_IMMEDIATELY : IMMEDIATELY -> type(IMMEDIATELY) ;
DQID_IMPLEMENTATION : IMPLEMENTATION -> type(IMPLEMENTATION) ;
DQID_IMPORT : IMPORT -> type(IMPORT) ;
DQID_IN : IN -> type(IN) ;
DQID_INCLUDE : INCLUDE -> type(INCLUDE) ;
DQID_INCLUDING : INCLUDING -> type(INCLUDING) ;
DQID_INCREMENT : INCREMENT -> type(INCREMENT) ;
DQID_INDICATOR : INDICATOR -> type(INDICATOR) ;
DQID_INITIAL : INITIAL -> type(INITIAL) ;
DQID_INITIALLY : INITIALLY -> type(INITIALLY) ;
DQID_INNER : INNER -> type(INNER) ;
DQID_INOUT : INOUT -> type(INOUT) ;
DQID_INPUT : INPUT -> type(INPUT) ;
DQID_INSENSITIVE : INSENSITIVE -> type(INSENSITIVE) ;
DQID_INSERT : INSERT -> type(INSERT) ;
DQID_INSTANCE : INSTANCE -> type(INSTANCE) ;
DQID_INSTANTIABLE : INSTANTIABLE -> type(INSTANTIABLE) ;
DQID_INT : INT -> type(INT) ;
DQID_INTEGER : INTEGER -> type(INTEGER) ;
DQID_INTERSECT : INTERSECT -> type(INTERSECT) ;
DQID_INTERSECTION : INTERSECTION -> type(INTERSECTION) ;
DQID_INTERVAL : INTERVAL -> type(INTERVAL) ;
DQID_INTO : INTO -> type(INTO) ;
DQID_INVOKER : INVOKER -> type(INVOKER) ;
DQID_IS : IS -> type(IS) ;
DQID_ISODOW : ISODOW -> type(ISODOW) ;
DQID_ISOYEAR : ISOYEAR -> type(ISOYEAR) ;
DQID_ISOLATION : ISOLATION -> type(ISOLATION) ;
DQID_JAVA : JAVA -> type(JAVA) ;
DQID_JOIN : JOIN -> type(JOIN) ;
DQID_JSON : JSON -> type(JSON) ;
DQID_JSON_ARRAY : JSON_ARRAY -> type(JSON_ARRAY) ;
DQID_JSON_ARRAYAGG : JSON_ARRAYAGG -> type(JSON_ARRAYAGG) ;
DQID_JSON_DEPTH : JSON_DEPTH -> type(JSON_DEPTH) ;
DQID_JSON_EXISTS : JSON_EXISTS -> type(JSON_EXISTS) ;
DQID_JSON_KEYS : JSON_KEYS -> type(JSON_KEYS) ;
DQID_JSON_LENGTH : JSON_LENGTH -> type(JSON_LENGTH) ;
DQID_JSON_OBJECT : JSON_OBJECT -> type(JSON_OBJECT) ;
DQID_JSON_OBJECTAGG : JSON_OBJECTAGG -> type(JSON_OBJECTAGG) ;
DQID_JSON_PRETTY : JSON_PRETTY -> type(JSON_PRETTY) ;
DQID_JSON_QUERY : JSON_QUERY -> type(JSON_QUERY) ;
DQID_JSON_TYPE : JSON_TYPE -> type(JSON_TYPE) ;
DQID_JSON_VALUE : JSON_VALUE -> type(JSON_VALUE) ;
DQID_K : K -> type(K) ;
DQID_KEY : KEY -> type(KEY) ;
DQID_KEY_MEMBER : KEY_MEMBER -> type(KEY_MEMBER) ;
DQID_KEY_TYPE : KEY_TYPE -> type(KEY_TYPE) ;
DQID_LABEL : LABEL -> type(LABEL) ;
DQID_LAG : LAG -> type(LAG) ;
DQID_LANGUAGE : LANGUAGE -> type(LANGUAGE) ;
DQID_LARGE : LARGE -> type(LARGE) ;
DQID_LAST : LAST -> type(LAST) ;
DQID_LAST_VALUE : LAST_VALUE -> type(LAST_VALUE) ;
DQID_LATERAL : LATERAL -> type(LATERAL) ;
DQID_LEAD : LEAD -> type(LEAD) ;
DQID_LEADING : LEADING -> type(LEADING) ;
DQID_LEFT : LEFT -> type(LEFT) ;
DQID_LENGTH : LENGTH -> type(LENGTH) ;
DQID_LEVEL : LEVEL -> type(LEVEL) ;
DQID_LIBRARY : LIBRARY -> type(LIBRARY) ;
DQID_LIKE : LIKE -> type(LIKE) ;
DQID_LIKE_REGEX : LIKE_REGEX -> type(LIKE_REGEX) ;
DQID_LIMIT : LIMIT -> type(LIMIT) ;
DQID_LN : LN -> type(LN) ;
DQID_LOCAL : LOCAL -> type(LOCAL) ;
DQID_LOCALTIME : LOCALTIME -> type(LOCALTIME) ;
DQID_LOCALTIMESTAMP : LOCALTIMESTAMP -> type(LOCALTIMESTAMP) ;
DQID_LOCATOR : LOCATOR -> type(LOCATOR) ;
DQID_LOWER : LOWER -> type(LOWER) ;
DQID_M : M -> type(M) ;
DQID_MAP : MAP -> type(MAP) ;
DQID_MATCH : MATCH -> type(MATCH) ;
DQID_MATCHED : MATCHED -> type(MATCHED) ;
DQID_MATCHES : MATCHES -> type(MATCHES) ;
DQID_MATCH_NUMBER : MATCH_NUMBER -> type(MATCH_NUMBER) ;
DQID_MATCH_RECOGNIZE : MATCH_RECOGNIZE -> type(MATCH_RECOGNIZE) ;
DQID_MAX : MAX -> type(MAX) ;
DQID_MAXVALUE : MAXVALUE -> type(MAXVALUE) ;
DQID_MEASURES : MEASURES -> type(MEASURES) ;
DQID_MEMBER : MEMBER -> type(MEMBER) ;
DQID_MERGE : MERGE -> type(MERGE) ;
DQID_MESSAGE_LENGTH : MESSAGE_LENGTH -> type(MESSAGE_LENGTH) ;
DQID_MESSAGE_OCTET_LENGTH : MESSAGE_OCTET_LENGTH -> type(MESSAGE_OCTET_LENGTH) ;
DQID_MESSAGE_TEXT : MESSAGE_TEXT -> type(MESSAGE_TEXT) ;
DQID_METHOD : METHOD -> type(METHOD) ;
DQID_MICROSECOND : MICROSECOND -> type(MICROSECOND) ;
DQID_MILLISECOND : MILLISECOND -> type(MILLISECOND) ;
DQID_MILLENNIUM : MILLENNIUM -> type(MILLENNIUM) ;
DQID_MIN : MIN -> type(MIN) ;
DQID_MINUTE : MINUTE -> type(MINUTE) ;
DQID_MINVALUE : MINVALUE -> type(MINVALUE) ;
DQID_MOD : MOD -> type(MOD) ;
DQID_MODIFIES : MODIFIES -> type(MODIFIES) ;
DQID_MODULE : MODULE -> type(MODULE) ;
DQID_MONTH : MONTH -> type(MONTH) ;
DQID_MORE_ : MORE_ -> type(MORE_) ;
DQID_MULTISET : MULTISET -> type(MULTISET) ;
DQID_MUMPS : MUMPS -> type(MUMPS) ;
DQID_NAME : NAME -> type(NAME) ;
DQID_NAMES : NAMES -> type(NAMES) ;
DQID_NANOSECOND : NANOSECOND -> type(NANOSECOND) ;
DQID_NATIONAL : NATIONAL -> type(NATIONAL) ;
DQID_NATURAL : NATURAL -> type(NATURAL) ;
DQID_NCHAR : NCHAR -> type(NCHAR) ;
DQID_NCLOB : NCLOB -> type(NCLOB) ;
DQID_NESTING : NESTING -> type(NESTING) ;
DQID_NEW : NEW -> type(NEW) ;
DQID_NEXT : NEXT -> type(NEXT) ;
DQID_NO : NO -> type(NO) ;
DQID_NONE : NONE -> type(NONE) ;
DQID_NORMALIZE : NORMALIZE -> type(NORMALIZE) ;
DQID_NORMALIZED : NORMALIZED -> type(NORMALIZED) ;
DQID_NOT : NOT -> type(NOT) ;
DQID_NTH_VALUE : NTH_VALUE -> type(NTH_VALUE) ;
DQID_NTILE : NTILE -> type(NTILE) ;
DQID_NULL : NULL -> type(NULL) ;
DQID_NULLABLE : NULLABLE -> type(NULLABLE) ;
DQID_NULLIF : NULLIF -> type(NULLIF) ;
DQID_NULLS : NULLS -> type(NULLS) ;
DQID_NUMBER : NUMBER -> type(NUMBER) ;
DQID_NUMERIC : NUMERIC -> type(NUMERIC) ;
DQID_OBJECT : OBJECT -> type(OBJECT) ;
DQID_OCCURRENCES_REGEX : OCCURRENCES_REGEX -> type(OCCURRENCES_REGEX) ;
DQID_OCTET_LENGTH : OCTET_LENGTH -> type(OCTET_LENGTH) ;
DQID_OCTETS : OCTETS -> type(OCTETS) ;
DQID_OF : OF -> type(OF) ;
DQID_OFFSET : OFFSET -> type(OFFSET) ;
DQID_OLD : OLD -> type(OLD) ;
DQID_OMIT : OMIT -> type(OMIT) ;
DQID_ON : ON -> type(ON) ;
DQID_ONE : ONE -> type(ONE) ;
DQID_ONLY : ONLY -> type(ONLY) ;
DQID_OPEN : OPEN -> type(OPEN) ;
DQID_OPTION : OPTION -> type(OPTION) ;
DQID_OPTIONS : OPTIONS -> type(OPTIONS) ;
DQID_OR : OR -> type(OR) ;
DQID_ORDER : ORDER -> type(ORDER) ;
DQID_ORDERING : ORDERING -> type(ORDERING) ;
DQID_ORDINALITY : ORDINALITY -> type(ORDINALITY) ;
DQID_OTHERS : OTHERS -> type(OTHERS) ;
DQID_OUT : OUT -> type(OUT) ;
DQID_OUTER : OUTER -> type(OUTER) ;
DQID_OUTPUT : OUTPUT -> type(OUTPUT) ;
DQID_OVER : OVER -> type(OVER) ;
DQID_OVERLAPS : OVERLAPS -> type(OVERLAPS) ;
DQID_OVERLAY : OVERLAY -> type(OVERLAY) ;
DQID_OVERRIDING : OVERRIDING -> type(OVERRIDING) ;
DQID_PAD : PAD -> type(PAD) ;
DQID_PARAMETER : PARAMETER -> type(PARAMETER) ;
DQID_PARAMETER_MODE : PARAMETER_MODE -> type(PARAMETER_MODE) ;
DQID_PARAMETER_NAME : PARAMETER_NAME -> type(PARAMETER_NAME) ;
DQID_PARAMETER_ORDINAL_POSITION : PARAMETER_ORDINAL_POSITION -> type(PARAMETER_ORDINAL_POSITION) ;
DQID_PARAMETER_SPECIFIC_CATALOG : PARAMETER_SPECIFIC_CATALOG -> type(PARAMETER_SPECIFIC_CATALOG) ;
DQID_PARAMETER_SPECIFIC_NAME : PARAMETER_SPECIFIC_NAME -> type(PARAMETER_SPECIFIC_NAME) ;
DQID_PARAMETER_SPECIFIC_SCHEMA : PARAMETER_SPECIFIC_SCHEMA -> type(PARAMETER_SPECIFIC_SCHEMA) ;
DQID_PARTIAL : PARTIAL -> type(PARTIAL) ;
DQID_PARTITION : PARTITION -> type(PARTITION) ;
DQID_PASCAL : PASCAL -> type(PASCAL) ;
DQID_PASSING : PASSING -> type(PASSING) ;
DQID_PASSTHROUGH : PASSTHROUGH -> type(PASSTHROUGH) ;
DQID_PAST : PAST -> type(PAST) ;
DQID_PATH : PATH -> type(PATH) ;
DQID_PATTERN : PATTERN -> type(PATTERN) ;
DQID_PER : PER -> type(PER) ;
DQID_PERCENT : PERCENT -> type(PERCENT) ;
DQID_PERCENTILE_CONT : PERCENTILE_CONT -> type(PERCENTILE_CONT) ;
DQID_PERCENTILE_DISC : PERCENTILE_DISC -> type(PERCENTILE_DISC) ;
DQID_PERCENT_RANK : PERCENT_RANK -> type(PERCENT_RANK) ;
DQID_PERIOD : PERIOD -> type(PERIOD) ;
DQID_PERMUTE : PERMUTE -> type(PERMUTE) ;
DQID_PIVOT : PIVOT -> type(PIVOT) ;
DQID_PLACING : PLACING -> type(PLACING) ;
DQID_PLAN : PLAN -> type(PLAN) ;
DQID_PLI : PLI -> type(PLI) ;
DQID_PORTION : PORTION -> type(PORTION) ;
DQID_POSITION : POSITION -> type(POSITION) ;
DQID_POSITION_REGEX : POSITION_REGEX -> type(POSITION_REGEX) ;
DQID_POWER : POWER -> type(POWER) ;
DQID_PRECEDES : PRECEDES -> type(PRECEDES) ;
DQID_PRECEDING : PRECEDING -> type(PRECEDING) ;
DQID_PRECISION : PRECISION -> type(PRECISION) ;
DQID_PREPARE : PREPARE -> type(PREPARE) ;
DQID_PRESERVE : PRESERVE -> type(PRESERVE) ;
DQID_PREV : PREV -> type(PREV) ;
DQID_PRIMARY : PRIMARY -> type(PRIMARY) ;
DQID_PRIOR : PRIOR -> type(PRIOR) ;
DQID_PRIVILEGES : PRIVILEGES -> type(PRIVILEGES) ;
DQID_PROCEDURE : PROCEDURE -> type(PROCEDURE) ;
DQID_PUBLIC : PUBLIC -> type(PUBLIC) ;
DQID_QUALIFY : QUALIFY -> type(QUALIFY) ;
DQID_QUARTER : QUARTER -> type(QUARTER) ;
DQID_RANGE : RANGE -> type(RANGE) ;
DQID_RANK : RANK -> type(RANK) ;
DQID_READ : READ -> type(READ) ;
DQID_READS : READS -> type(READS) ;
DQID_REAL : REAL -> type(REAL) ;
DQID_RECURSIVE : RECURSIVE -> type(RECURSIVE) ;
DQID_REF : REF -> type(REF) ;
DQID_REFERENCES : REFERENCES -> type(REFERENCES) ;
DQID_REFERENCING : REFERENCING -> type(REFERENCING) ;
DQID_REGR_AVGX : REGR_AVGX -> type(REGR_AVGX) ;
DQID_REGR_AVGY : REGR_AVGY -> type(REGR_AVGY) ;
DQID_REGR_COUNT : REGR_COUNT -> type(REGR_COUNT) ;
DQID_REGR_INTERCEPT : REGR_INTERCEPT -> type(REGR_INTERCEPT) ;
DQID_REGR_R2 : REGR_R2 -> type(REGR_R2) ;
DQID_REGR_SLOPE : REGR_SLOPE -> type(REGR_SLOPE) ;
DQID_REGR_SXX : REGR_SXX -> type(REGR_SXX) ;
DQID_REGR_SXY : REGR_SXY -> type(REGR_SXY) ;
DQID_REGR_SYY : REGR_SYY -> type(REGR_SYY) ;
DQID_RELATIVE : RELATIVE -> type(RELATIVE) ;
DQID_RELEASE : RELEASE -> type(RELEASE) ;
DQID_REPEATABLE : REPEATABLE -> type(REPEATABLE) ;
DQID_REPLACE : REPLACE -> type(REPLACE) ;
DQID_RESET : RESET -> type(RESET) ;
DQID_RESPECT : RESPECT -> type(RESPECT) ;
DQID_RESTART : RESTART -> type(RESTART) ;
DQID_RESTRICT : RESTRICT -> type(RESTRICT) ;
DQID_RESULT : RESULT -> type(RESULT) ;
DQID_RETURN : RETURN -> type(RETURN) ;
DQID_RETURNED_CARDINALITY : RETURNED_CARDINALITY -> type(RETURNED_CARDINALITY) ;
DQID_RETURNED_LENGTH : RETURNED_LENGTH -> type(RETURNED_LENGTH) ;
DQID_RETURNED_OCTET_LENGTH : RETURNED_OCTET_LENGTH -> type(RETURNED_OCTET_LENGTH) ;
DQID_RETURNED_SQLSTATE : RETURNED_SQLSTATE -> type(RETURNED_SQLSTATE) ;
DQID_RETURNING : RETURNING -> type(RETURNING) ;
DQID_RETURNS : RETURNS -> type(RETURNS) ;
DQID_REVOKE : REVOKE -> type(REVOKE) ;
DQID_RIGHT : RIGHT -> type(RIGHT) ;
DQID_ROLE : ROLE -> type(ROLE) ;
DQID_ROLLBACK : ROLLBACK -> type(ROLLBACK) ;
DQID_ROLLUP : ROLLUP -> type(ROLLUP) ;
DQID_ROUTINE : ROUTINE -> type(ROUTINE) ;
DQID_ROUTINE_CATALOG : ROUTINE_CATALOG -> type(ROUTINE_CATALOG) ;
DQID_ROUTINE_NAME : ROUTINE_NAME -> type(ROUTINE_NAME) ;
DQID_ROUTINE_SCHEMA : ROUTINE_SCHEMA -> type(ROUTINE_SCHEMA) ;
DQID_ROW : ROW -> type(ROW) ;
DQID_ROW_COUNT : ROW_COUNT -> type(ROW_COUNT) ;
DQID_ROW_NUMBER : ROW_NUMBER -> type(ROW_NUMBER) ;
DQID_ROWS : ROWS -> type(ROWS) ;
DQID_RUNNING : RUNNING -> type(RUNNING) ;
DQID_SAVEPOINT : SAVEPOINT -> type(SAVEPOINT) ;
DQID_SCALAR : SCALAR -> type(SCALAR) ;
DQID_SCALE : SCALE -> type(SCALE) ;
DQID_SCHEMA : SCHEMA -> type(SCHEMA) ;
DQID_SCHEMA_NAME : SCHEMA_NAME -> type(SCHEMA_NAME) ;
DQID_SCOPE : SCOPE -> type(SCOPE) ;
DQID_SCOPE_CATALOGS : SCOPE_CATALOGS -> type(SCOPE_CATALOGS) ;
DQID_SCOPE_NAME : SCOPE_NAME -> type(SCOPE_NAME) ;
DQID_SCOPE_SCHEMA : SCOPE_SCHEMA -> type(SCOPE_SCHEMA) ;
DQID_SCROLL : SCROLL -> type(SCROLL) ;
DQID_SEARCH : SEARCH -> type(SEARCH) ;
DQID_SECOND : SECOND -> type(SECOND) ;
DQID_SECTION : SECTION -> type(SECTION) ;
DQID_SECURITY : SECURITY -> type(SECURITY) ;
DQID_SEEK : SEEK -> type(SEEK) ;
DQID_SELECT : SELECT -> type(SELECT) ;
DQID_SELF : SELF -> type(SELF) ;
DQID_SENSITIVE : SENSITIVE -> type(SENSITIVE) ;
DQID_SEQUENCE : SEQUENCE -> type(SEQUENCE) ;
DQID_SERIALIZABLE : SERIALIZABLE -> type(SERIALIZABLE) ;
DQID_SERVER : SERVER -> type(SERVER) ;
DQID_SERVER_NAME : SERVER_NAME -> type(SERVER_NAME) ;
DQID_SESSION : SESSION -> type(SESSION) ;
DQID_SESSION_USER : SESSION_USER -> type(SESSION_USER) ;
DQID_SET : SET -> type(SET) ;
DQID_SETS : SETS -> type(SETS) ;
DQID_SET_MINUS : SET_MINUS -> type(SET_MINUS) ;
DQID_SHOW : SHOW -> type(SHOW) ;
DQID_SIMILAR : SIMILAR -> type(SIMILAR) ;
DQID_SIMPLE : SIMPLE -> type(SIMPLE) ;
DQID_SIZE : SIZE -> type(SIZE) ;
DQID_SKIP_ : SKIP_ -> type(SKIP_) ;
DQID_SMALLINT : SMALLINT -> type(SMALLINT) ;
DQID_SOME : SOME -> type(SOME) ;
DQID_SOURCE : SOURCE -> type(SOURCE) ;
DQID_SPACE : SPACE -> type(SPACE) ;
DQID_SPECIFIC : SPECIFIC -> type(SPECIFIC) ;
DQID_SPECIFIC_NAME : SPECIFIC_NAME -> type(SPECIFIC_NAME) ;
DQID_SPECIFICTYPE : SPECIFICTYPE -> type(SPECIFICTYPE) ;
DQID_SQL : SQL -> type(SQL) ;
DQID_SQLEXCEPTION : SQLEXCEPTION -> type(SQLEXCEPTION) ;
DQID_SQLSTATE : SQLSTATE -> type(SQLSTATE) ;
DQID_SQLWARNING : SQLWARNING -> type(SQLWARNING) ;
DQID_SQL_BIGINT : SQL_BIGINT -> type(SQL_BIGINT) ;
DQID_SQL_BINARY : SQL_BINARY -> type(SQL_BINARY) ;
DQID_SQL_BIT : SQL_BIT -> type(SQL_BIT) ;
DQID_SQL_BLOB : SQL_BLOB -> type(SQL_BLOB) ;
DQID_SQL_BOOLEAN : SQL_BOOLEAN -> type(SQL_BOOLEAN) ;
DQID_SQL_CHAR : SQL_CHAR -> type(SQL_CHAR) ;
DQID_SQL_CLOB : SQL_CLOB -> type(SQL_CLOB) ;
DQID_SQL_DATE : SQL_DATE -> type(SQL_DATE) ;
DQID_SQL_DECIMAL : SQL_DECIMAL -> type(SQL_DECIMAL) ;
DQID_SQL_DOUBLE : SQL_DOUBLE -> type(SQL_DOUBLE) ;
DQID_SQL_FLOAT : SQL_FLOAT -> type(SQL_FLOAT) ;
DQID_SQL_INTEGER : SQL_INTEGER -> type(SQL_INTEGER) ;
DQID_SQL_INTERVAL_DAY : SQL_INTERVAL_DAY -> type(SQL_INTERVAL_DAY) ;
DQID_SQL_INTERVAL_DAY_TO_HOUR : SQL_INTERVAL_DAY_TO_HOUR -> type(SQL_INTERVAL_DAY_TO_HOUR) ;
DQID_SQL_INTERVAL_DAY_TO_MINUTE : SQL_INTERVAL_DAY_TO_MINUTE -> type(SQL_INTERVAL_DAY_TO_MINUTE) ;
DQID_SQL_INTERVAL_DAY_TO_SECOND : SQL_INTERVAL_DAY_TO_SECOND -> type(SQL_INTERVAL_DAY_TO_SECOND) ;
DQID_SQL_INTERVAL_HOUR : SQL_INTERVAL_HOUR -> type(SQL_INTERVAL_HOUR) ;
DQID_SQL_INTERVAL_HOUR_TO_MINUTE : SQL_INTERVAL_HOUR_TO_MINUTE -> type(SQL_INTERVAL_HOUR_TO_MINUTE) ;
DQID_SQL_INTERVAL_HOUR_TO_SECOND : SQL_INTERVAL_HOUR_TO_SECOND -> type(SQL_INTERVAL_HOUR_TO_SECOND) ;
DQID_SQL_INTERVAL_MINUTE : SQL_INTERVAL_MINUTE -> type(SQL_INTERVAL_MINUTE) ;
DQID_SQL_INTERVAL_MINUTE_TO_SECOND : SQL_INTERVAL_MINUTE_TO_SECOND -> type(SQL_INTERVAL_MINUTE_TO_SECOND) ;
DQID_SQL_INTERVAL_MONTH : SQL_INTERVAL_MONTH -> type(SQL_INTERVAL_MONTH) ;
DQID_SQL_INTERVAL_SECOND : SQL_INTERVAL_SECOND -> type(SQL_INTERVAL_SECOND) ;
DQID_SQL_INTERVAL_YEAR : SQL_INTERVAL_YEAR -> type(SQL_INTERVAL_YEAR) ;
DQID_SQL_INTERVAL_YEAR_TO_MONTH : SQL_INTERVAL_YEAR_TO_MONTH -> type(SQL_INTERVAL_YEAR_TO_MONTH) ;
DQID_SQL_LONGVARBINARY : SQL_LONGVARBINARY -> type(SQL_LONGVARBINARY) ;
DQID_SQL_LONGVARCHAR : SQL_LONGVARCHAR -> type(SQL_LONGVARCHAR) ;
DQID_SQL_LONGVARNCHAR : SQL_LONGVARNCHAR -> type(SQL_LONGVARNCHAR) ;
DQID_SQL_NCHAR : SQL_NCHAR -> type(SQL_NCHAR) ;
DQID_SQL_NCLOB : SQL_NCLOB -> type(SQL_NCLOB) ;
DQID_SQL_NUMERIC : SQL_NUMERIC -> type(SQL_NUMERIC) ;
DQID_SQL_NVARCHAR : SQL_NVARCHAR -> type(SQL_NVARCHAR) ;
DQID_SQL_REAL : SQL_REAL -> type(SQL_REAL) ;
DQID_SQL_SMALLINT : SQL_SMALLINT -> type(SQL_SMALLINT) ;
DQID_SQL_TIME : SQL_TIME -> type(SQL_TIME) ;
DQID_SQL_TIMESTAMP : SQL_TIMESTAMP -> type(SQL_TIMESTAMP) ;
DQID_SQL_TINYINT : SQL_TINYINT -> type(SQL_TINYINT) ;
DQID_SQL_TSI_DAY : SQL_TSI_DAY -> type(SQL_TSI_DAY) ;
DQID_SQL_TSI_FRAC_SECOND : SQL_TSI_FRAC_SECOND -> type(SQL_TSI_FRAC_SECOND) ;
DQID_SQL_TSI_HOUR : SQL_TSI_HOUR -> type(SQL_TSI_HOUR) ;
DQID_SQL_TSI_MICROSECOND : SQL_TSI_MICROSECOND -> type(SQL_TSI_MICROSECOND) ;
DQID_SQL_TSI_MINUTE : SQL_TSI_MINUTE -> type(SQL_TSI_MINUTE) ;
DQID_SQL_TSI_MONTH : SQL_TSI_MONTH -> type(SQL_TSI_MONTH) ;
DQID_SQL_TSI_QUARTER : SQL_TSI_QUARTER -> type(SQL_TSI_QUARTER) ;
DQID_SQL_TSI_SECOND : SQL_TSI_SECOND -> type(SQL_TSI_SECOND) ;
DQID_SQL_TSI_WEEK : SQL_TSI_WEEK -> type(SQL_TSI_WEEK) ;
DQID_SQL_TSI_YEAR : SQL_TSI_YEAR -> type(SQL_TSI_YEAR) ;
DQID_SQL_VARBINARY : SQL_VARBINARY -> type(SQL_VARBINARY) ;
DQID_SQL_VARCHAR : SQL_VARCHAR -> type(SQL_VARCHAR) ;
DQID_SQRT : SQRT -> type(SQRT) ;
DQID_START : START -> type(START) ;
DQID_STATE : STATE -> type(STATE) ;
DQID_STATEMENT : STATEMENT -> type(STATEMENT) ;
DQID_STATIC : STATIC -> type(STATIC) ;
DQID_STDDEV_POP : STDDEV_POP -> type(STDDEV_POP) ;
DQID_STDDEV_SAMP : STDDEV_SAMP -> type(STDDEV_SAMP) ;
DQID_STREAM : STREAM -> type(STREAM) ;
DQID_STRUCTURE : STRUCTURE -> type(STRUCTURE) ;
DQID_STYLE : STYLE -> type(STYLE) ;
DQID_SUBCLASS_ORIGIN : SUBCLASS_ORIGIN -> type(SUBCLASS_ORIGIN) ;
DQID_SUBMULTISET : SUBMULTISET -> type(SUBMULTISET) ;
DQID_SUBSET : SUBSET -> type(SUBSET) ;
DQID_SUBSTITUTE : SUBSTITUTE -> type(SUBSTITUTE) ;
DQID_SUBSTRING : SUBSTRING -> type(SUBSTRING) ;
DQID_SUBSTRING_REGEX : SUBSTRING_REGEX -> type(SUBSTRING_REGEX) ;
DQID_SUCCEEDS : SUCCEEDS -> type(SUCCEEDS) ;
DQID_SUM : SUM -> type(SUM) ;
DQID_SYMMETRIC : SYMMETRIC -> type(SYMMETRIC) ;
DQID_SYSTEM : SYSTEM -> type(SYSTEM) ;
DQID_SYSTEM_TIME : SYSTEM_TIME -> type(SYSTEM_TIME) ;
DQID_SYSTEM_USER : SYSTEM_USER -> type(SYSTEM_USER) ;
DQID_TABLE : TABLE -> type(TABLE) ;
DQID_TABLE_NAME : TABLE_NAME -> type(TABLE_NAME) ;
DQID_TABLESAMPLE : TABLESAMPLE -> type(TABLESAMPLE) ;
DQID_TEMPORARY : TEMPORARY -> type(TEMPORARY) ;
DQID_THEN : THEN -> type(THEN) ;
DQID_TIES : TIES -> type(TIES) ;
DQID_TIME : TIME -> type(TIME) ;
DQID_TIMESTAMP : TIMESTAMP -> type(TIMESTAMP) ;
DQID_TIMESTAMPADD : TIMESTAMPADD -> type(TIMESTAMPADD) ;
DQID_TIMESTAMPDIFF : TIMESTAMPDIFF -> type(TIMESTAMPDIFF) ;
DQID_TIMEZONE_HOUR : TIMEZONE_HOUR -> type(TIMEZONE_HOUR) ;
DQID_TIMEZONE_MINUTE : TIMEZONE_MINUTE -> type(TIMEZONE_MINUTE) ;
DQID_TINYINT : TINYINT -> type(TINYINT) ;
DQID_TO : TO -> type(TO) ;
DQID_TOP_LEVEL_COUNT : TOP_LEVEL_COUNT -> type(TOP_LEVEL_COUNT) ;
DQID_TRAILING : TRAILING -> type(TRAILING) ;
DQID_TRANSACTION : TRANSACTION -> type(TRANSACTION) ;
DQID_TRANSACTIONS_ACTIVE : TRANSACTIONS_ACTIVE -> type(TRANSACTIONS_ACTIVE) ;
DQID_TRANSACTIONS_COMMITTED : TRANSACTIONS_COMMITTED -> type(TRANSACTIONS_COMMITTED) ;
DQID_TRANSACTIONS_ROLLED_BACK : TRANSACTIONS_ROLLED_BACK -> type(TRANSACTIONS_ROLLED_BACK) ;
DQID_TRANSFORM : TRANSFORM -> type(TRANSFORM) ;
DQID_TRANSFORMS : TRANSFORMS -> type(TRANSFORMS) ;
DQID_TRANSLATE : TRANSLATE -> type(TRANSLATE) ;
DQID_TRANSLATE_REGEX : TRANSLATE_REGEX -> type(TRANSLATE_REGEX) ;
DQID_TRANSLATION : TRANSLATION -> type(TRANSLATION) ;
DQID_TREAT : TREAT -> type(TREAT) ;
DQID_TRIGGER : TRIGGER -> type(TRIGGER) ;
DQID_TRIGGER_CATALOG : TRIGGER_CATALOG -> type(TRIGGER_CATALOG) ;
DQID_TRIGGER_NAME : TRIGGER_NAME -> type(TRIGGER_NAME) ;
DQID_TRIGGER_SCHEMA : TRIGGER_SCHEMA -> type(TRIGGER_SCHEMA) ;
DQID_TRIM : TRIM -> type(TRIM) ;
DQID_TRIM_ARRAY : TRIM_ARRAY -> type(TRIM_ARRAY) ;
DQID_TRUE : TRUE -> type(TRUE) ;
DQID_TRUNCATE : TRUNCATE -> type(TRUNCATE) ;
DQID_TYPE : TYPE -> type(TYPE) ;
DQID_UESCAPE : UESCAPE -> type(UESCAPE) ;
DQID_UNBOUNDED : UNBOUNDED -> type(UNBOUNDED) ;
DQID_UNCOMMITTED : UNCOMMITTED -> type(UNCOMMITTED) ;
DQID_UNCONDITIONAL : UNCONDITIONAL -> type(UNCONDITIONAL) ;
DQID_UNDER : UNDER -> type(UNDER) ;
DQID_UNION : UNION -> type(UNION) ;
DQID_UNIQUE : UNIQUE -> type(UNIQUE) ;
DQID_UNKNOWN : UNKNOWN -> type(UNKNOWN) ;
DQID_UNPIVOT : UNPIVOT -> type(UNPIVOT) ;
DQID_UNNAMED : UNNAMED -> type(UNNAMED) ;
DQID_UNNEST : UNNEST -> type(UNNEST) ;
DQID_UPDATE : UPDATE -> type(UPDATE) ;
DQID_UPPER : UPPER -> type(UPPER) ;
DQID_UPSERT : UPSERT -> type(UPSERT) ;
DQID_USAGE : USAGE -> type(USAGE) ;
DQID_USER : USER -> type(USER) ;
DQID_USER_DEFINED_TYPE_CATALOG : USER_DEFINED_TYPE_CATALOG -> type(USER_DEFINED_TYPE_CATALOG) ;
DQID_USER_DEFINED_TYPE_CODE : USER_DEFINED_TYPE_CODE -> type(USER_DEFINED_TYPE_CODE) ;
DQID_USER_DEFINED_TYPE_NAME : USER_DEFINED_TYPE_NAME -> type(USER_DEFINED_TYPE_NAME) ;
DQID_USER_DEFINED_TYPE_SCHEMA : USER_DEFINED_TYPE_SCHEMA -> type(USER_DEFINED_TYPE_SCHEMA) ;
DQID_USING : USING -> type(USING) ;
DQID_UTF8 : UTF8 -> type(UTF8) ;
DQID_UTF16 : UTF16 -> type(UTF16) ;
DQID_UTF32 : UTF32 -> type(UTF32) ;
DQID_VALUE : VALUE -> type(VALUE) ;
DQID_VALUES : VALUES -> type(VALUES) ;
DQID_VALUE_OF : VALUE_OF -> type(VALUE_OF) ;
DQID_VAR_POP : VAR_POP -> type(VAR_POP) ;
DQID_VAR_SAMP : VAR_SAMP -> type(VAR_SAMP) ;
DQID_VARBINARY : VARBINARY -> type(VARBINARY) ;
DQID_VARCHAR : VARCHAR -> type(VARCHAR) ;
DQID_VARYING : VARYING -> type(VARYING) ;
DQID_VERSION : VERSION -> type(VERSION) ;
DQID_VERSIONING : VERSIONING -> type(VERSIONING) ;
DQID_VIEW : VIEW -> type(VIEW) ;
DQID_WEEK : WEEK -> type(WEEK) ;
DQID_WHEN : WHEN -> type(WHEN) ;
DQID_WHENEVER : WHENEVER -> type(WHENEVER) ;
DQID_WHERE : WHERE -> type(WHERE) ;
DQID_WIDTH_BUCKET : WIDTH_BUCKET -> type(WIDTH_BUCKET) ;
DQID_WINDOW : WINDOW -> type(WINDOW) ;
DQID_WITH : WITH -> type(WITH) ;
DQID_WITHIN : WITHIN -> type(WITHIN) ;
DQID_WITHOUT : WITHOUT -> type(WITHOUT) ;
DQID_WORK : WORK -> type(WORK) ;
DQID_WRAPPER : WRAPPER -> type(WRAPPER) ;
DQID_WRITE : WRITE -> type(WRITE) ;
DQID_XML : XML -> type(XML) ;
DQID_YEAR : YEAR -> type(YEAR) ;
DQID_ZONE : ZONE -> type(ZONE) ;
DQID_DATABASES : DATABASES -> type(DATABASES) ;
DQID_SCHEMAS : SCHEMAS -> type(SCHEMAS) ;
DQID_LOCALSORT : LOCALSORT -> type(LOCALSORT) ;
DQID_ARROW : ARROW -> type(ARROW) ;
DQID_CACHE : CACHE -> type(CACHE) ;
DQID_TABLES : TABLES -> type(TABLES) ;
DQID_VIEWS : VIEWS -> type(VIEWS) ;
DQID_USE : USE -> type(USE) ;
DQID_FILES : FILES -> type(FILES) ;
DQID_PARTITIONS : PARTITIONS -> type(PARTITIONS) ;
DQID_REFRESH : REFRESH -> type(REFRESH) ;
DQID_METADATA : METADATA -> type(METADATA) ;
DQID_IF : IF -> type(IF) ;
DQID_STORE : STORE -> type(STORE) ;
DQID_SINGLE : SINGLE -> type(SINGLE) ;
DQID_WRITER : WRITER -> type(WRITER) ;
DQID_HASH : HASH -> type(HASH) ;
DQID_ROUNDROBIN : ROUNDROBIN -> type(ROUNDROBIN) ;
DQID_DISTRIBUTE : DISTRIBUTE -> type(DISTRIBUTE) ;
DQID_STRIPED : STRIPED -> type(STRIPED) ;
DQID_CONSOLIDATED : CONSOLIDATED -> type(CONSOLIDATED) ;
DQID_ACCELERATION : ACCELERATION -> type(ACCELERATION) ;
DQID_AGGREGATE : AGGREGATE -> type(AGGREGATE) ;
DQID_LAYOUT : LAYOUT -> type(LAYOUT) ;
DQID_REFLECTION : REFLECTION -> type(REFLECTION) ;
DQID_DIMENSIONS : DIMENSIONS -> type(DIMENSIONS) ;
DQID_RAW : RAW -> type(RAW) ;
DQID_DISPLAY : DISPLAY -> type(DISPLAY) ;
DQID_ENABLE : ENABLE -> type(ENABLE) ;
DQID_DISABLE : DISABLE -> type(DISABLE) ;
DQID_FORGET : FORGET -> type(FORGET) ;
DQID_PDS : PDS -> type(PDS) ;
DQID_VDS : VDS -> type(VDS) ;
DQID_DATASET : DATASET -> type(DATASET) ;
DQID_STATUS : STATUS -> type(STATUS) ;
DQID_LOAD : LOAD -> type(LOAD) ;
DQID_MATERIALIZATION : MATERIALIZATION -> type(MATERIALIZATION) ;
DQID_APPROXIMATE : APPROXIMATE -> type(APPROXIMATE) ;
DQID_APPROX : APPROX -> type(APPROX) ;
DQID_STATS : STATS -> type(STATS) ;
DQID_COMPACT : COMPACT -> type(COMPACT) ;
DQID_AUTO : AUTO -> type(AUTO) ;
DQID_AVOID : AVOID -> type(AVOID) ;
DQID_PROMOTION : PROMOTION -> type(PROMOTION) ;
DQID_FORCE : FORCE -> type(FORCE) ;
DQID_LAZY : LAZY -> type(LAZY) ;
DQID_MAINTAIN : MAINTAIN -> type(MAINTAIN) ;
DQID_MISSING : MISSING -> type(MISSING) ;
DQID_COLUMNS : COLUMNS -> type(COLUMNS) ;
DQID_CHANGE : CHANGE -> type(CHANGE) ;
DQID_CLEAR : CLEAR -> type(CLEAR) ;
DQID_JOB : JOB -> type(JOB) ;
DQID_HISTORY : HISTORY -> type(HISTORY) ;
DQID_REFLECTIONS : REFLECTIONS -> type(REFLECTIONS) ;
DQID_FOLDER : FOLDER -> type(FOLDER) ;
DQID_FOLDERS : FOLDERS -> type(FOLDERS) ;
DQID_FUNCTIONS : FUNCTIONS -> type(FUNCTIONS) ;
DQID_MODIFY : MODIFY -> type(MODIFY) ;
DQID_MANAGE : MANAGE -> type(MANAGE) ;
DQID_GRANTS : GRANTS -> type(GRANTS) ;
DQID_QUERY : QUERY -> type(QUERY) ;
DQID_DATASETS : DATASETS -> type(DATASETS) ;
DQID_ANALYZE : ANALYZE -> type(ANALYZE) ;
DQID_STATISTICS : STATISTICS -> type(STATISTICS) ;
DQID_COMPUTE : COMPUTE -> type(COMPUTE) ;
DQID_OWNERSHIP : OWNERSHIP -> type(OWNERSHIP) ;
DQID_OPERATE : OPERATE -> type(OPERATE) ;
DQID_MONITOR : MONITOR -> type(MONITOR) ;
DQID_ORG : ORG -> type(ORG) ;
DQID_CLOUD : CLOUD -> type(CLOUD) ;
DQID_PROJECT : PROJECT -> type(PROJECT) ;
DQID_ROUTE : ROUTE -> type(ROUTE) ;
DQID_QUEUE : QUEUE -> type(QUEUE) ;
DQID_ENGINE : ENGINE -> type(ENGINE) ;
DQID_SCRIPT : SCRIPT -> type(SCRIPT) ;
DQID_PASSWORD : PASSWORD -> type(PASSWORD) ;
DQID_POLICY : POLICY -> type(POLICY) ;
DQID_ACCESS : ACCESS -> type(ACCESS) ;
DQID_UNSET : UNSET -> type(UNSET) ;
DQID_LEARNING : LEARNING -> type(LEARNING) ;
DQID_BRANCH : BRANCH -> type(BRANCH) ;
DQID_BRANCHES : BRANCHES -> type(BRANCHES) ;
DQID_TAG : TAG -> type(TAG) ;
DQID_TAGS : TAGS -> type(TAGS) ;
DQID_LOG : LOG -> type(LOG) ;
DQID_LOGS : LOGS -> type(LOGS) ;
DQID_APPLICATION : APPLICATION -> type(APPLICATION) ;
DQID_OAUTH : OAUTH -> type(OAUTH) ;
DQID_PROVIDER : PROVIDER -> type(PROVIDER) ;
DQID_TOKENS : TOKENS -> type(TOKENS) ;
DQID_CONFIGURE : CONFIGURE -> type(CONFIGURE) ;
DQID_ASSIGN : ASSIGN -> type(ASSIGN) ;
DQID_SNAPSHOT : SNAPSHOT -> type(SNAPSHOT) ;
DQID_REFERENCE : REFERENCE -> type(REFERENCE) ;
DQID_LOCATION : LOCATION -> type(LOCATION) ;
DQID_FIELD : FIELD -> type(FIELD) ;
DQID_STRUCT : STRUCT -> type(STRUCT) ;
DQID_LIST : LIST -> type(LIST) ;
DQID_MASKING : MASKING -> type(MASKING) ;
DQID_UPLOAD : UPLOAD -> type(UPLOAD) ;
DQID_OPTIMIZE : OPTIMIZE -> type(OPTIMIZE) ;
DQID_REWRITE : REWRITE -> type(REWRITE) ;
DQID_MANIFESTS : MANIFESTS -> type(MANIFESTS) ;
DQID_BIN_PACK : BIN_PACK -> type(BIN_PACK) ;
DQID_SORT : SORT -> type(SORT) ;
DQID_MAX_FILE_SIZE_MB : MAX_FILE_SIZE_MB -> type(MAX_FILE_SIZE_MB) ;
DQID_MIN_FILE_SIZE_MB : MIN_FILE_SIZE_MB -> type(MIN_FILE_SIZE_MB) ;
DQID_MIN_INPUT_FILES : MIN_INPUT_FILES -> type(MIN_INPUT_FILES) ;
DQID_TARGET_FILE_SIZE_MB : TARGET_FILE_SIZE_MB -> type(TARGET_FILE_SIZE_MB) ;
DQID_COPY : COPY -> type(COPY) ;
DQID_REGEX : REGEX -> type(REGEX) ;
DQID_FILE_FORMAT : FILE_FORMAT -> type(FILE_FORMAT) ;
DQID_DATE_FORMAT : DATE_FORMAT -> type(DATE_FORMAT) ;
DQID_TIME_FORMAT : TIME_FORMAT -> type(TIME_FORMAT) ;
DQID_TIMESTAMP_FORMAT : TIMESTAMP_FORMAT -> type(TIMESTAMP_FORMAT) ;
DQID_TRIM_SPACE : TRIM_SPACE -> type(TRIM_SPACE) ;
DQID_NULL_IF : NULL_IF -> type(NULL_IF) ;
DQID_RECORD_DELIMITER : RECORD_DELIMITER -> type(RECORD_DELIMITER) ;
DQID_FIELD_DELIMITER : FIELD_DELIMITER -> type(FIELD_DELIMITER) ;
DQID_QUOTE_CHAR : QUOTE_CHAR -> type(QUOTE_CHAR) ;
DQID_ESCAPE_CHAR : ESCAPE_CHAR -> type(ESCAPE_CHAR) ;
DQID_EMPTY_AS_NULL : EMPTY_AS_NULL -> type(EMPTY_AS_NULL) ;
DQID_ON_ERROR : ON_ERROR -> type(ON_ERROR) ;
DQID_EXTRACT_HEADER : EXTRACT_HEADER -> type(EXTRACT_HEADER) ;
DQID_SKIP_LINES : SKIP_LINES -> type(SKIP_LINES) ;
DQID_VACUUM : VACUUM -> type(VACUUM) ;
DQID_EXPIRE : EXPIRE -> type(EXPIRE) ;
DQID_SNAPSHOTS : SNAPSHOTS -> type(SNAPSHOTS) ;
DQID_OLDER_THAN : OLDER_THAN -> type(OLDER_THAN) ;
DQID_RETAIN_LAST : RETAIN_LAST -> type(RETAIN_LAST) ;
DQID_TBLPROPERTIES : TBLPROPERTIES -> type(TBLPROPERTIES) ;
DQID_COMMITS_OLDER_THAN : COMMITS_OLDER_THAN -> type(COMMITS_OLDER_THAN) ;
DQID_RETAIN_LAST_COMMITS : RETAIN_LAST_COMMITS -> type(RETAIN_LAST_COMMITS) ;
DQID_REMOVE : REMOVE -> type(REMOVE) ;
DQID_ORPHAN : ORPHAN -> type(ORPHAN) ;
DQID_SNAPSHOTS_OLDER_THAN : SNAPSHOTS_OLDER_THAN -> type(SNAPSHOTS_OLDER_THAN) ;
DQID_RETAIN_LAST_SNAPSHOTS : RETAIN_LAST_SNAPSHOTS -> type(RETAIN_LAST_SNAPSHOTS) ;
DQID_PIPE : PIPE -> type(PIPE) ;
DQID_DEDUPE_LOOKBACK_PERIOD : DEDUPE_LOOKBACK_PERIOD -> type(DEDUPE_LOOKBACK_PERIOD) ;
DQID_NOTIFICATION_PROVIDER : NOTIFICATION_PROVIDER -> type(NOTIFICATION_PROVIDER) ;
DQID_NOTIFICATION_QUEUE_REFERENCE : NOTIFICATION_QUEUE_REFERENCE -> type(NOTIFICATION_QUEUE_REFERENCE) ;
DQID_BATCH : BATCH -> type(BATCH) ;
DQID_PIPE_EXECUTION_RUNNING : PIPE_EXECUTION_RUNNING -> type(PIPE_EXECUTION_RUNNING) ;
DQID_DRY : DRY -> type(DRY) ;
DQID_RUN : RUN -> type(RUN) ;
DQID_CONFLICT : CONFLICT -> type(CONFLICT) ;
DQID_OVERWRITE : OVERWRITE -> type(OVERWRITE) ;
DQID_DISCARD : DISCARD -> type(DISCARD) ;
DQID_CANCEL : CANCEL -> type(CANCEL) ;
DQID_EXPORT : EXPORT -> type(EXPORT) ;
DQID_PERMISSION : PERMISSION -> type(PERMISSION) ;
DQID_MIN_REPLICAS : MIN_REPLICAS -> type(MIN_REPLICAS) ;
DQID_MAX_REPLICAS : MAX_REPLICAS -> type(MAX_REPLICAS) ;
DQID_CLUSTER : CLUSTER -> type(CLUSTER) ;
DQID_CLUSTERING : CLUSTERING -> type(CLUSTERING) ;
DQID_CONCURRENT : CONCURRENT -> type(CONCURRENT) ;
DQID_TRY_CONVERT_FROM : TRY_CONVERT_FROM -> type(TRY_CONVERT_FROM) ;
DQID_UNSIGNED_INTEGER_LITERAL : UNSIGNED_INTEGER_LITERAL -> type(UNSIGNED_INTEGER_LITERAL) ;
DQID_APPROX_NUMERIC_LITERAL : APPROX_NUMERIC_LITERAL -> type(APPROX_NUMERIC_LITERAL) ;
DQID_DECIMAL_NUMERIC_LITERAL : DECIMAL_NUMERIC_LITERAL -> type(DECIMAL_NUMERIC_LITERAL) ;
DQID_BINARY_STRING_LITERAL : BINARY_STRING_LITERAL -> type(BINARY_STRING_LITERAL) ;
DQID_QUOTED_STRING : QUOTED_STRING -> type(QUOTED_STRING) ;
DQID_PREFIXED_STRING_LITERAL : PREFIXED_STRING_LITERAL -> type(PREFIXED_STRING_LITERAL) ;
DQID_UNICODE_STRING_LITERAL : UNICODE_STRING_LITERAL -> type(UNICODE_STRING_LITERAL) ;
DQID_UNICODE_QUOTED_ESCAPE_CHAR : UNICODE_QUOTED_ESCAPE_CHAR -> type(UNICODE_QUOTED_ESCAPE_CHAR) ;
DQID_LPAREN : LPAREN -> type(LPAREN) ;
DQID_RPAREN : RPAREN -> type(RPAREN) ;
DQID_L_CONTAINS : L_CONTAINS -> type(L_CONTAINS), pushMode(LUCENE_DEFAULT) ;
DQID_LBRACE_D : LBRACE_D -> type(LBRACE_D) ;
DQID_LBRACE_T : LBRACE_T -> type(LBRACE_T) ;
DQID_LBRACE_TS : LBRACE_TS -> type(LBRACE_TS) ;
DQID_LBRACE_FN : LBRACE_FN -> type(LBRACE_FN) ;
DQID_LBRACE : LBRACE -> type(LBRACE) ;
DQID_RBRACE : RBRACE -> type(RBRACE) ;
DQID_LBRACKET : LBRACKET -> type(LBRACKET) ;
DQID_RBRACKET : RBRACKET -> type(RBRACKET) ;
DQID_SEMICOLON : SEMICOLON -> type(SEMICOLON) ;
DQID_DOT : DOT -> type(DOT) ;
DQID_COMMA : COMMA -> type(COMMA) ;
DQID_EQ : EQ -> type(EQ) ;
DQID_GT : GT -> type(GT) ;
DQID_LT : LT -> type(LT) ;
DQID_HOOK : HOOK -> type(HOOK) ;
DQID_COLON : COLON -> type(COLON) ;
DQID_LE : LE -> type(LE) ;
DQID_GE : GE -> type(GE) ;
DQID_NE : NE -> type(NE) ;
DQID_NE2 : NE2 -> type(NE2) ;
DQID_PLUS : PLUS -> type(PLUS) ;
DQID_MINUS : MINUS -> type(MINUS) ;
DQID_STAR : STAR -> type(STAR) ;
DQID_SLASH : SLASH -> type(SLASH) ;
DQID_PERCENT_REMAINDER : PERCENT_REMAINDER -> type(PERCENT_REMAINDER) ;
DQID_CONCAT : CONCAT -> type(CONCAT) ;
DQID_NAMED_ARGUMENT_ASSIGNMENT : NAMED_ARGUMENT_ASSIGNMENT -> type(NAMED_ARGUMENT_ASSIGNMENT) ;
DQID_DOUBLE_PERIOD : DOUBLE_PERIOD -> type(DOUBLE_PERIOD) ;
DQID_QUOTE : QUOTE -> type(QUOTE) ;
DQID_DOUBLE_QUOTE : DOUBLE_QUOTE -> type(DOUBLE_QUOTE) ;
DQID_VERTICAL_BAR : VERTICAL_BAR -> type(VERTICAL_BAR) ;
DQID_CARET : CARET -> type(CARET) ;
DQID_DOLLAR : DOLLAR -> type(DOLLAR) ;
DQID_SKIP1 : SKIP1 -> skip ;
DQID_SKIP2 : SKIP2 -> skip ;
DQID_SKIP3 : SKIP3 -> skip ;
DQID_SKIP4 : SKIP4 -> skip ;
DQID_SKIP5 : SKIP5 -> skip ;
DQID_HINT_BEG : HINT_BEG -> type(HINT_BEG) ;
DQID_COMMENT_END : COMMENT_END -> type(COMMENT_END) ;
DQID_MORE0 : MORE0 -> more, pushMode(IN_FORMAL_COMMENT) ;
DQID_MORE1 : MORE1 -> more, pushMode(IN_MULTI_LINE_COMMENT) ;
DQID_SINGLE_LINE_COMMENT : SINGLE_LINE_COMMENT -> channel(HIDDEN) ;
QUOTED_IDENTIFIER : '"' ((~["\n\r] | '""'))+ '"'  ;
DQID_COLLATION_ID : COLLATION_ID -> type(COLLATION_ID) ;
DQID_IDENTIFIER : IDENTIFIER -> type(IDENTIFIER) ;
DQID_UNICODE_QUOTED_IDENTIFIER : UNICODE_QUOTED_IDENTIFIER -> type(UNICODE_QUOTED_IDENTIFIER) ;
DQID_BEL : BEL -> type(BEL) ;

mode LUCENE_RANGE;
LUCENE_RANGE_SKIP0 : SKIP0 -> skip ;
RANGE_TO : T O  ;
RANGEIN_END : ']' -> mode(LUCENE_DEFAULT) ;
RANGEEX_END : '}' -> mode(LUCENE_DEFAULT) ;
RANGE_QUOTED : '"' ((~["] | '\\"'))+ '"'  ;
RANGE_GOOP : (~[ \]}])+  ;

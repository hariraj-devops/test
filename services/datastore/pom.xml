<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2017-2019 Dremio Corporation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.dremio.services</groupId>
    <artifactId>dremio-services-parent</artifactId>
    <version>${revision}</version>
  </parent>
  <artifactId>dremio-services-datastore</artifactId>
  <name>Services - Datastore</name>

  <dependencies>
    <dependency>
      <groupId>com.dremio</groupId>
      <artifactId>dremio-common</artifactId>
    </dependency>
    <dependency>
      <groupId>com.dremio</groupId>
      <artifactId>dremio-common</artifactId>
      <classifier>tests</classifier>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.dremio</groupId>
      <artifactId>dremio-protocol</artifactId>
    </dependency>
    <dependency>
      <groupId>com.dremio.services</groupId>
      <artifactId>dremio-services-base-rpc</artifactId>
    </dependency>
    <dependency>
      <groupId>com.dremio.services</groupId>
      <artifactId>dremio-services-fabric-rpc</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-analyzers-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-queries</artifactId>
    </dependency>
    <dependency>
      <!-- needed for loading old index segments after upgrades -->
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-backward-codecs</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>cz.jirutka.rsql</groupId>
      <artifactId>rsql-parser</artifactId>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.esotericsoftware</groupId>
      <artifactId>kryo</artifactId>
      <version>3.0.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.rocksdb</groupId>
      <artifactId>rocksdbjni</artifactId>
      <version>${rocksdb.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-buffer</artifactId>
    </dependency>
    <dependency>
      <groupId>io.protostuff</groupId>
      <artifactId>protostuff-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.protostuff</groupId>
      <artifactId>protostuff-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.protostuff</groupId>
      <artifactId>protostuff-json</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-mock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>com.dremio</groupId>
            <artifactId>dremio-common</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <type>test-jar</type>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>classpath-scanning</id>
            <goals>
              <goal>java</goal>
            </goals>
            <phase>${buildtimescan.phase}</phase>
            <configuration>
              <mainClass>com.dremio.common.scanner.BuildTimeScan</mainClass>
              <includePluginDependencies>true</includePluginDependencies>
              <arguments>
                <argument>${project.build.outputDirectory}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <configuration>
          <protoSourceRoot>${basedir}/src/main/protobuf</protoSourceRoot>
          <excludes>
            <exclude>kvstore.proto</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>generate-protobuf</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
          <execution>
            <id>generate-test-protobuf</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <phase>generate-test-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.dremio.build-tools</groupId>
        <artifactId>dremio-protostuff-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-sources</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <protoModules>
                <protoModule>
                  <source>src/main/protobuf/kvstore.proto</source>
                  <outputDir>${project.build.directory}/generated-sources/protostuff</outputDir>
                  <output>com/dremio/protostuff/compiler/dremio_java_bean.java.stg</output>
                  <options>
                    <property>
                      <name>generate_field_map</name>
                      <value>true</value>
                    </property>
                    <property>
                      <name>builder_pattern</name>
                      <value>true</value>
                    </property>
                  </options>
                </protoModule>
              </protoModules>
            </configuration>
          </execution>
          <execution>
            <id>generate-protostuff-test</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>generate-test-sources</phase>
            <configuration>
              <protoModules>
                <protoModule>
                  <source>src/test/protostuff</source>
                  <outputDir>${project.build.directory}/generated-test-sources/protostuff</outputDir>
                  <output>java_bean</output>
                  <encoding>UTF-8</encoding>
                  <options>
                    <property>
                      <name>generate_field_map</name>
                      <value>true</value>
                    </property>
                    <property>
                      <name>primitive_numbers_if_optional</name>
                      <value>true</value>
                    </property>
                    <property>
                      <name>builder_pattern</name>
                      <value>true</value>
                    </property>
                    <property/>
                  </options>
                </protoModule>
              </protoModules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>proto-jar-resources</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classesDirectory>${project.basedir}/src/main/protobuf</classesDirectory>
              <classifier>proto</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>

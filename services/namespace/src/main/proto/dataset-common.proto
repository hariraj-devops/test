/*
 * Copyright (C) 2017-2019 Dremio Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Dataset messages/enums used by job.proto
 */
syntax="proto2";
package com.dremio.service.namespace.dataset.proto;

option java_package = "com.dremio.service.namespace.dataset.proto";
option optimize_for = SPEED;

option java_outer_classname = "DatasetCommonProtobuf";

import "namespace-file-common.proto";

/// Dataset types
enum DatasetType {
  INVALID_DATASET_TYPE = 0;
  VIRTUAL_DATASET = 1;
  PHYSICAL_DATASET = 2;
  PHYSICAL_DATASET_SOURCE_FILE = 3;
  PHYSICAL_DATASET_SOURCE_FOLDER = 4;
  PHYSICAL_DATASET_HOME_FILE = 5;
  PHYSICAL_DATASET_HOME_FOLDER = 6;
  OTHERS = 7;
}

message FieldOrigin {
  required string name = 1;
  repeated Origin origins = 2;
}

message Origin {
  repeated string table = 1;
  required string columnName = 2;
  required bool derived = 3;
}

message ParentDataset { // TODO: better name DatasetPath?
  repeated string datasetPath = 1;
  optional int32 level = 2; // 1 if its a parent, 2 if its parent of parent and so on
  optional DatasetType type = 3;
  optional string versionContext = 4;
}

// view info
// a field of a view
message ViewFieldType {
  required string name = 1;
  required string type = 2;
  optional int32 precision = 3;
  optional int32 scale = 4;
  optional string startUnit = 5;
  optional string endUnit = 6;
  optional int32 fractionalSecondPrecision = 7;
  optional bool isNullable = 8;
  optional string typeFamily = 9;
  optional bytes serializedField = 10;
}

enum ScanStatsType {
  NO_EXACT_ROW_COUNT = 1;
  EXACT_ROW_COUNT = 2;
}

message ScanStats {
  optional ScanStatsType type = 1;
  optional int64 record_count = 2;
  optional float cpu_cost = 3;
  optional float disk_cost = 4;
  optional double scan_factor = 5;
}

message ReadDefinition {
  // last time the definition was updated
  optional int64 last_refresh_date = 1;

  // minimal plugin specific signature to identify whether the dataset has changed since last updated.
  optional bytes read_signature = 2;

  repeated string partitionColumns = 3;

  // in order
  repeated string sortColumns = 4;

  optional ScanStats scanStats = 5;

  // source specific information about this dataset
  optional bytes extendedProperty = 6;

  optional int64 splitVersion = 7; // increasing number assigned to map read definition to its latest splits

  optional ScanStats manifestScanStats = 8;
}

message TableProperties {
  required string table_property_name = 1;
  optional string table_property_value = 2;
}

message IcebergMetadata {
  optional string metadata_file_location = 1; // path to metadata json file
  optional int64 snapshot_id = 2; // current snapshot id
  optional string partition_stats_file = 3; // path to partition stats file for the latest snapshot
  optional string tableUuid = 4; // unique id assigned to the iceberg table
  optional com.dremio.service.namespace.file.proto.FileType file_type = 5;  // file type
  optional bytes partition_specs = 6 [deprecated=true];
  optional string json_schema = 7;
  optional bytes partition_specs_json_map = 8;
  optional ScanStats deleteStats = 9;
  optional ScanStats deleteManifestStats = 10;
  optional ScanStats equalityDeleteStats = 11;
  optional int64 partition_stats_file_size = 12; // size of partition stats file
  optional string sort_order = 13;
  repeated TableProperties table_properties = 14; // iceberg table properties
  optional int32 default_partition_spec_id = 15; // default partition spec id
}

message UserDefinedSchemaSettings {
  optional bytes dropped_columns = 1;
  optional bytes modified_columns = 2;
  optional bool schema_learning_enabled = 3 [default = true];
  optional bool schema_imposed_output = 4 [default = false];
}

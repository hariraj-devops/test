#
# Copyright (C) 2017-2019 Dremio Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
name: "VAR_POP"
signatures:
 -
  returnType: "NUMERIC"
  parameters:
   - description: "The set of records to calculate variance for."
     kind: "REGULAR"
     type: "NUMERIC"
     name: "numeric_expression"
   - description: "An optional expression that groups rows into partitions. You can\
      \ specify a single expression or a comma-separated list of expressions. For\
      \ example, `PARTITION BY column1, column3, \u2026`."
     kind: OPTIONAL
     name: partition_expression
     type: CHARACTERS
   - description: "An expression that specifies the order of the rows within each partition.\
      \ You can specify a single expression or a comma-separated list of expressions.\
      \ For example, `PARTITION BY column1, column3, \u2026` ORDER BY column3;"
     kind: OPTIONAL
     name: order_expression
     type: CHARACTERS
   - description: "Can be cumulative ('PARTITION BY column1 ORDER BY column2 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW')\
      \ or sliding ('PARTITION BY column1 ORDER BY column2 ROWS BETWEEN ? PRECEDING AND ? FOLLOWING') window frame.\
      \ In order to use window frames effectively, it's essential to have the data within the window arranged in a specific way.\ 
      \ Consequently, including the ORDER BY clause inside the OVER clause becomes necessary for proper window frame syntax."
     kind: OPTIONAL
     name: window_frame
     type: CHARACTERS
  description: "Returns the population variance of the records."
  snippetOverride: "VAR_POP(${1|ALL,DISTINCT|} ${2:expression})"
  sampleCodes:
   - call: "SELECT VAR_POP(ALL pop) FROM \"zips.json\""
     result: "1.5167869917122573E8"
   - call: "SELECT city, state, pop, \nVAR_POP(pop) OVER (PARTITION BY state ORDER\
       \ BY city RANGE BETWEEN CURRENT ROW  AND UNBOUNDED FOLLOWING)\nFROM Samples.\"samples.dremio.com\".\"zips.json\"\n"
     result: "city, state, pop, EXPR$3\n-- 98791, AK, 5345, 3.183470165355581E7\n-- AKHIOK, AK, 13309,\
       \ 3.1964736864852075E7\n-- AKIACHAK, AK, 481, 3.1556568197284516E7\n-- ... \n"
   - call: "SELECT city, state, pop, \nVAR_POP(pop) OVER (PARTITION BY state ORDER\
       \ BY city ROWS BETWEEN 1 PRECEDING  AND 2 FOLLOWING)\nFROM Samples.\"samples.dremio.com\".\"zips.json\"\n"
     result: "city, state, pop, EXPR$3\n-- 98791, AK, 5345, 2.796015288888889E7\n-- AKHIOK, AK, 13309,\
       \ 2.7931748E7\n-- AKIACHAK, AK, 481, 3.1007691E7\n-- ... \n"
dremioVersion: "1.0+"
functionCategories:
 - "AGGREGATE"
 - "WINDOW"
description: "Returns the population variance of non-NULL records."

#
# Copyright (C) 2017-2019 Dremio Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
name: "NDV"
signatures:
 -
  returnType: "NUMERIC"
  parameters:
   -
    kind: "REGULAR"
    type: "NUMERIC"
    name: "expression"
    description: "Enter an expression to evaluate the number of records. This value can either be a column name or *."
  description: "Returns an estimate of the total number of records for the specified column."
  sampleCodes:
   -
    call: "SELECT NDV(column_name)"
    result: "163"
 -
  returnType: "NUMERIC"
  parameters:
   - kind: "REGULAR"
     type: "NUMERIC"
     name: "expression"
     description: "Enter an expression to evaluate the number of records. This value can either be a column name or *."
   - kind: "REGULAR"
     type: "NUMERIC"
     name: "scale"
     description: "Optional argument that maps to a precision used by the HyperLogLog (HLL) algorithm based on the mapping formula: `precision = scale +8`. Enter an NUMERIC in the range from 1 to 10."
   - description: "An optional expression that groups rows into partitions. You can\
      \ specify a single expression or a comma-separated list of expressions. For\
      \ example, `PARTITION BY column1, column3, \u2026`."
     kind: OPTIONAL
     name: partition_expression
     type: CHARACTERS
   - description: "An expression that specifies the order of the rows within each partition.\
      \ You can specify a single expression or a comma-separated list of expressions.\
      \ For example, `PARTITION BY column1, column3, \u2026` ORDER BY column3;"
     kind: OPTIONAL
     name: order_expression
     type: CHARACTERS
   - description: "Can be cumulative ('PARTITION BY column1 ORDER BY column2 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW')\
      \ or sliding ('PARTITION BY column1 ORDER BY column2 ROWS BETWEEN ? PRECEDING AND ? FOLLOWING') window frame.\
      \ In order to use window frames effectively, it's essential to have the data within the window arranged in a specific way.\ 
      \ Consequently, including the ORDER BY clause inside the OVER clause becomes necessary for proper window frame syntax."
     kind: OPTIONAL
     name: window_frame
     type: CHARACTERS
  description: "Returns an estimate of total number of records for the specified expression."
  sampleCodes:
   -
    call: "SELECT NDV(column_name, 1)"
    result: "162"
dremioVersion: "1.0+"
functionCategories:
 - "AGGREGATE"
 - "WINDOW"
description: "Returns an approximate distinct value number, similar to `COUNT(DISTINCT col)`. NDV can return results faster than using the combination of COUNT and DISTINCT while using a constant amount of memory, resulting in less memory usage for columns with high cardinality."
